{
    "version": "https://jsonfeed.org/version/1",
    "title": "Finecloud",
    "description": "",
    "home_page_url": "https://www.finecloud.ch",
    "feed_url": "https://www.finecloud.ch/feed.json",
    "user_comment": "",
    "author": {
        "name": "Finecloud"
    },
    "items": [
        {
            "id": "https://www.finecloud.ch/take-care-of-your-ssh-keys.html",
            "url": "https://www.finecloud.ch/take-care-of-your-ssh-keys.html",
            "title": "Take care of your SSH Keys",
            "summary": "Did you know that your ssh Client sends the server all your public keys, one by one, until the server accepts one, when you try to authenticate via public key? Don't believe me? Try it out yourself: ssh whoami.filippo.io Someone could use this to find&hellip;",
            "content_html": "<p>Did you know that your ssh Client sends the server all your public keys, one by one, until the server accepts one, when you try to authenticate via public key?</p>\n<p>Don't believe me? Try it out yourself: </p>\n<pre><code>ssh whoami.filippo.io</code></pre>\n<p>Someone could use this to find out which public keys you have installed on your Client. You don't what this, don't you? So how can we avoid the leak of our Clients Public Keys? There is an easy fix, just add this at the end of your <code>~/.ssh/config</code> file:</p>\n<pre><code>Host *</code><br><code>    PubkeyAuthentication no</code><br><code>    IdentitiesOnly yes</code></pre>\n<p>Also make sure you don't use just one key for all connections. I hope don't use one password for all your logins - so why should you use one key for all your logins?</p>\n<p>It is recommended to use one specific key for each host:</p>\n<pre><code>Host github.com</code><br><code>    PubkeyAuthentication yes</code><br><code>    IdentityFile ~/.ssh/github_id_ed25519</code></pre>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tools",
                   "ssh",
                   "shell",
                   "security",
                   "network",
                   "linux",
                   "bash"
            ],
            "date_published": "2022-11-22T13:59:20+01:00",
            "date_modified": "2022-11-22T14:10:16+01:00"
        },
        {
            "id": "https://www.finecloud.ch/opnsense-backup-to-nextcloud.html",
            "url": "https://www.finecloud.ch/opnsense-backup-to-nextcloud.html",
            "title": "Backup OPNsense to Nextcloud",
            "summary": "What is OPNsense? OPNsense® is an open source, easy-to-use and easy-to-build FreeBSD based firewall and routing platform. OPNsense includes most of the features available in expensive commercial firewalls, and more in many cases. It brings the rich feature set of commercial offerings with the benefits&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1ggu9idgo5i\">What is OPNsense?</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5j\">Why OPNsense?</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5k\">Backup your OPNsense configuration to your Nextcloud</a>\n<ul>\n<li><a href=\"#mcetoc_1ggu9idgo5l\">1. Create a new user</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5m\">2. Create an Access Token</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5n\">3. Install Nextcloud Backup Plugin</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5o\">4. Connect OPNsense with Nextcloud</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5p\">5. Verify the Configuration Upload</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1ggu9idgo5i\">What is OPNsense?</h2>\n<p><a class=\"reference external\" href=\"https://opnsense.org\">OPNsense®</a> is an open source, easy-to-use and easy-to-build FreeBSD based firewall and routing platform.</p>\n<p>OPNsense includes most of the features available in expensive commercial firewalls, and more in many cases. It brings the rich feature set of commercial offerings with the benefits of open and verifiable sources.</p>\n<h2 id=\"mcetoc_1ggu9idgo5j\">Why OPNsense?</h2>\n<p>The feature set of OPNsense includes high-end features such as forward caching proxy, traffic shaping, intrusion detection and easy OpenVPN client setup. The latest release is based on a recent FreeBSD for long-term support and uses a newly developed MVC-framework based on Phalcon. OPNsense’s focus on security brings unique features such as the option to use LibreSSL instead of OpenSSL (selectable in the GUI).<br><br>The robust and reliable update mechanism gives OPNsense the ability to provide important security updates in a timely fashion.</p>\n<h2 id=\"mcetoc_1ggu9idgo5k\">Backup your OPNsense configuration to your Nextcloud</h2>\n<p>In OPNsense you can backup your configuration directly and automatically to Nextcloud, using the backup feature. Every backup will be encrypted with the same algorithm used in the manual backup so it’s quite easy to restore to a new installed machine.</p>\n<p>After set-up, the backup feature will run a first backup of the OPNsense configuration file. Then, if the configuration is subsequently changed, a new backup will be run. Only one backup is run per day after configuration changes.</p>\n<div id=\"step-create-a-new-user\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5l\">1. Create a new user<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-create-a-new-user\" title=\"Permalink to this headline\"></a></h3>\n<p>Click on the user icon top right and click “Users”. In the new page, enter an username and a password into the boxes and click create to create a new user.</p>\n</div>\n<div id=\"step-create-an-access-token\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5m\">2. Create an Access Token<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-create-an-access-token\" title=\"Permalink to this headline\"></a></h3>\n<figure class=\"post__image\">Close the modal dialog and remove the default files. Then open the Settings menu (also in the menu top right). Switch to security and generate a App password.\n<img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.19.23.png\" alt=\"\" width=\"931\" height=\"933\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-2xl.png 1600w\"></figure><br>\n<p>Copy and store the generated password.</p>\n</div>\n<div id=\"step-connect-opnsense-with-nextcloud\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5n\">3. Install Nextcloud Backup Plugin</h3>\n<p>Go to <em><span class=\"menuselection\">System ‣ Firmware ‣ Plugins</span></em> and install the <em>os-nextcloud-backup</em> plugin</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.24.39.png\" alt=\"\" width=\"1915\" height=\"537\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-2xl.png 1600w\"></figure>\n<h3 id=\"mcetoc_1ggu9idgo5o\">4. Connect OPNsense with Nextcloud<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-connect-opnsense-with-nextcloud\" title=\"Permalink to this headline\"></a></h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.32.01.png\" alt=\"\" width=\"727\" height=\"432\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-2xl.png 1600w\"></figure><br>\n<p>Scroll to the Nextcloud Section in <em><span class=\"menuselection\">System ‣ Configuration ‣ Backups</span></em> and enter the following values:</p>\n<div class=\"wy-table-responsive\">\n<table class=\"docutils align-default\"><colgroup><col><col></colgroup>\n<tbody>\n<tr class=\"row-odd\">\n<td>\n<p>Enable</p>\n</td>\n<td>\n<p>checked</p>\n</td>\n</tr>\n<tr class=\"row-even\">\n<td>\n<p>URL</p>\n</td>\n<td>\n<p>Base URL of your Nextcloud installation like <a class=\"reference external\" href=\"https://cloud.example.com\">https://cloud.example.com</a></p>\n</td>\n</tr>\n<tr class=\"row-odd\">\n<td>\n<p>User</p>\n</td>\n<td>\n<p>your choosen username</p>\n</td>\n</tr>\n<tr class=\"row-even\">\n<td>\n<p>Password</p>\n</td>\n<td>\n<p>paste your app password from step 2</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Encryption Passowrd</p>\n</td>\n<td>\n<p>define a Password to encrypt the config file</p>\n</td>\n</tr>\n<tr class=\"row-odd\">\n<td>\n<p>Backup Directory</p>\n</td>\n<td>\n<p>a name consisting of alphanumeric characters (keep default)</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"step-verify-the-configuration-upload\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5p\">5. Verify the Configuration Upload<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-verify-the-configuration-upload\" title=\"Permalink to this headline\"></a></h3>\n<p>When everything worked, you will see the newly created directory after saving the settings:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.38.41.png\" alt=\"\" width=\"292\" height=\"114\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-2xl.png 1600w\"></figure>\n<figure class=\"post__image\">If you open it, you will see at lease a single backed up configuration file:\n<img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.39.22.png\" alt=\"\" width=\"819\" height=\"351\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-2xl.png 1600w\"></figure><br>\n<p id=\"references\" class=\"rubric\"></p>\n</div>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tools",
                   "opnsense",
                   "nextcloud",
                   "network",
                   "linux",
                   "firewall",
                   "backup"
            ],
            "date_published": "2022-11-02T19:12:00+01:00",
            "date_modified": "2022-11-03T09:49:00+01:00"
        },
        {
            "id": "https://www.finecloud.ch/maven-getting-started.html",
            "url": "https://www.finecloud.ch/maven-getting-started.html",
            "title": "Maven getting started",
            "summary": "What is Maven? Declarative build management tool for automated builds Standardized directory structure Declarative dependency management Works with an XML control file (POM - Project Object Model) Open source, written in Java, for Java projects Pure command line tool IDEs offer integration Why Maven? Uniform&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1ggd2611qj0\">What is Maven?</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj1\">Why Maven?</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj2\">Components</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj3\">Build lifecycle</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj4\">POM (Project Object Model) file</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj5\">Project coordinates</a></li>\n<li><a href=\"#mcetoc_1ggd443kjlt\">Packaging</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj6\">Naming conventions</a>\n<ul>\n<li><a href=\"#mcetoc_1ggd2611qj7\">groupId</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj8\">artifactId</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1ggd443kjlu\">Standard directory layout</a></li>\n<li><a href=\"#mcetoc_1ggd8kpb6ob\">Dependencies</a>\n<ul>\n<li><a href=\"#mcetoc_1ggd8kpb6oc\">Scope</a></li>\n<li><a href=\"#mcetoc_1ggd9jq2mqi\">Transitive dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1ggd9jq2mqj\">Project inheritance</a></li>\n<li><a href=\"#mcetoc_1ggd9jq2mqk\">Project aggregation (Multi Module)</a></li>\n<li><a href=\"#mcetoc_1ggd9tb9jr2\">Properties</a></li>\n<li><a href=\"#mcetoc_1ggv3g3smf5\">Version structure</a>\n<ul>\n<li><a href=\"#mcetoc_1ggv3g3smf6\">SNAPSHOT Version</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1ggv3g3smf7\">Version resolution transitive dependencies</a></li>\n<li><a href=\"#mcetoc_1ggv3g3smf8\">Keeping POM clean</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1ggd2611qj0\">What is Maven?</h2>\n<ul>\n<li>Declarative build management tool for automated builds</li>\n<li>Standardized directory structure</li>\n<li>Declarative dependency management</li>\n<li>Works with an XML control file (POM - Project Object Model)</li>\n<li>Open source, written in Java, for Java projects</li>\n<li>Pure command line tool</li>\n<li>IDEs offer integration</li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj1\">Why Maven?</h2>\n<ul>\n<li>Uniform build in the project, but also across multiple projects.</li>\n<li>Dependency management</li>\n<li>Independent of an IDE</li>\n<li>Basis for rapid familiarization of new developers</li>\n<li>Basis for Continuous Integration/Continuous Deployment (DevOps)</li>\n<li>Industry standard for Java applications</li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj2\">Components</h2>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/Screenshot-2022-10-27-at-17.17.05.png\" alt=\"\" width=\"851\" height=\"555\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1ggd2611qj3\">Build lifecycle</h2>\n<ul>\n<li>Each Build Phase has its own Plugin. M<span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">aven delegates the work of each build phase to plugins.</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Plugins provide Goals, which do the actual work</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Goals can be assigned to one or more build phases</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Certain plugins/goals are assigned by Maven by default</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">You can assign plugins/goals to specific build phases in the project object model itself</span></li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj4\">POM (Project Object Model) file</h2>\n<ul>\n<li>The POM declaratively describes the build including all dependencies.</li>\n<li>POM is an XML file that describes the Maven project.</li>\n<li>Maven project usually creates an artifact (jar, war, ear, ...)</li>\n</ul>\n<p>Minimal POM example file:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"php\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;?</span>xml version=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"1.0\"</span> encoding=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span><span class=\"hljs-meta\" style=\"color: #bbb529;\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://maven.apache.org/POM/4.0.0\"</span>\n         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modelVersion</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>com.test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">project</span>&gt;</span></pre>\n<h2 id=\"mcetoc_1ggd2611qj5\">Project coordinates</h2>\n<p>The project coordinates consists of groupId, artifactId and the version</p>\n<ul>\n<li>Maven project coordinates form a kind of address for a Maven artifact</li>\n<li>They consist of:<br><code>&lt;groupId&gt;com.test&lt;/groupId&gt;</code><br><code>&lt;artifactId&gt;my-app&lt;/artifactId&gt;</code><br><code>&lt;version&gt;1.0.0&lt;/version&gt;</code></li>\n<li>The combination of the three parts shall be globally unique!</li>\n<li>Using the project coordinates, the dependencies are fetched from the repository fetched</li>\n<li>All three parts are mandatory</li>\n</ul>\n<h2 id=\"mcetoc_1ggd443kjlt\">Packaging</h2>\n<ul>\n<li>Packaging defines the shape of the generated artifact</li>\n<li>Packaging:<br><code>&lt;packaging&gt;jar&lt;/packaging&gt;</code></li>\n<li>Not specified: default is jar.</li>\n<li>Other possible values: pom, maven-plugin, ejb, war, ear, rar</li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj6\">Naming conventions</h2>\n<h3 id=\"mcetoc_1ggd2611qj7\">groupId</h3>\n<ul>\n<li>Identifies the project globally → unique namespace required.</li>\n<li>The Java package naming conventions are used.</li>\n<li>Reverse Internet domain name, which one has under one's own control<br>has, e.g. com.example</li>\n<li>After that, freely selectable, uniquely within domain, e.g. com.example.dev</li>\n</ul>\n<h3 id=\"mcetoc_1ggd2611qj8\">artifactId</h3>\n<ul>\n<li>Identifies the concrete build artifact (jar, war, ear, ...).</li>\n<li>E.g. todoapp</li>\n</ul>\n<h2 id=\"mcetoc_1ggd443kjlu\">Standard directory layout</h2>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/Screenshot-2022-10-27-at-18.09.08.png\" alt=\"\" width=\"283\" height=\"430\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-2xl.png 1600w\"></figure>\n<p>Legend to the layout:</p>\n<table class=\"table table-striped\" border=\"1\">\n<tbody>\n<tr class=\"a\">\n<td align=\"left\"><code>src/main/java</code></td>\n<td align=\"left\">Application/Library sources</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/main/resources</code></td>\n<td align=\"left\">Application/Library resources</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/main/filters</code></td>\n<td align=\"left\">Resource filter files</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/main/webapp</code></td>\n<td align=\"left\">Web application sources</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/test/java</code></td>\n<td align=\"left\">Test sources</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/test/resources</code></td>\n<td align=\"left\">Test resources</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/test/filters</code></td>\n<td align=\"left\">Test resource filter files</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/it</code></td>\n<td align=\"left\">Integration Tests (primarily for plugins)</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/assembly</code></td>\n<td align=\"left\">Assembly descriptors</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/site</code></td>\n<td align=\"left\">Site</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>LICENSE.txt</code></td>\n<td align=\"left\">Project's license</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>NOTICE.txt</code></td>\n<td align=\"left\">Notices and attributions required by libraries that the project depends on</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>README.txt</code></td>\n<td align=\"left\">Project's readme</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mcetoc_1ggd8kpb6ob\">Dependencies</h2>\n<ul>\n<li>Dependency management is the central function of Maven</li>\n<li>Management of the required libraries</li>\n<li>Dependencies required by libraries themselves are added automatically (without specifying them) → transitive dependencies.</li>\n<li>Maven automatically downloads dependencies and transitive dependencies.</li>\n<li>The downloaded dependencies are available for compilation.<br>available</li>\n<li>The downloaded dependencies are packed into the artifacts</li>\n</ul>\n<p>example of a dependency declaration in a POM file:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependencies</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">scope</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependencies</span>&gt;</span></pre>\n<p>You can also list all dependencies with this command: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\"># mvn dependency:tree                                                                                                          </span>\n[INFO] Scanning <span class=\"hljs-keyword\" style=\"color: #cc7832;\">for</span> projects...\n[INFO] \n[INFO] --------------------------&lt; com.example:demo &gt;--------------------------\n[INFO] Building demo 0.0.1-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-dependency-plugin:3.3.0:tree (default-cli) @ demo ---\n[INFO] com.example:demo:jar:0.0.1-SNAPSHOT\n[INFO] +- org.springframework.boot:spring-boot-starter-web:jar:2.7.5:compile\n[INFO] |  +- org.springframework.boot:spring-boot-starter:jar:2.7.5:compile\n[INFO] |  |  +- org.springframework.boot:spring-boot-starter-logging:jar:2.7.5:compile\n[INFO] |  |  |  +- ch.qos.logback:logback-classic:jar:1.2.11:compile\n[INFO] |  |  |  |  \\- ch.qos.logback:logback-core:jar:1.2.11:compile\n[INFO] |  |  |  +- org.apache.logging.log4j:<span class=\"hljs-built_in\">log</span>4j-to-slf4j:jar:2.17.2:compile\n[INFO] |  |  |  |  \\- org.apache.logging.log4j:<span class=\"hljs-built_in\">log</span>4j-api:jar:2.17.2:compile\n[INFO] |  |  |  \\- org.slf4j:jul-to-slf4j:jar:1.7.36:compile\n[INFO] |  |  +- jakarta.annotation:jakarta.annotation-api:jar:1.3.5:compile\n[INFO] |  |  \\- org.yaml:snakeyaml:jar:1.30:compile\n[INFO] |  +- org.springframework.boot:spring-boot-starter-json:jar:2.7.5:compile\n[INFO] |  |  +- com.fasterxml.jackson.core:jackson-databind:jar:2.13.4.2:compile\n[INFO] |  |  |  +- com.fasterxml.jackson.core:jackson-annotations:jar:2.13.4:compile\n[INFO] |  |  |  \\- com.fasterxml.jackson.core:jackson-core:jar:2.13.4:compile\n[INFO] |  |  +- com.fasterxml.jackson.datatype:jackson-datatype-jdk8:jar:2.13.4:compile\n[INFO] |  |  +- com.fasterxml.jackson.datatype:jackson-datatype-jsr310:jar:2.13.4:compile\n[INFO] |  |  \\- com.fasterxml.jackson.module:jackson-module-parameter-names:jar:2.13.4:compile\n[INFO] |  +- org.springframework.boot:spring-boot-starter-tomcat:jar:2.7.5:compile\n[INFO] |  |  +- org.apache.tomcat.embed:tomcat-embed-core:jar:9.0.68:compile\n[INFO] |  |  +- org.apache.tomcat.embed:tomcat-embed-el:jar:9.0.68:compile\n[INFO] |  |  \\- org.apache.tomcat.embed:tomcat-embed-websocket:jar:9.0.68:compile\n[INFO] |  +- org.springframework:spring-web:jar:5.3.23:compile\n[INFO] |  |  \\- org.springframework:spring-beans:jar:5.3.23:compile\n[INFO] |  \\- org.springframework:spring-webmvc:jar:5.3.23:compile\n[INFO] |     +- org.springframework:spring-aop:jar:5.3.23:compile\n[INFO] |     +- org.springframework:spring-context:jar:5.3.23:compile\n[INFO] |     \\- org.springframework:spring-expression:jar:5.3.23:compile\n[INFO] +- org.springframework.boot:spring-boot-devtools:jar:2.7.5:runtime\n[INFO] |  +- org.springframework.boot:spring-boot:jar:2.7.5:compile\n[INFO] |  \\- org.springframework.boot:spring-boot-autoconfigure:jar:2.7.5:compile\n[INFO] \\- org.springframework.boot:spring-boot-starter-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.springframework.boot:spring-boot-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.springframework.boot:spring-boot-test-autoconfigure:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- com.jayway.jsonpath:json-path:jar:2.7.0:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- net.minidev:json-smart:jar:2.4.8:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  \\- net.minidev:accessors-smart:jar:2.4.8:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |     \\- org.ow2.asm:asm:jar:9.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- org.slf4j:slf4j-api:jar:1.7.36:compile\n[INFO]    +- jakarta.xml.bind:jakarta.xml.bind-api:jar:2.3.3:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- jakarta.activation:jakarta.activation-api:jar:1.2.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.assertj:assertj-core:jar:3.22.0:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.hamcrest:hamcrest:jar:2.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.junit.jupiter:junit-jupiter:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- org.junit.jupiter:junit-jupiter-api:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  +- org.opentest4j:opentest4j:jar:1.2.0:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  +- org.junit.platform:junit-platform-commons:jar:1.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  \\- org.apiguardian:apiguardian-api:jar:1.1.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- org.junit.jupiter:junit-jupiter-params:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- org.junit.jupiter:junit-jupiter-engine:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |     \\- org.junit.platform:junit-platform-engine:jar:1.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.mockito:mockito-core:jar:4.5.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- net.bytebuddy:byte-buddy:jar:1.12.18:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- net.bytebuddy:byte-buddy-agent:jar:1.12.18:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- org.objenesis:objenesis:jar:3.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.mockito:mockito-junit-jupiter:jar:4.5.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.skyscreamer:jsonassert:jar:1.5.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- com.vaadin.external.google:android-json:jar:0.0.20131108.vaadin1:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.springframework:spring-core:jar:5.3.23:compile\n[INFO]    |  \\- org.springframework:spring-jcl:jar:5.3.23:compile\n[INFO]    +- org.springframework:spring-test:jar:5.3.23:<span class=\"hljs-built_in\">test</span>\n[INFO]    \\- org.xmlunit:xmlunit-core:jar:2.9.0:<span class=\"hljs-built_in\">test</span>\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.256 s\n[INFO] Finished at: 2022-10-27T19:47:12+02:00\n[INFO] ------------------------------------------------------------------------\n</pre>\n<h3 id=\"mcetoc_1ggd8kpb6oc\">Scope</h3>\n<p>The scope of a dependency specifies in which classpaths it is provided by Maven.<br>(classpaths change depending on the build phase):</p>\n<ul>\n<li><strong>compile</strong>: Default Scope, Dependencies are available in all classpaths</li>\n<li><strong>test</strong>: Only during test</li>\n<li><strong>provided</strong>: Only available in compile and test classpaths, dependency must be provided at runtime (e.g., by the servlet container)</li>\n<li><strong>runtime</strong>: Only during runtime and test, but not for compile</li>\n<li><strong>other</strong> (not so important)</li>\n</ul>\n<h3 id=\"mcetoc_1ggd9jq2mqi\">Transitive dependencies</h3>\n<ul>\n<li>Dependencies required by the dependencies we declare.</li>\n<li>Are automatically downloaded by Maven and added to the classpath</li>\n<li>Attention: You can also use these transitive dependencies directly in the code.<br>→ please do not do this!</li>\n<li>Explicitly enter each dependency that you use yourself in the code as a dependency in the POM</li>\n</ul>\n<p>Finding out if you are using a transitive dependency in your code:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\"># mvn dependency:analyze                                                                                                             </span>\n[INFO] Scanning <span class=\"hljs-keyword\" style=\"color: #cc7832;\">for</span> projects...\n[INFO] \n[INFO] --------------------------&lt; com.example:demo &gt;--------------------------\n[INFO] Building demo 0.0.1-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] &gt;&gt;&gt; maven-dependency-plugin:3.3.0:analyze (default-cli) &gt; <span class=\"hljs-built_in\">test</span>-compile @ demo &gt;&gt;&gt;\n[INFO] \n[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ demo ---\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered resources.\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered properties files.\n[INFO] Copying 1 resource\n[INFO] Copying 0 resource\n[INFO] \n[INFO] --- maven-compiler-plugin:3.10.1:compile (default-compile) @ demo ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 1 <span class=\"hljs-built_in\">source</span> file to /Users/Dave/Downloads/demo/target/classes\n[INFO] \n[INFO] --- maven-resources-plugin:3.2.0:<span class=\"hljs-built_in\">test</span>Resources (default-testResources) @ demo ---\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered resources.\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered properties files.\n[INFO] skip non existing resourceDirectory /Users/Dave/Downloads/demo/src/<span class=\"hljs-built_in\">test</span>/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.10.1:<span class=\"hljs-built_in\">test</span>Compile (default-testCompile) @ demo ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 1 <span class=\"hljs-built_in\">source</span> file to /Users/Dave/Downloads/demo/target/<span class=\"hljs-built_in\">test</span>-classes\n[INFO] \n[INFO] &lt;&lt;&lt; maven-dependency-plugin:3.3.0:analyze (default-cli) &lt; <span class=\"hljs-built_in\">test</span>-compile @ demo &lt;&lt;&lt;\n[INFO] \n[INFO] \n[INFO] --- maven-dependency-plugin:3.3.0:analyze (default-cli) @ demo ---\n[WARNING] Used undeclared dependencies found:\n[WARNING]    org.springframework.boot:spring-boot:jar:2.7.5:compile\n[WARNING]    org.junit.jupiter:junit-jupiter-api:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[WARNING]    org.springframework.boot:spring-boot-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[WARNING]    org.springframework.boot:spring-boot-autoconfigure:jar:2.7.5:compile\n[WARNING] Unused declared dependencies found:\n[WARNING]    org.springframework.boot:spring-boot-starter-web:jar:2.7.5:compile\n[WARNING]    org.springframework.boot:spring-boot-devtools:jar:2.7.5:runtime\n[WARNING]    org.springframework.boot:spring-boot-starter-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.113 s\n[INFO] Finished at: 2022-10-27T19:50:29+02:00\n[INFO] ------------------------------------------------------------------------\n</pre>\n<h2 id=\"mcetoc_1ggd9jq2mqj\">Project inheritance</h2>\n<p>POMs an also inherit, this is for example needed for a Spring Boot-Application. This allows you for example, to standardize the libraries used and their versions across multiple projects or Maven modules.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/inheritance.png\" alt=\"\" width=\"1024\" height=\"754\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/inheritance-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1ggd9jq2mqk\">Project aggregation (Multi Module)</h2>\n<p>Also a POM can aggregate multiple POMs as Modules</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/Screenshot-2022-10-27-at-20.01.00.png\" alt=\"\" width=\"275\" height=\"400\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-2xl.png 1600w\"></figure>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>com.test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>example-maven-multimodule<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">packaging</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">packaging</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modules</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>module1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>module2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>module3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modules</span>&gt;</span></pre>\n<h2 id=\"mcetoc_1ggd9tb9jr2\">Properties</h2>\n<p>Properties are placeholders and can be addressed via ${&lt;propertyname&gt;}.</p>\n<p>Example:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">properties</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">java.version</span>&gt;</span>1.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">java.version</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">commons-pool2.version</span>&gt;</span>2.6.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">commons-pool2.version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">properties</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.apache.commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>commons-pool2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>${commons-pool2.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span></pre>\n<h2 id=\"mcetoc_1ggv3g3smf5\">Version structure</h2>\n<ul>\n<li>A version must always be specified</li>\n<li>Maven basically leaves the structure of a version free</li>\n<li>Recommended approach: semantic versioning (<a href=\"https://semver.org/\">https://semver.org/</a>)\n<ul>\n<li><code>&lt;Major&gt;.&lt;Minor&gt;.&lt;Bugfix&gt;-&lt;Qualifier&gt;-&lt;Buildnumber&gt;</code></li>\n<li>Major: increment when API changes.</li>\n<li>Minor: increment if new features are included, but same API.</li>\n<li>Bugfix: increment, if only something was fixed</li>\n<li>Qualifier: Optional.</li>\n<li>Build number: Optional.</li>\n<li>Example: &lt;version&gt;2.4.18&lt;/version&gt;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mcetoc_1ggv3g3smf6\">SNAPSHOT Version</h3>\n<ul>\n<li>The qualifier SNAPSHOT is used during the development of a version<br>is used</li>\n<li>Example: 1.0-SNAPSHOT → means that the 1.0 version of the software is being<br>is being developed</li>\n<li>A version with SNAPSHOT qualifier is always considered to be older than<br>the same one without the qualifier</li>\n<li>Special rules apply for version resolution, Maven usually fetches a snapshot version once per day from the repository, unless you specify \"-U\".</li>\n<li>Example: <code>mvn -U clean install</code> also fetches the most recent snapshot<br>versions from the repository</li>\n</ul>\n<h2 id=\"mcetoc_1ggv3g3smf7\">Version resolution transitive dependencies</h2>\n<ul>\n<li>Multiple transitive dependencies can contain the same artifact in different<br>different versions, but can only have exactly one version of a transitive dependency in the classpath.</li>\n<li>Resolution is performed according to the \"nearest definition\" principle:\n<ul>\n<li>The version in the dependency tree that is closest to one's own project<br>Tree is taken</li>\n<li>If two versions are equally close, the one found first is taken</li>\n<li>Example: Dependency D appears twice in the dependency tree:\n<ul>\n<li>A → B → C → D (version 2.0)</li>\n<li>A → E → D (version 1.0)</li>\n<li>Version 1.0 of D is taken, since closer to own project (A).</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>One can explicitly specify a particular version of a transitive dependency<br>specify:\n<ul>\n<li>Include it explicitly as a dependency in your own POM.</li>\n<li>Via Dependency Management</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mcetoc_1ggv3g3smf8\">Keeping POM clean</h2>\n<ul>\n<li>Find out unclean dependencies:\n<ul>\n<li><code>mvn dependency:analyze</code></li>\n<li>check out <a href=\"https://maven.apache.org/plugins/maven-dependency-plugin/analyze-mojo.html\">https://maven.apache.org/plugins/maven-dependency-plugin/analyze-mojo.html</a></li>\n</ul>\n</li>\n<li>Lists dependencies that:\n<ul>\n<li>Used and declared (--&gt; ok)</li>\n<li>Used but are not declared in their own pom (--&gt; nok)</li>\n<li>Are not used but are declared (--&gt; potentially remnant, clean up)</li>\n</ul>\n</li>\n</ul>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "software development",
                   "maven",
                   "java",
                   "dev"
            ],
            "date_published": "2022-10-27T17:01:47+02:00",
            "date_modified": "2022-11-03T16:59:36+01:00"
        },
        {
            "id": "https://www.finecloud.ch/threema-backup-to-nextcloud.html",
            "url": "https://www.finecloud.ch/threema-backup-to-nextcloud.html",
            "title": "Threema Safe backup to Nextcloud",
            "summary": "Did you know that Threema allows you, to backup your Threema app to a custom Threema Safe server? You can for example use your Nextcloud to keep your Threema backups safe. I recommend to create a new Nextcloud user account only for the purpose of&hellip;",
            "content_html": "<p>Did you know that Threema allows you, to backup your Threema app to a custom Threema Safe server? You can for example use your Nextcloud to keep your Threema backups safe.</p>\n<h2>Configure Nextcloud</h2>\n<p>I recommend to create a new Nextcloud user account only for the purpose of the Threema backup. If this account gets in wrong hands, all other Nextcloud files are still save. You can share your Threema backup folder with your regular Nextcloud user account if you want to have direct access to your Threema backups.</p>\n<ol>\n<li>Create a new Nextcloud user, e.g. threma-safe and generate a complex password with your favorite password tool.</li>\n<li>Sign in with the newly created Nextcloud user and delete the example files. Create a new folder \"threma-safe\" with a subfolder \"backups\".</li>\n<li>In the \"threma-safe\" folder create a config file (yes, no file-ending!) with the following content:\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\">   {\n   <span class=\"hljs-attr\">\"maxBackupBytes\"</span>: <span class=\"hljs-number\" style=\"color: #6897bb;\">52428800</span>,\n   <span class=\"hljs-attr\">\"retentionDays\"</span>: <span class=\"hljs-number\" style=\"color: #6897bb;\">180</span>\n    }</pre>\n</li>\n<li>If you have 2FA active (I hope you do so) you need to generate a new app password. Go to <em>Settings -&gt; Security -&gt; Devices &amp; sessions</em> and enter a app name like \"threema-safe\" and click \"Create new app password\", save the generated password in your password tool.</li>\n</ol>\n<h2>Configure Threema app</h2>\n<ol>\n<li>Open your app, on the menu select \"Backups\"</li>\n<li>Enable Threema Safe</li>\n<li>Choose expert settings, uncheck \"use default server\"</li>\n<li>provide your Nextcloud WebDAV URL: <a href=\"https://yourserver.domain.com/remote.php/dav/files/threema-safe/threema-safe/\">https://yourserver.domain.com/remote.php/dav/files/threema-safe/threema-safe/</a></li>\n<li>Press \"ok\"</li>\n<li>Generate and enter a strong password to protect your Threema Safe backup and click \"Next\". Your first backup should now be generated.</li>\n</ol>\n<h2>Verify</h2>\n<p>You show now see a newly generated backup in your threema-safe folder. To share your backups with your personal Nextcloud user, you can now select the threema-safe folder in Nextcloud and press the \"share\" icon, add your username and you're done. Happy backing!<br><br></p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tools",
                   "threema-safe",
                   "threema",
                   "nextcloud",
                   "backup",
                   "android"
            ],
            "date_published": "2022-10-13T07:42:30+02:00",
            "date_modified": "2022-10-13T07:53:01+02:00"
        },
        {
            "id": "https://www.finecloud.ch/handling-exceptions-in-webui.html",
            "url": "https://www.finecloud.ch/handling-exceptions-in-webui.html",
            "title": "Handling Exceptions in Web UI",
            "summary": "The Issue There is nothing worse than presenting a Java Stacktrace in a WebUI, full of technical Details about your Server environment of the Web App itself: So how can we avoid this? You don't want to share this informations with the users, it would&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gdv9jdoksv\">The Issue</a></li>\n<li><a href=\"#mcetoc_1gdv9jdokt0\">Custom Error Page</a></li>\n<li><a href=\"#mcetoc_1gdv9jdokt1\">Error Controller</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gdv9jdoksv\">The Issue</h2>\n<p>There is nothing worse than presenting a Java Stacktrace in a WebUI, full of technical Details about your Server environment of the Web App itself:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/66//Screenshot-2022-09-27-at-10.37.26.png\" alt=\"\" width=\"1077\" height=\"1032\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-xs.png 300w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-sm.png 480w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-md.png 768w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-lg.png 1024w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-xl.png 1360w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-2xl.png 1600w\"></figure>\n<p>So how can we avoid this? You don't want to share this informations with the users, it would scare them and they wouldn't understand it.</p>\n<p>What is happing here, is that the Page will try to redirect to the /error Page. This Page does not exist as real HTML Page. This is just a generated default page out of the box. This is generated in code. But we can create our own error page to avoid this.</p>\n<h2 id=\"mcetoc_1gdv9jdokt0\">Custom Error Page</h2>\n<p>Let's create a new HTML Page under <em>resources/templates/error.html</em>:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>Error Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nSomething went horribly, terribly wrong. Please try again.\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></pre>\n<p>To use this Page, because it's under the templates folder it needs a controller in order to work.</p>\n<h2 id=\"mcetoc_1gdv9jdokt1\">Error Controller</h2>\n<p>So we need to create an error Controller for this. Let's create a new Java Class called ErrorController.java with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.web.controller;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Controller;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.GetMapping;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.RequestMapping;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Controller</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@RequestMapping</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"error\"</span>)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">ErrorController</span> </span>{\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GetMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getErrorPage</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"error\"</span>;\n    }\n}\n</pre>\n<p>If a User now again hits an error, this will be shown:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/66/Screenshot-2022-09-27-at-13.08.06-2.png\" alt=\"\" width=\"413\" height=\"131\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-xs.png 300w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-sm.png 480w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-md.png 768w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-lg.png 1024w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-xl.png 1360w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-2xl.png 1600w\"></figure>\n<p>Much better, isn't it? But we can do even better. If we know what kind of error could be thrown, we can provide a more accurate error page. In our current case we need to add a specific try catch block in the save method, which can catch StorageExceptions:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@PostMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">savePerson</span><span class=\"hljs-params\">(Model model, @Valid Person person, Errors errors, @RequestParam(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"photoFilename\"</span>)</span> MultipartFile photoFile) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> IOException </span>{\n        log.info(person);\n        log.info(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Filename: \"</span> + photoFile.getOriginalFilename());\n        log.info(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"File size: \"</span> + photoFile.getSize());\n        log.info(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Errors: \"</span> + errors);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (!errors.hasErrors()) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n                fileStorageRepository.save(photoFile.getOriginalFilename(), photoFile.getInputStream());\n                personRepository.save(person);\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"redirect:people\"</span>;\n            } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (StorageException e) {\n                model.addAttribute(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"errorMsg\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"System is currently unable to accept photo files at this time.\"</span>);\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n            }\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n    }</pre>\n<p>Now let's add this custom error Message to the people.html page like so:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"alert alert-danger\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"alert\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${errorMsg}\"</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${errorMsg}\"</span>&gt;</span>\n    A simple danger alert-check it out!\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span></pre>\n<p>The final result looks like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/66/Screenshot-2022-09-27-at-13.35.45.png\" alt=\"\" width=\"2312\" height=\"1560\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-xs.png 300w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-sm.png 480w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-md.png 768w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-lg.png 1024w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-xl.png 1360w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-2xl.png 1600w\"></figure>\n<p>The User will be redirected back to the people page with the provided values. The Error Message will be displayed in the middle of the page.</p>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "whitelabel error page",
                   "try catch",
                   "tomcat",
                   "thymeleaf",
                   "spring-framework",
                   "spring",
                   "software development",
                   "java basics",
                   "java",
                   "http",
                   "gui",
                   "exceptions",
                   "exception",
                   "dev",
                   "database",
                   "api"
            ],
            "date_published": "2022-09-27T17:47:40+02:00",
            "date_modified": "2022-09-27T17:49:41+02:00"
        },
        {
            "id": "https://www.finecloud.ch/getting-stared-with-spring-framework.html",
            "url": "https://www.finecloud.ch/getting-stared-with-spring-framework.html",
            "title": "Getting stared with the Spring Framework",
            "summary": "What is the Spring Framework Spring is the world's most popular Java framework and makes programming Java quicker, easier, and safer for everybody. Spring’s focus on speed, simplicity, and productivity. You can select and generate your Spring Package online: https://start.spring.io/ Lets make a Gradle Project,&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gd9vb6re8m\">What is the Spring Framework</a></li>\n<li><a href=\"#mcetoc_1gd9vb6re8n\">What can Spring do</a></li>\n<li><a href=\"#mcetoc_1gd9vb6re8o\">Getting started</a></li>\n<li><a href=\"#mcetoc_1gd9vsqc28s\">Display dynamic content</a></li>\n<li><a href=\"#mcetoc_1gdfedk589b\">Add some Bootstrap</a></li>\n<li><a href=\"#mcetoc_1gdk6qb94kk\">Formatting Dates and Numbers</a></li>\n<li><a href=\"#mcetoc_1gdk6qb94kl\">Introducing Spring Data</a></li>\n<li><a href=\"#mcetoc_1gdkdrmqkla\">Saving a Person</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gd9vb6re8m\">What is the Spring Framework</h2>\n<p>Spring is the world's most popular Java framework and makes programming Java quicker, easier, and safer for everybody. Spring’s focus on speed, simplicity, and productivity.</p>\n<h2 id=\"mcetoc_1gd9vb6re8n\">What can Spring do</h2>\n<ul>\n<li><strong>Microservices</strong>: Quickly deliver production‑grade features with independently evolvable microservices.</li>\n<li><strong>Reactive</strong>: Spring's asynchronous, nonblocking architecture means you can get more from your computing resources.</li>\n<li><strong>Cloud</strong>: Your code, any cloud—we’ve got you covered. Connect and scale your services, whatever your platform.</li>\n<li><strong>Web apps</strong>: Frameworks for fast, secure, and responsive web applications connected to any data store.</li>\n<li><strong>Serverless</strong>: The ultimate flexibility. Scale up on demand and scale to zero when there’s no demand.</li>\n<li><strong>Event Driven</strong>: Integrate with your enterprise. React to business events. Act on your streaming data in realtime.</li>\n<li><strong>Batch</strong>: Automated tasks. Offline processing of data at a time to suit you.</li>\n</ul>\n<h2 id=\"mcetoc_1gd9vb6re8o\">Getting started</h2>\n<p>You can select and generate your Spring Package online: <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>Lets make a Gradle Project, use Java v17 and add those dependencies:</p>\n<ul>\n<li>Spring Boot DevTools Developer Tools</li>\n<li>Lombok Developer Tools</li>\n<li>Spring Web Web</li>\n<li>Thymeleaf Template Engines</li>\n<li>Spring Data JPA SQL</li>\n<li>H2 Database SQL</li>\n<li>Validation I/O</li>\n</ul>\n<p>Click \"Generate\" and unzip the file to your IDE Projects and open it with your preferred IDE.</p>\n<p>In the IDE run the <code>PeopledbWebApplication.java</code> Class and open your browser, go to <a href=\"http://localhost:8080/\">http://localhost:8080/</a> you should get a page like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-19-at-06.18.30.png\" alt=\"\" width=\"1140\" height=\"354\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-2xl.png 1600w\"></figure>\n<p>Go back to your IDE and create a new index.html File in the Folder <em>/src/main/resources/static/index.html</em> with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>Hello<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nHello World\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>Rebuild your Project in the IDE and reopen your page on <a href=\"http://localhost:8080/\">http://localhost:8080/</a> and you should see this now:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-19-at-06.22.16.png\" alt=\"\" width=\"1140\" height=\"354\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-2xl.png 1600w\"></figure>\n<p>Congratulations you just generated your first Spring Web App.</p>\n<h2 id=\"mcetoc_1gd9vsqc28s\">Display dynamic content</h2>\n<p>Let's create a new package called web.controller and lets create a Java class called PeopleController with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.web.controller;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Controller;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.ui.Model;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.GetMapping;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.RequestMapping;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.List;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Controller</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@RequestMapping</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"/people\"</span>)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleController</span> </span>{\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GetMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getPeople</span><span class=\"hljs-params\">(Model model)</span> </span>{\n        List&lt;Person&gt; people = List.of(\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">10l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jake\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Snake\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1950</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">8</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">50000</span>)),\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">20l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Sara\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1960</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">7</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">60000</span>)),\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">30l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Johnny\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1970</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">40l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Bonny\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Norris\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">80000</span>))\n        );\n        model.addAttribute(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>, people);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n    }\n}\n</pre>\n<p>We're going to create a new HTML file under the resources/templates folder. We call it people.html:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nhere are some people\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>If we not open our browser to <a href=\"http://localhost:8080/people\">http://localhost:8080/people</a> we will see that html file loaded. What is the difference between putting an HTML file under static versus under templates? The basic idea is: if you have HTML content that is dynamic and controlled from our Java code, then you need to put that HTML under templates. This will allow us to feed some dynamically generated content into this page and make a more interesting web page. Essentially, whereas static web pages we put under the static folder here are not capable of being fed data from our Java code directly.<br><br>Let's actually put sort of put a little bit of something dynamic in here. Let's make another package under the main  package, and call this one biz.model with a Java Class Person with the following content: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.biz.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.AllArgsConstructor;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.Data;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Data</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@AllArgsConstructor</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> LocalDate dob;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary;\n\n}\n</pre>\n<p>Normally we would create or generate getters and setters and all that good stuff in that Java Class. However, now that we're using the spring framework with spring boot and we got all this cool added functionality here, we can do something a little more interesting. We're going to use a special annotation from a library called Lombok, and the annotation we will use is called @Data. This annotation will will allow the Lombok Library to scan this class, find these fields and generate getters and setters and a constructor and an equals and a hash code and a two string method, all for us whenever we need it.</p>\n<p>Next we also need to change our people.html file like so:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nhere are some people:\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ol</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"person: $</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{people}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>My Junk Person<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ol</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>If we now rebuild our Project and refresh our people page we receive this dynamic content:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-20-at-08.58.49.png\" alt=\"\" width=\"1304\" height=\"480\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1gdfedk589b\">Add some Bootstrap</h2>\n<p>Let's make the Table more beautiful by using the bootstrap css framework:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"width=device-width, initial-scale=1\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"stylesheet\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col-8 mx-auto\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"table\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>ID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>DOB<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Salary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"person : $</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{people}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"row\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.id}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.lastName}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>Mark<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.firstName}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>Otto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.dob}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.salary}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>If we now rebuild our Project and refresh our people page we receive this dynamic content:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-21-at-09.14.36.png\" alt=\"\" width=\"1406\" height=\"373\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1gdk6qb94kk\">Formatting Dates and Numbers</h2>\n<p>To format the Dates and Currency (Salary) we should not modify our Person.java Class, since this Class is part of the Service Layer, not the Presentation Layer. What we should do instead is create new Formatter Classes which make use of the Spring Formatter and can act directory on. the Presentation Layer:</p>\n<p>peopledbweb/web/formatter/BigDecimalFormatter.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">package</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">ch</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.finecloud</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.peopledbweb</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.web</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.formatter</span>;\n\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">org</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Formatter</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">org</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.stereotype</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Component</span>;\n\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.math</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.BigDecimal</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.text</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.NumberFormat</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.text</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.ParseException</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.util</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Locale</span>;\n\n@<span class=\"hljs-keyword\" style=\"color: #cc7832;\">Component</span>\npublic class BigDecimalFormatter implements Formatter&lt;BigDecimal&gt; {\n\n    @<span class=\"hljs-keyword\" style=\"color: #cc7832;\">Override</span>\n    public BigDecimal parse(String text, Locale locale) throws ParseException {\n        <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">null</span>;\n    }\n\n    @<span class=\"hljs-keyword\" style=\"color: #cc7832;\">Override</span>\n    public String print(BigDecimal object, Locale locale) {\n        <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">NumberFormat</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.getCurrencyInstance</span>(<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">locale</span>)<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span>(<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">object</span>);\n    }\n}\n</pre>\n<p>peopledbweb/web/formatter/LocalDateFormatter.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">package ch<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.finecloud</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.peopledbweb</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.web</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.formatter</span>;\n\nimport org<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Formatter</span>;\nimport org<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.stereotype</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Component</span>;\n\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.text</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.ParseException</span>;\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.time</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.LocalDate</span>;\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.time</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.DateTimeFormatter</span>;\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.util</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Locale</span>;\n\n<span class=\"hljs-variable\" style=\"color: #629755;\">@Component</span>\npublic class LocalDateFormatter implements Formatter&lt;LocalDate&gt; {\n\n    private final DateTimeFormatter dateTimeFormatter = DateTimeFormatter<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.ofPattern</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dd. MMMM, yyyy\"</span>);\n\n    <span class=\"hljs-variable\" style=\"color: #629755;\">@Override</span>\n    public LocalDate parse(String text, Locale locale) throws ParseException {\n        return LocalDate<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.parse</span>(text, dateTimeFormatter);\n    }\n\n    <span class=\"hljs-variable\" style=\"color: #629755;\">@Override</span>\n    public String print(LocalDate object, Locale locale) {\n        return dateTimeFormatter<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span>(object);\n    }\n}\n</pre>\n<p>we also need to put the dob and salary table declaration into one more pair of curly braces:</p>\n<p><code>            &lt;td th:text=\"${{person.dob}}\"&gt;@mdo&lt;/td&gt;</code><br><code>            &lt;td th:text=\"${{person.salary}}\"&gt;@mdo&lt;/td&gt;</code></p>\n<p>If we not rebuild our Project we get beck those values nicely formatted:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-21-at-11.10.16-2.png\" alt=\"\" width=\"1442\" height=\"374\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1gdk6qb94kl\">Introducing Spring Data</h2>\n<p>Until now we have worked with very static data. Lets change this by adding real <a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" rel=\"nofollow\">CRUD</a> functionality.</p>\n<p>Now we're going to introduce the third part of our three tier architecture. And that is the data. Lets create a new package called <em>data</em>. Under the data package, we create a new Java Interfacee called <em>PersonRepository</em> with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.data;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.data.repository.CrudRepository;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Repository;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Repository</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">interface</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PersonRepository</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">extends</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CrudRepository</span>&lt;<span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span>, <span class=\"hljs-title\" style=\"color: #ffc66d;\">Long</span>&gt; </span>{\n}\n</pre>\n<p>The first will be the type of the domain model class that I want this repository to be responsible for or work with, and that would be our person class. The other type, though, which I will separate with a comma. The second type will be the data type of the ID property of the person class, that would be, in our case, long. And then I need to annotate this interface so that when spring is starting up or in this case, spring<br>data is starting up. It can scan through all of the classes that I have here, and it will find this interface and know that it should treat this interface as an actual data repository.<br>To do that, we will use another annotation of the spring framework, which is <em>@Repository. </em>That's all I have to do to make a repository with full crud capabilities.<br><br>We need to go into the person class now and make a few little alterations here:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.biz.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.AllArgsConstructor;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.Data;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.NoArgsConstructor;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Entity;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.GeneratedValue;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Id;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Data</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@AllArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@NoArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Entity</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Id</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GeneratedValue</span>\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> LocalDate dob;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary;\n}\n</pre>\n<p>Lets create a Class to load the Persons:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.data;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.boot.ApplicationArguments;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.boot.ApplicationRunner;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Component;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.List;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Component</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PersonDataLoader</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">implements</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">ApplicationRunner</span> </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> PersonRepository personRepository;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PersonDataLoader</span><span class=\"hljs-params\">(PersonRepository personRepository)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.personRepository = personRepository;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">run</span><span class=\"hljs-params\">(ApplicationArguments args)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> Exception </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (personRepository.count() == <span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>) {\n            List&lt;Person&gt; people = List.of(\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Pete\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Snake\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1950</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">8</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">50000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jennifer\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1960</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">7</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">60000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Mark\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1970</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Vishnu\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Norris\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1971</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Alice\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jane\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1972</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Daniel\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Norris\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">80000</span>))\n            );\n            personRepository.saveAll(people);\n        }\n    }\n}\n</pre>\n<p>we also need to modify our <em>PeopleController</em>:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.web.controller;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.data.PersonRepository;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Controller;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.GetMapping;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.ModelAttribute;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.RequestMapping;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Controller</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@RequestMapping</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"/people\"</span>)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleController</span> </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> PersonRepository personRepository;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleController</span><span class=\"hljs-params\">(PersonRepository personRepository)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.personRepository = personRepository;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@ModelAttribute</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Iterable&lt;Person&gt; <span class=\"hljs-title\" style=\"color: #ffc66d;\">getPeople</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> personRepository.findAll();\n    }\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GetMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">showPeoplePage</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n    }\n}\n</pre>\n<h2 id=\"mcetoc_1gdkdrmqkla\">Saving a Person</h2>\n<p>To provide the function to also add new Persons, we first need to create a form in the WebUI to create new People Records:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"width=device-width, initial-scale=1\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"stylesheet\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col-md-8 col-sm-10 mx-auto mt-5 my-5\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>People List<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"table table-bordered table-sm\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>ID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>DOB<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>EMail<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Salary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${#lists.isEmpty(people)}\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">colspan</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"6\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"text-center\"</span>&gt;</span>No Data<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"person : ${people}\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"row\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.id}\"</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.lastName}\"</span>&gt;</span>Mark<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.firstName}\"</span>&gt;</span>Otto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${{person.dob}}\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.email}\"</span>&gt;</span>Otto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${{person.salary}}\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>Person Form<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">form</span> <span class=\"hljs-attr\">th:object</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person}\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"post\"</span> <span class=\"hljs-attr\">novalidate</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"firstName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"text\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"firstName\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{firstName}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"firstNameHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationFirstName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{firstName}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"lastName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"text\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"lastName\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{lastName}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"lastNameHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationLastName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{lastName}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dob\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Date of Birth<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"date\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dob\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{dob}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dobHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationDOB\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{dob}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"email\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Email address<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"email\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"email\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{email}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"emailHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationEmail\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{email}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"salary\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Salary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"number\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"salary\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{salary}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"salaryHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationSalary\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{salary}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"submit\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"btn btn-primary\"</span>&gt;</span>Save Person<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></pre>\n<p>lets also perform some validation of the entered data:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.biz.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.AllArgsConstructor;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.Data;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.NoArgsConstructor;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Entity;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.GeneratedValue;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Id;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.validation.constraints.*;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Data</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@AllArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@NoArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Entity</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Id</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GeneratedValue</span>\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotEmpty</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"First name can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotEmpty</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Last name can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Past</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Date of Birth must be in the Past\"</span>)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotNull</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Date of Birth can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> LocalDate dob;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Email</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Email must be valid\"</span>)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotEmpty</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Email can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String email;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@DecimalMin</span>(value = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"1000.00\"</span>, message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Salary must be at least 1000.00\"</span>)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotNull</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"salary can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary;\n}\n\n</pre>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tomcat",
                   "thymeleaf",
                   "sql",
                   "spring-framework",
                   "spring",
                   "software development",
                   "java",
                   "http",
                   "gui",
                   "dev",
                   "database"
            ],
            "date_published": "2022-09-23T07:41:59+02:00",
            "date_modified": "2022-09-23T07:41:59+02:00"
        },
        {
            "id": "https://www.finecloud.ch/java-and-databases-use-sql-joins.html",
            "url": "https://www.finecloud.ch/java-and-databases-use-sql-joins.html",
            "title": "Java and databases use SQL joins",
            "summary": "Introduction Let's imagine we have two Tables now, people and addresses. We want to find out how many people live at the same address. This is our current Java and SQL approach: repository/PeopleRepository.java @Override @SQL(value = FIND_BY_ID_SQL, operationType = CrudOperation.FIND_BY_ID) @SQL(value = FIND_ALL_SQL, operationType =&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gcir99tn29\">Introduction</a></li>\n<li><a href=\"#mcetoc_1gcir99tn2a\">What is a SQL JOIN</a></li>\n<li><a href=\"#mcetoc_1gcitc0o233\">How does it work</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gcir99tn29\">Introduction</h2>\n<p>Let's imagine we have two Tables now, people and addresses. We want to find out how many people live at the same address. This is our current Java and SQL approach:</p>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_BY_ID_SQL, operationType = CrudOperation.FIND_BY_ID)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_ALL_SQL, operationType = CrudOperation.FIND_ALL)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = SELECT_COUNT_SQL, operationType =  CrudOperation.COUNT)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_IN_SQL, operationType = CrudOperation.DELETE_MANY)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_SQL, operationType = CrudOperation.DELETE_ONE)\n    <span class=\"hljs-function\">Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n        String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n        ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n        BigDecimal salary = rs.getBigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SALARY\"</span>);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> homeAddressId = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"HOME_ADDRESS\"</span>);\n        Optional&lt;Address&gt; homeAddress = addressRepository.findById(homeAddressId);\n        Person person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(personID, firstName, lastName, dob, salary);\n        person.setHomeAddress(homeAddress.orElse(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> person;\n    }</pre>\n<p>repository/AddressRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(operationType = CrudOperation.FIND_BY_ID, value= <span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\n            SELECT ID, STREET_ADDRESS, ADDRESS2, CITY, STATE, POSTCODE, COUNTY, REGION, COUNTRY\n            FROM ADDRESSES\n            WHERE ID = ?\n            \"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span>)\n    <span class=\"hljs-function\">Address <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String streetAddress = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"STREET_ADDRESS\"</span>);\n        String address2 = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ADDRESS2\"</span>);\n        String city = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"CITY\"</span>);\n        String state = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"STATE\"</span>);\n        String postcode = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"POSTCODE\"</span>);\n        String county = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTY\"</span>);\n        Region region = Region.valueOf(rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"REGION\"</span>).toUpperCase());\n        String country = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTRY\"</span>);\n        Address address = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Address(id, streetAddress, address2, city, state, postcode, county, country, region);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> address;\n    }</pre>\n<p>The problem with this current approve, is that we would need two SQL queries for each person record, one to get the Person and one to get the address. Since Java methods to retrieve data from an SQL DB are declared as expensive operation in terms of time and performance efficiency this is not a good approach. So how could we optimize this?</p>\n<p>One possible answer to this problem are making use of SQL JOIN.</p>\n<h2 id=\"mcetoc_1gcir99tn2a\">What is a SQL JOIN</h2>\n<p>A JOIN combines records from two tables. JOIN matches related column values in two tables. A query can contain zero, one, or multiple JOIN operations. You can already imagine that this allows us to retrieve all our wanted data by just one SQL JOIN query.</p>\n<h2 id=\"mcetoc_1gcitc0o233\">How does it work</h2>\n<p>Let's look at some sample data:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> HOME_ADDRESS = <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>;</pre>\n<p>output: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">     <span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">FIRST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">LAST_NAME</span>           <span class=\"hljs-comment\" style=\"color: grey;\">DOB</span>           <span class=\"hljs-comment\" style=\"color: grey;\">SALARY</span>  <span class=\"hljs-comment\" style=\"color: grey;\">DELETE_FLAG</span>  <span class=\"hljs-comment\" style=\"color: grey;\">EMAIL</span>   <span class=\"hljs-comment\" style=\"color: grey;\">HOME_ADDRESS</span>\n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">5001254</span>  <span class=\"hljs-comment\" style=\"color: grey;\">jooonyy</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Smith</span>      <span class=\"hljs-comment\" style=\"color: grey;\">1982</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">09</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">13</span> <span class=\"hljs-comment\" style=\"color: grey;\">00:51:54</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span><span class=\"hljs-comment\" style=\"color: grey;\">0</span>       <span class=\"hljs-comment\" style=\"color: grey;\">0</span>  &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;       &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;             <span class=\"hljs-comment\" style=\"color: grey;\">2</span></pre>\n<p>as we can see this record has the address foreign key  2 and if we query for this record, we get this output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ID</span> = <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>;</pre>\n<p>output: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">STREET_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">ADDRESS2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">CITY</span>       <span class=\"hljs-comment\" style=\"color: grey;\">STATE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">POSTCODE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTY</span>         <span class=\"hljs-comment\" style=\"color: grey;\">REGION</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTRY</span>      \n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n <span class=\"hljs-comment\" style=\"color: grey;\">2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">123</span> <span class=\"hljs-comment\" style=\"color: grey;\">Bale</span> <span class=\"hljs-comment\" style=\"color: grey;\">St</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span>    <span class=\"hljs-comment\" style=\"color: grey;\">Apt</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span> <span class=\"hljs-comment\" style=\"color: grey;\">1A</span>   <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span> <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WA</span>     <span class=\"hljs-comment\" style=\"color: grey;\">90210</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Fulton</span> <span class=\"hljs-comment\" style=\"color: grey;\">County</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WEST</span>    <span class=\"hljs-comment\" style=\"color: grey;\">United</span> <span class=\"hljs-comment\" style=\"color: grey;\">States</span></pre>\n<p>Now, when we are joining multiple tables together, it is very common to make use of something called table aliases. And that's where we can simply give our tables and additional name or alias that we can use to refer to those individual tables columns.<br><br>The reason for this is because when you're joining two or more tables together, some of the columns of those tables may have the same names. So, for example, our people table has an ID column, so does our addresses table. So if you wanted to be able to retrieve various information from either of those particular columns, how could you specify which ID column you're talking about? The people one or the addresses one?Well, you can prefix the ID column of either of these tables with an alias.<br><br>So let's see how that would look like:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">JOIN</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> ADDRESS <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ON</span> PEOPLE.HOME_ADDRESS = ADDRESS.ID;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">     <span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">FIRST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">LAST_NAME</span>           <span class=\"hljs-comment\" style=\"color: grey;\">DOB</span>           <span class=\"hljs-comment\" style=\"color: grey;\">SALARY</span>  <span class=\"hljs-comment\" style=\"color: grey;\">DELETE_FLAG</span>  <span class=\"hljs-comment\" style=\"color: grey;\">EMAIL</span>   <span class=\"hljs-comment\" style=\"color: grey;\">HOME_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">STREET_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">ADDRESS2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">CITY</span>       <span class=\"hljs-comment\" style=\"color: grey;\">STATE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">POSTCODE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTY</span>         <span class=\"hljs-comment\" style=\"color: grey;\">REGION</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTRY</span>      \n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">5001254</span>  <span class=\"hljs-comment\" style=\"color: grey;\">jooonyy</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Smith</span>      <span class=\"hljs-comment\" style=\"color: grey;\">1982</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">09</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">13</span> <span class=\"hljs-comment\" style=\"color: grey;\">00:51:54</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span><span class=\"hljs-comment\" style=\"color: grey;\">0</span>       <span class=\"hljs-comment\" style=\"color: grey;\">0</span>  &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;       &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;             <span class=\"hljs-comment\" style=\"color: grey;\">2</span>   <span class=\"hljs-comment\" style=\"color: grey;\">2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">123</span> <span class=\"hljs-comment\" style=\"color: grey;\">Bale</span> <span class=\"hljs-comment\" style=\"color: grey;\">St</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span>    <span class=\"hljs-comment\" style=\"color: grey;\">Apt</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span> <span class=\"hljs-comment\" style=\"color: grey;\">1A</span>   <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span> <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WA</span>     <span class=\"hljs-comment\" style=\"color: grey;\">90210</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Fulton</span> <span class=\"hljs-comment\" style=\"color: grey;\">County</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WEST</span>    <span class=\"hljs-comment\" style=\"color: grey;\">United</span> <span class=\"hljs-comment\" style=\"color: grey;\">States</span></pre>\n<p>It's one result set row that's combining all of the columns of the people table with all the columns of the address table for this one person. You may be wondering why did we only get one row because we didn't say anything like where home address equals four or something like that. So why did we only get one row? Well, the reason we only got one row in this particular case is because of the type of joint that is executing here. And this particular, joined by default, is what's known as an inner join. All an inner join is is that there has to be a match that satisfies this expression here on both tables, in order for a result set to be returned. Since there's only one record in the people table that has a foreign key that points to an address, and there's only one address that is being used by the people table, we only got back one result set in this particular case.<br><br>However, what if we wanted to be able to retrieve any or all people, whether or not they have a home address specified? And in fact, for our purposes in our code, that's exactly what we're going to need because when we find a person by ID, they might have an address and they might not. We don't want them to not show up just because they did not have an address. So to make that work, that's where we have to perform the left outer join, so that we can make sure that regardless of whether or not there's an address being pointed to, we always get back all of the people that we're looking for. So to do that, all we have to do is specify that we want a left outer join.</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">LEFT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">OUTER</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">JOIN</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> ADDRESS <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ON</span> PEOPLE.HOME_ADDRESS = ADDRESS.ID <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FETCH</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FIRST</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">10</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ROWS</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ONLY</span>;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">ID  FIRST_NAME  LAST_NAME           DOB           SALARY  DELETE_FLAG  EMAIL   HOME_ADDRESS      ID  STREET_ADDRESS  ADDRESS2  CITY    STATE   POSTCODE  COUNTY  REGION  COUNTRY\n<span class=\"hljs-comment\" style=\"color: grey;\">--  ----------  ---------  ---------------------  ------  -----------  ------  ------------  ------  --------------  --------  ------  ------  --------  ------  ------  -------</span>\n<span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>  Harry       Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">1950</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-03</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">10</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">45</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">10.0</span>  <span class=\"hljs-number\" style=\"color: #6897bb;\">100000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>  Jack        Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-01</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-10</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">08</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">45</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">10.0</span>   <span class=\"hljs-number\" style=\"color: #6897bb;\">50000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>  Mary        Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">2005</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-05</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-13</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">17</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">30</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">10.0</span>   <span class=\"hljs-number\" style=\"color: #6897bb;\">20000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>  Sabrina     Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">1951</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-10</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-31</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">19</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">43.0</span>  <span class=\"hljs-number\" style=\"color: #6897bb;\">200000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">18</span>  Jake        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1970</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-10</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-31</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">19</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">43.0</span>   <span class=\"hljs-number\" style=\"color: #6897bb;\">75000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">true</span>         &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">19</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">20</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>  Bobby       Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1982</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-09</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-13</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">00</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">51</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">54.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">23</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; </pre>\n<p>But for our situation we need something like this:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> P.FIRST_NAME,P.LAST_NAME,A.STREET_ADDRESS,A.CITY <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> P <span class=\"hljs-keyword\" style=\"color: #cc7832;\">LEFT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">OUTER</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">JOIN</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> A <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ON</span> P.HOME_ADDRESS = A.ID <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> P.ID = <span class=\"hljs-number\" style=\"color: #6897bb;\">5001254</span>;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">FIRST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">LAST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">STREET_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">CITY</span>     \n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">jooonyy</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Smith</span>      <span class=\"hljs-comment\" style=\"color: grey;\">123</span> <span class=\"hljs-comment\" style=\"color: grey;\">Bale</span> <span class=\"hljs-comment\" style=\"color: grey;\">St</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span>    <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span> <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span></pre>\n<p>Lets have a look how this will finally look like in our Java code:</p>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String FIND_BY_ID_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\n        SELECT \n        P.ID, P.FIRST_NAME, P.LAST_NAME, P.DOB, P.SALARY, P.HOME_ADDRESS,\n        HOME.ID as HOME_ID, HOME.STREET_ADDRESS as HOME_STREET_ADDRESS, HOME.ADDRESS2 as HOME_ADDRESS2, HOME.CITY as HOME_CITY, HOME.STATE as HOME_STATE, HOME.POSTCODE as HOME_POSTCODE, HOME.COUNTY as HOME_COUNTY, HOME.REGION as HOME_REGION, HOME.COUNTRY as HOME_COUNTRY,\n        BIZ.ID as BIZ_ID, BIZ.STREET_ADDRESS as BIZ_STREET_ADDRESS, BIZ.ADDRESS2 as BIZ_ADDRESS2, BIZ.CITY as BIZ_CITY, BIZ.STATE as BIZ_STATE, BIZ.POSTCODE as BIZ_POSTCODE, BIZ.COUNTY as BIZ_COUNTY, BIZ.REGION as BIZ_REGION, BIZ.COUNTRY as BIZ_COUNTRY,\n        FROM PEOPLE AS P\n        LEFT OUTER JOIN ADDRESSES AS HOME ON P.HOME_ADDRESS = HOME.ID\n        LEFT OUTER JOIN ADDRESSES AS BIZ ON P.BIZ_ADDRESS = BIZ.ID\n        WHERE P.ID=?\"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span>;</pre>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_BY_ID_SQL, operationType = CrudOperation.FIND_BY_ID)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_ALL_SQL, operationType = CrudOperation.FIND_ALL)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = SELECT_COUNT_SQL, operationType =  CrudOperation.COUNT)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_IN_SQL, operationType = CrudOperation.DELETE_MANY)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_SQL, operationType = CrudOperation.DELETE_ONE)\n    <span class=\"hljs-function\">Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n        String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n        ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n        BigDecimal salary = rs.getBigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SALARY\"</span>);\n<span class=\"hljs-comment\" style=\"color: grey;\">//        long homeAddressId = rs.getLong(\"HOME_ADDRESS\");</span>\n\n        Address homeAddress = extractAddress(rs, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"HOME_\"</span>);\n        Address bizAddress = extractAddress(rs, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"BIZ_\"</span>);\n\n        Person person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(personID, firstName, lastName, dob, salary);\n        person.setHomeAddress(homeAddress);\n        person.setBusinessAddress(bizAddress);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> person;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Address <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractAddress</span><span class=\"hljs-params\">(ResultSet rs, String aliasPrefix)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        Long addrId = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>, rs, Long.class);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (addrId == <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>;\n        String streetAddress = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"STREET_ADDRESS\"</span>, rs, String.class);\n        String address2 = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"ADDRESS2\"</span>, rs, String.class);\n        String city = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"CITY\"</span>, rs, String.class);\n        String state = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"STATE\"</span>, rs, String.class);\n        String postcode = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"POSTCODE\"</span>, rs, String.class);\n        String county = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTY\"</span>, rs, String.class);\n        Region region = Region.valueOf(getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"REGION\"</span>, rs, String.class).toUpperCase());\n        String country = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTRY\"</span>, rs, String.class);\n        Address address = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Address(addrId, streetAddress, address2, city, state, postcode, country, county, region);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> address;\n    }\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> &lt;T&gt; <span class=\"hljs-function\">T <span class=\"hljs-title\" style=\"color: #ffc66d;\">getValueByAlias</span><span class=\"hljs-params\">(String alias, ResultSet rs, Class&lt;T&gt; clazz)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> columnCount = rs.getMetaData().getColumnCount();\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">for</span> (<span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> colIdX = <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>; colIdX &lt; columnCount; colIdX++) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (alias.equals(rs.getMetaData().getColumnLabel(colIdX))) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> (T) rs.getObject(colIdX);\n            }\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> SQLException(String.format(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Column not found for alias: '%s'\"</span>, alias));\n    }</pre>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "sql",
                   "software development",
                   "java basics",
                   "java",
                   "dev",
                   "database"
            ],
            "date_published": "2022-09-13T11:41:52+02:00",
            "date_modified": "2022-09-13T11:41:52+02:00"
        },
        {
            "id": "https://www.finecloud.ch/java-working-with-a-database.html",
            "url": "https://www.finecloud.ch/java-working-with-a-database.html",
            "title": "Java working with databases",
            "summary": "Introduction In this Post I will describe how you can easily learn, test and play around with Java interacting with SQL Databases. This post is a summary of my Java learning course I'm taking on udemy. The post is not intended to be spread around&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gbnqrj4jjf\">Introduction</a></li>\n<li><a href=\"#mcetoc_1gbpqdh8573\">SQL Queries</a>\n<ul>\n<li><a href=\"#mcetoc_1gbnqrj4jjg\">Create Table</a></li>\n<li><a href=\"#mcetoc_1gbpqdh8574\">Function calls</a></li>\n<li><a href=\"#mcetoc_1gbpqdh8575\">Regex</a></li>\n<li><a href=\"#mcetoc_1gbpqdh8576\">Modify Data (CRUD)</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1gbq4dguead\">Interact with a database with Java</a>\n<ul>\n<li><a href=\"#mcetoc_1gbq4dgueae\">JDBC</a></li>\n<li><a href=\"#mcetoc_1gbri47otbv\">How to handle JUnit test records / testdata</a></li>\n<li><a href=\"#mcetoc_1gbrkro2vev\">Save return value</a></li>\n<li><a href=\"#mcetoc_1gbrkro2vf0\">Prevent SQL injection</a></li>\n<li><a href=\"#mcetoc_1gc0q0084hv\">Find Person by Id</a></li>\n<li><a href=\"#mcetoc_1gc0q0084i0\">Delete one or more persons</a></li>\n<li><a href=\"#mcetoc_1gc8qakok1a8\">Update a person</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1gc8r84pi1ab\">Making it reusable</a></li>\n<li><a href=\"#mcetoc_1gc9c3hup1b5\">Improve the SQL statement calls</a></li>\n<li><a href=\"#mcetoc_1gcir9j7k2d\">Speeding up SQL queries</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gbnqrj4jjf\">Introduction</h2>\n<p>In this Post I will describe how you can easily learn, test and play around with Java interacting with SQL Databases. This post is a summary of my Java learning course I'm taking on udemy. The post is not intended to be spread around the world, since the contents are not my own ideas, its only just for my own sake of summarizing and writing down what I'm learning.</p>\n<p>As working environment we will use the <a href=\"https://squirrel-sql.sourceforge.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SQuirreL SQL Client</a> and create a local H2 Database with it. This allows us to start very quick and skip the hole SQL Server overhead, which is just to learn Java with Databases not relevant so far. You also need to download the <a href=\"http://www.h2database.com/html/download.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">H2 driver</a> to work with this.</p>\n<h2 id=\"mcetoc_1gbpqdh8573\">SQL Queries</h2>\n<h3 id=\"mcetoc_1gbnqrj4jjg\">Create Table</h3>\n<p>First of all we need to create our initial SQL Table to work with later on. You can use this SQL Query:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">CREATE</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">TABLE</span> PEOPLE(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">ID</span> <span class=\"hljs-built_in\">BIGINT</span> AUTO_INCREMENT, FIRST_NAME <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\" style=\"color: #6897bb;\">255</span>), LAST_NAME <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\" style=\"color: #6897bb;\">255</span>), DOB <span class=\"hljs-keyword\" style=\"color: #cc7832;\">TIMESTAMP</span>, SALARY <span class=\"hljs-built_in\">NUMERIC</span>);</pre>\n<p>let's add a test record:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">INSERT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">INTO</span> PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">VALUES</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">'Harry'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'Johnson'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'1950-03-15 10:45:10'</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">100000.00</span>);</pre>\n<p>let's verify the record by querying all records in the table people:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">FIRST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">LAST_NAME</span>           <span class=\"hljs-comment\" style=\"color: grey;\">DOB</span>           <span class=\"hljs-comment\" style=\"color: grey;\">SALARY</span>\n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n <span class=\"hljs-comment\" style=\"color: grey;\">1</span>  <span class=\"hljs-comment\" style=\"color: grey;\">Harry</span>       <span class=\"hljs-comment\" style=\"color: grey;\">Johnson</span>    <span class=\"hljs-comment\" style=\"color: grey;\">1950</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">03</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">15</span> <span class=\"hljs-comment\" style=\"color: grey;\">10:45:10</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span><span class=\"hljs-comment\" style=\"color: grey;\">0</span>  <span class=\"hljs-comment\" style=\"color: grey;\">100000</span></pre>\n<p>great, this looks good so far. Let's add some more records:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">INSERT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">INTO</span> PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">VALUES</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">'Jack'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'Johnson'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'2000-01-10 8:45:10'</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">50000.00</span>);\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">INSERT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">INTO</span> PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">VALUES</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">'Mary'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'Johnson'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'2005-05-13 17:30:10'</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">20000.00</span>);\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">INSERT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">INTO</span> PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">VALUES</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">'Susan'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'Johnson'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'1951-10-31 19:13:43'</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">200000.00</span>);\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">INSERT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">INTO</span> PEOPLE (FIRST_NAME, LAST_NAME, DOB, SALARY) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">VALUES</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">'Jake'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'Smith'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'1970-10-31 19:13:43'</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">75000.00</span>);</pre>\n<p>Let's play around with some SQL statements. This are only a few SQL example queries:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> FIRST_NAME <span class=\"hljs-keyword\" style=\"color: #cc7832;\">LIKE</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">'J%'</span>;</pre>\n<p>gives us back all records with firstname J*.</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> SALARY &gt; <span class=\"hljs-number\" style=\"color: #6897bb;\">99000</span>;</pre>\n<p>gives all records where salary is bigger than 99000</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> DOB &lt; <span class=\"hljs-built_in\">DATE</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">'1980-01-01'</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AND</span> FIRST_NAME <span class=\"hljs-keyword\" style=\"color: #cc7832;\">LIKE</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">'H%'</span>;</pre>\n<p>gives all records where dateofbirth is before 1980-01-01 and firstname starts with H*.</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ORDER</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">BY</span> FIRST_NAME;</pre>\n<p>gives back all records sort by firstname</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ORDER</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">BY</span> DOB <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ASC</span>, FIRST_NAME <span class=\"hljs-keyword\" style=\"color: #cc7832;\">DESC</span>;</pre>\n<p>gives back all records, sort by dateofbirth (ascending) and sort by firstname (descending)</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">SUM</span>(SALARY), LAST_NAME <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">GROUP</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">BY</span> LAST_NAME;</pre>\n<p>calculates the summary of all records grouped by lastname.</p>\n<h3 id=\"mcetoc_1gbpqdh8574\">Function calls</h3>\n<p>We can go one step further and also use SQL function calls like these:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> LAST_NAME, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">COUNT</span>(*) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">GROUP</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">BY</span> LAST_NAME;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">LAST_NAME  COUNT(*)\n<span class=\"hljs-comment\" style=\"color: grey;\">---------  --------</span>\nJohnson           4\nSmith             2</pre>\n<p>It's also possible to display combined table rows in the output of a sql query:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">CONCAT</span>(LAST_NAME, <span class=\"hljs-string\" style=\"color: #6a8759;\">', '</span>, FIRST_NAME) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">NAME</span>, DOB <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">NAME                     DOB         \n<span class=\"hljs-comment\" style=\"color: grey;\">--------------  ---------------------</span>\nJohnson, Harry  1950-03-15 10:45:10.0\nSmith, Jake     1970-10-31 19:13:43.0\nJohnson, Jack   2000-01-10 08:45:10.0\nJohnson, Mary   2005-05-13 17:30:10.0\nJohnson, Susan  1951-10-31 19:13:43.0\nSmith, Jake     1970-10-31 19:13:43.0</pre>\n<p>or we can manipulate data, before we display the sql query result, without modifying the real db data:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">CONCAT</span>(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">UPPER</span>(LAST_NAME), <span class=\"hljs-string\" style=\"color: #6a8759;\">', '</span>, FIRST_NAME) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">NAME</span>, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">DATEADD</span>(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">YEAR</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">10</span>, DOB) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">NAME            DATEADD(YEAR, 10, DOB)\n<span class=\"hljs-comment\" style=\"color: grey;\">--------------  ----------------------</span>\nJOHNSON, Harry  1960-03-15 10:45:10.0 \nSMITH, Jake     1980-10-31 19:13:43.0 \nJOHNSON, Jack   2010-01-10 08:45:10.0 \nJOHNSON, Mary   2015-05-13 17:30:10.0 \nJOHNSON, Susan  1961-10-31 19:13:43.0 \nSMITH, Jake     1980-10-31 19:13:43.0</pre>\n<h3 id=\"mcetoc_1gbpqdh8575\">Regex</h3>\n<p>If all of this is not enough, you cold even use regex with sql queries:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> REGEXP_REPLACE(<span class=\"hljs-string\" style=\"color: #6a8759;\">'1970-10-31'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'\\d{4}-'</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">'aaaa-'</span>);</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">'aaaa-10-31'\n<span class=\"hljs-comment\" style=\"color: grey;\">------------</span>\naaaa-10-31  </pre>\n<h3 id=\"mcetoc_1gbpqdh8576\">Modify Data (CRUD)</h3>\n<p>If we need to change existing data, we can for example use the update query:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">UPDATE</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">SET</span> FIRST_NAME=<span class=\"hljs-string\" style=\"color: #6a8759;\">'Sabrina'</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> FIRST_NAME=<span class=\"hljs-string\" style=\"color: #6a8759;\">'Susan'</span>;</pre>\n<p>To remove a record we can use the delete query:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">DELETE</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> LAST_NAME=<span class=\"hljs-string\" style=\"color: #6a8759;\">'Smith'</span>;</pre>\n<p>We can also change the structure of a table. Let's say we want to add a Column:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">ALTER</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">TABLE</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ADD</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">COLUMN</span> EMAIL <span class=\"hljs-built_in\">VARCHAR</span>(<span class=\"hljs-number\" style=\"color: #6897bb;\">255</span>);</pre>\n<p>The table looks like this now: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">ID  FIRST_NAME  LAST_NAME           DOB           SALARY  EMAIL \n<span class=\"hljs-comment\" style=\"color: grey;\">--  ----------  ---------  ---------------------  ------  ------</span>\n12  Harry       Jonson     1950-03-15 10:45:10.0  100000  &lt;null&gt;\n14  Jack        Jonson     2000-01-10 08:45:10.0   50000  &lt;null&gt;\n15  Mary        Jonson     2005-05-13 17:30:10.0   20000  &lt;null&gt;\n16  Sabrina     Jonson     1951-10-31 19:13:43.0  200000  &lt;null&gt;</pre>\n<p>Lets fill the &lt;null&gt; EMAIL values with a placeholder address:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">UPDATE</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">SET</span> EMAIL=<span class=\"hljs-string\" style=\"color: #6a8759;\">'nothing@nowhere.com'</span>;</pre>\n<p>result:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">ID  FIRST_NAME  LAST_NAME           DOB           SALARY  EMAIL              \n<span class=\"hljs-comment\" style=\"color: grey;\">--  ----------  ---------  ---------------------  ------  -------------------</span>\n12  Harry       Jonson     1950-03-15 10:45:10.0  100000  nothing@nowhere.com\n14  Jack        Jonson     2000-01-10 08:45:10.0   50000  nothing@nowhere.com\n15  Mary        Jonson     2005-05-13 17:30:10.0   20000  nothing@nowhere.com\n16  Sabrina     Jonson     1951-10-31 19:13:43.0  200000  nothing@nowhere.com</pre>\n<h2 id=\"mcetoc_1gbq4dguead\">Interact with a database with Java</h2>\n<p>So far so good, but how can we use Java to Create and manipulate a SQL Database? First we will create a new gradle Project in IntellJ IDEA. To add the H2 dependency you can open the<em> build.gradle</em> file and open the dependencie Manager with the shortcut <em>command + n</em> on mac. Search for <em>h2 </em>and add the<em> H2 Database Engine:</em></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/61/Screenshot-2022-08-31-at-13.41.45.png\" alt=\"\" width=\"1896\" height=\"373\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.41.45-xs.png 300w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.41.45-sm.png 480w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.41.45-md.png 768w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.41.45-lg.png 1024w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.41.45-xl.png 1360w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.41.45-2xl.png 1600w\"></figure>\n<p>Lets do our development with the TDD method and add another dependency for this. Search for Assertj and add the<em> AssertJ fluent assertions</em>:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/61/Screenshot-2022-08-31-at-13.47.28.png\" alt=\"\" width=\"1896\" height=\"373\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.47.28-xs.png 300w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.47.28-sm.png 480w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.47.28-md.png 768w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.47.28-lg.png 1024w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.47.28-xl.png 1360w ,https://www.finecloud.ch/media/posts/61/responsive/Screenshot-2022-08-31-at-13.47.28-2xl.png 1600w\"></figure>\n<p>Make sure to change the newly added AssertJ dependency line in build.gradle from</p>\n<p><code>implementation 'org.assertj:assertj-core:3.23.1'</code></p>\n<p>to</p>\n<p><code>testImplementation 'org.assertj:assertj-core:3.23.1'</code></p>\n<p>Now Lets add a TDD TestClass as well as a main Class:</p>\n<p>PeopleRepositoryTests.java:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.junit.jupiter.api.Test;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> org.assertj.core.api.Assertions.assertThat;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepositoryTests</span> </span>{\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canSave</span><span class=\"hljs-params\">()</span> </span>{\n        PeopleRepository repo = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> PeopleRepository();\n        Person john = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-6\"</span>)));\n        Person savedPerson = repo.save(john);\n        assertThat(savedPerson.getId()).isGreaterThan(<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>);\n    }\n}\n</pre>\n<p>model/Person.java:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(String firstName, String lastName, ZonedDateTime odb)</span> </span>{\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Long <span class=\"hljs-title\" style=\"color: #ffc66d;\">getId</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">1L</span>;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setId</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.id = id;\n    }\n}\n</pre>\n<p>repository/PeopleRepository.java: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepository</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">save</span><span class=\"hljs-params\">(Person person)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> person;\n    }\n}\n</pre>\n<p>The logic of this code is not implemented yet. The goal of TDD is to just make the test pass. So we need to force ourself to create a test where the getId method will fail without the correct logic. We can achieve this by adding another Person and calling one of those two person by it's Id:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canSaveTwoPeople</span><span class=\"hljs-params\">()</span> </span>{\n        PeopleRepository repo = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> PeopleRepository();\n        Person john = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-6\"</span>)));\n        Person bobby = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Bobby\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1982</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">9</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">51</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">54</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>)));\n        Person savedPerson1 = repo.save(john);\n        Person savedPerson2 = repo.save(bobby);\n        assertThat(savedPerson1.getId()).isNotEqualTo(savedPerson2.getId());\n    }</pre>\n<p>this thest does now fail as expected: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">Expecting actual:\n  <span class=\"hljs-number\" style=\"color: #6897bb;\">1L</span>\nnot to be equal to:\n  <span class=\"hljs-number\" style=\"color: #6897bb;\">1L</span>\n\njava.lang.AssertionError: \nExpecting actual:\n  <span class=\"hljs-number\" style=\"color: #6897bb;\">1L</span>\nnot to be equal to:\n  <span class=\"hljs-number\" style=\"color: #6897bb;\">1L</span>\n\n\nPeopleRepositoryTests &gt; canSaveTwoPeople() FAILED\n    java.lang.AssertionError at PeopleRepositoryTests.java:<span class=\"hljs-number\" style=\"color: #6897bb;\">28</span>\n<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span> test completed, <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span> failed\nFAILURE: Build failed with an exception.</pre>\n<p>Now we are at the point where we need to write the connection to the database.</p>\n<h3 id=\"mcetoc_1gbq4dgueae\">JDBC</h3>\n<p>PeopleRepositoryTests.java:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.junit.jupiter.api.BeforeEach;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.junit.jupiter.api.Test;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.Connection;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.DriverManager;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.SQLException;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> org.assertj.core.api.Assertions.assertThat;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepositoryTests</span> </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Connection connection;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@BeforeEach</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setUp</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        connection = DriverManager.getConnection(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"jdbc:h2:~/peopletest\"</span>.replace(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"~\"</span>, System.getProperty(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"user.home\"</span>)));\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canSaveOnePerson</span><span class=\"hljs-params\">()</span> </span>{\n        PeopleRepository repo = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> PeopleRepository(connection);\n        Person john = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-6\"</span>)));\n        Person savedPerson = repo.save(john);\n        assertThat(savedPerson.getId()).isGreaterThan(<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canSaveTwoPeople</span><span class=\"hljs-params\">()</span> </span>{\n        PeopleRepository repo = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> PeopleRepository(connection);\n        Person john = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-6\"</span>)));\n        Person bobby = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Bobby\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1982</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">9</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">51</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">54</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>)));\n        Person savedPerson1 = repo.save(john);\n        Person savedPerson2 = repo.save(bobby);\n        assertThat(savedPerson1.getId()).isNotEqualTo(savedPerson2.getId());\n    }\n}\n</pre>\n<p>model/Person.java:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> ZonedDateTime dob;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(String firstName, String lastName, ZonedDateTime odb)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.firstName = firstName;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.lastName = lastName;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.dob = odb;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Long <span class=\"hljs-title\" style=\"color: #ffc66d;\">getId</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> id;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setId</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.id = id;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFirstName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> firstName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setFirstName</span><span class=\"hljs-params\">(String firstName)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.firstName = firstName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getLastName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> lastName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setLastName</span><span class=\"hljs-params\">(String lastName)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.lastName = lastName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> ZonedDateTime <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDob</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> dob;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setDob</span><span class=\"hljs-params\">(ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.dob = dob;\n    }\n}\n</pre>\n<p>repository/PeopleRepository.java: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.*;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepository</span> </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Connection connection;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepository</span><span class=\"hljs-params\">(Connection connection)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.connection = connection;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">save</span><span class=\"hljs-params\">(Person person)</span> </span>{\n        String sql = String.format(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB) VALUES(?,?,?)\"</span>);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);\n            ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, person.getFirstName());\n            ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, person.getLastName());\n            ps.setTimestamp(<span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, Timestamp.valueOf(person.getDob().withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)).toLocalDateTime()));\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> recordsAffected = ps.executeUpdate();\n            ResultSet rs = ps.getGeneratedKeys();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id = rs.getLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n                person.setId(id);\n            }\n            System.out.printf(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Records affected: %d%n\"</span>, recordsAffected);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> person;\n    }\n}\n</pre>\n<h3 id=\"mcetoc_1gbri47otbv\">How to handle JUnit test records / testdata</h3>\n<p>Currently we're dirtying up our database every time we run our tests. But that's not necessarily the most desirable way for these tests to run there. Now that we have confirmed that we generally are able to write data to the database, perhaps we don't want to keep dirtying up our database permanently with all these duplicated records, as we are doing now.</p>\n<p>There's actually a great technique that we can use if we want to use the database temporarily while the tests are working, but then have the tests essentially clean up after themselves when they're all done so that we're not permanently impacting the database. Currently, every time we connect to the database and we interact with it, and particularly we update or insert records in to the database, our SQirreL commands or statements are getting committed to the database and that's happening for us automatically.<br><br>But we can actually turn off the auto commits. This still allows us to insert data or update the database in any way at all. But we don't commit the changes and then we close the database connection. All of the changes that we did to the database will just go away. They won't be committed. They won't be permanently recorded. They will look as if they all worked for as long as we have a connection to the database. But once the database connection is gone, so will be those changes that we made. So that can give us a cool technique for cleaning up after our tests. The needed change are:</p>\n<p>PeopleRepositoryTests.java:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@BeforeEach</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setUp</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        connection = DriverManager.getConnection(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"jdbc:h2:~/peopletest\"</span>.replace(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"~\"</span>, System.getProperty(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"user.home\"</span>)));\n        connection.setAutoCommit(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">false</span>);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@AfterEach</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">tearDown</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (connection != <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>) {\n            connection.close();\n        }\n    }</pre>\n<p>The important line is the <em>connection.setAutoCommit(false);</em></p>\n<h3 id=\"mcetoc_1gbrkro2vev\">Save return value</h3>\n<p>At the moment, if we save a person, we just get back a generic message like this:</p>\n<p><code>Records affected: 1</code></p>\n<p>Let's improve this, so that we see the record which has been saved:</p>\n<p>/repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id = rs.getLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n                person.setId(id);\n                System.out.println(person);\n            }</pre>\n<p>just add the System.out.... Line. But now we need to overwrite the toString() method on the Person class:</p>\n<p>/model/Person.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">toString</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Person{\"</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\"id=\"</span> + id +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", firstName='\"</span> + firstName + <span class=\"hljs-string\" style=\"color: #6a8759;\">'\\''</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", lastName='\"</span> + lastName + <span class=\"hljs-string\" style=\"color: #6a8759;\">'\\''</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", dob=\"</span> + dob +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">'}'</span>;\n    }</pre>\n<p>If we now save a Person we get the following return value:</p>\n<p><code>Person{id=47, firstName='John', lastName='Smith', dob=1980-11-15T15:15-06:00}</code><br><code>Records affected: 1</code><br><code>Person{id=48, firstName='Bobby', lastName='Smith', dob=1982-09-13T01:51:54+01:00}</code><br><code>Records affected: 1</code></p>\n<h3 id=\"mcetoc_1gbrkro2vf0\">Prevent SQL injection</h3>\n<p>We could have made the SQL statement without using a prepared statement but by using just a regular statement. But if we had used a regular statement, then we would have had to use some string concatenation tricks to get these values in here. In other words, we would have had to hard code these values into the values area of our insert statement and lots of database code in Java has been written in that way. <br><br>But if you've got parameters that you need to pass in using a regular statement and using string concatenation is like the worst possible way to get those parameters in there. The reason for this has to do with a major security flaw that exists in lots of code not only just Java, it's called SQL injection. <br><br>Let's imagine that this code here is part of a web application where there's a web page and the web page asks people to enter their first name, last name, date of birth.<br><br>Now there is a malicious and intelligent hacker who wants to hack into our application and steal all of our data. One thing that he might try to do is to utilize this SQL injection technique and enter this pseudocode in the firstName field:</p>\n<p><code>Max', 'Müller', '1999-01-01'); SELECT * FROM PEOPLE;</code></p>\n<p>You can imagine what happens. These would just be appended via string concatenation. And depending on how badly we wrote our database code, our database code might have allowed this to execute and for the output of this to make its way back to the web browser.<br><br>So how can we avoid this? By using a prepared statement, SQL injection like this is not possible because with a prepared statement, every parameter that we're expecting to read in is constrained to just it's one little bit of data. So in other words, this name Max here is the only value that can actually be allowed in here, and all the rest of the text would just cause an exception to be thrown.</p>\n<p><strong>The rule to live by when when you're writing JDBC code and you've got parameters that you need to bind to outside data. Always use a prepared statement. That will save you from this particular level of SQL injection.</strong></p>\n<h3 id=\"mcetoc_1gc0q0084hv\">Find Person by Id</h3>\n<p>Now let's implement the function to query a Person by ID:</p>\n<p>repository/PeopleRepositoryTests.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canFindPersonById</span><span class=\"hljs-params\">()</span> </span>{\n        Person savedPerson = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        Person foundPerson = repo.findById(savedPerson.getId());\n        assertThat(foundPerson).isEqualTo(savedPerson);\n    }</pre>\n<p>this forces us to implement some methods like these:</p>\n<p>model/Person.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">  <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">boolean</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">equals</span><span class=\"hljs-params\">(Object o)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (<span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span> == o) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">true</span>;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (!(o <span class=\"hljs-keyword\" style=\"color: #cc7832;\">instanceof</span> Person)) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">false</span>;\n        Person person = (Person) o;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Objects.equals(id, person.id) &amp;&amp; firstName.equals(person.firstName) &amp;&amp; lastName.equals(person.lastName) &amp;&amp; dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)).equals(person.dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)));\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">hashCode</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Objects.hash(id, firstName, lastName, dob);\n    }</pre>\n<p>model/PersonTest.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.junit.jupiter.api.Test;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> org.assertj.core.api.Assertions.assertThat;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PersonTest</span> </span>{\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">testForEquality</span><span class=\"hljs-params\">()</span> </span>{\n        Person p1 = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"p1\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">9</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-1\"</span>)));\n        Person p2 = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"p1\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">9</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-1\"</span>)));\n        assertThat(p1).isEqualTo(p2);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">testForInequality</span><span class=\"hljs-params\">()</span> </span>{\n        Person p1 = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"p1\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">9</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-1\"</span>)));\n        Person p2 = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"p2\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">9</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-1\"</span>)));\n        assertThat(p1).isNotEqualTo(p2);\n    }\n}</pre>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">findById</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        Person person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>;\n\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(GET_PERSON_BY_ID);\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, id);\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n                String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n                String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n                ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n                person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(firstName, lastName, dob);\n                person.setId(personID);\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> person;\n    }</pre>\n<p>But let's also add a negative test case:</p>\n<p>repository/PeopleRepositoryTests.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">testPersonIdNotFound</span><span class=\"hljs-params\">()</span> </span>{\n        Optional&lt;Person&gt; foundPerson = repo.findById(-<span class=\"hljs-number\" style=\"color: #6897bb;\">1L</span>);\n        assertThat(foundPerson).isEmpty();\n    }</pre>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Optional&lt;Person&gt; <span class=\"hljs-title\" style=\"color: #ffc66d;\">findById</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        Person person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>;\n\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(GET_PERSON_BY_ID);\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, id);\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n                String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n                String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n                ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n                person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(firstName, lastName, dob);\n                person.setId(personID);\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Optional.ofNullable(person);\n    }</pre>\n<h3 id=\"mcetoc_1gc0q0084i0\">Delete one or more persons</h3>\n<p>Let's implement the function to delete one or more persons:</p>\n<p>repository/PeopleRepositoryTests.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canDeleteOnePerson</span><span class=\"hljs-params\">()</span> </span>{\n        Person savedPerson = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> startCount = repo.count();\n        repo.delete(savedPerson);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> endCount = repo.count();\n        assertThat(endCount).isEqualTo(startCount-<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canDeleteMultiplePerson</span><span class=\"hljs-params\">()</span> </span>{\n        Person p1 = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test1\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        Person p2 = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test2\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> startCount = repo.count();\n        repo.delete(p1, p2);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> endCount = repo.count();\n        assertThat(endCount).isEqualTo(startCount -<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>);\n    }</pre>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">count</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> count = <span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SELECT COUNT(*) FROM PEOPLE\"</span>);\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (rs.next()) {\n                count = rs.getLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> count;\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">delete</span><span class=\"hljs-params\">(Person person)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DELETE FROM PEOPLE WHERE ID=?\"</span>);\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, person.getId());\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> recordsAffected = ps.executeUpdate();\n            System.out.println(recordsAffected);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">delete</span><span class=\"hljs-params\">(Person...people)</span> </span>{\n<span class=\"hljs-comment\" style=\"color: grey;\">//        This would be the easiest Option to delete people,</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">//        however from a DB view it's not the most efficient:</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">//        for (Person person : people) {</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">//            delete(person);</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">//        }</span>\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n<span class=\"hljs-comment\" style=\"color: grey;\">//            - Unfortunately the current version of H2 DB does not support a prepared SQL statement for this.</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">//            - This will make us vulnerable to SQL injection, but for demo purposes we do it anyway</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">//            - This should never be used in production</span>\n            Statement stmt = connection.createStatement();\n            String ids = Arrays.stream(people).toList().stream()\n                    .map(person -&gt; person.getId().toString())\n                    .collect(Collectors.joining(<span class=\"hljs-string\" style=\"color: #6a8759;\">\",\"</span>));\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> affectedRecordCount = stmt.executeUpdate(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DELETE FROM PEOPLE WHERE ID IN (:ids)\"</span>.replace(<span class=\"hljs-string\" style=\"color: #6a8759;\">\":ids\"</span>, ids));\n            System.out.println(affectedRecordCount);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }</pre>\n<h3 id=\"mcetoc_1gc8qakok1a8\">Update a person</h3>\n<p>We need a method to update existing data records. What if we need to change an existing person record because of a change in the timezone?</p>\n<p>repository/PeopleRepositoryTests.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canUpdate</span><span class=\"hljs-params\">()</span> </span>{\n        Person savedPerson = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test2\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        Person p1 = repo.findById(savedPerson.getId()).get();\n\n        savedPerson.setSalary(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"7300.28\"</span>));\n        repo.update(savedPerson);\n\n        Person P2 = repo.findById(savedPerson.getId()).get();\n        assertThat(P2.getSalary()).isNotEqualTo(p1.getSalary());\n    }</pre>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">update</span><span class=\"hljs-params\">(Person person)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UPDATE PEOPLE SET FIRST_NAME=?, LAST_NAME=?, DOB=?, SALARY=? WHERE ID=?\"</span>);\n            ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, person.getFirstName());\n            ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, person.getLastName());\n            ps.setTimestamp(<span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, convertODBtoTimeStamp(person.getDob()));\n            ps.setBigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>, person.getSalary());\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>, person.getId());\n            ps.executeUpdate();\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Timestamp <span class=\"hljs-title\" style=\"color: #ffc66d;\">convertODBtoTimeStamp</span><span class=\"hljs-params\">(ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Timestamp.valueOf(dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)).toLocalDateTime());\n    }</pre>\n<h2 id=\"mcetoc_1gc8r84pi1ab\">Making it reusable</h2>\n<p>Let's further improve and optimize our existing classes and even make them reusable. We start by extracting the <em>save</em> method of the <em>PeopleRepository</em> class into a new class called <em>CRUDRepository.</em> Let's also extend the <em>PeopleRepository</em> class with the new <em>CRUDRepository</em> class.</p>\n<p>As a starting point we just copy paste the save method to the new class. Now we want to see what parts of this method are the parts that would be unique to a class that might extend this? And what parts would be kind of boilerplate? You know, like the stuff that would be the same any time you had to create a repository class? One more goal of the refactoring is to replace all Person class calls with a capital T to make our new class capable to work with generics. Lets look at the result:</p>\n<p>model/Entity.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">interface</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Entity</span> </span>{\n    <span class=\"hljs-function\">Long <span class=\"hljs-title\" style=\"color: #ffc66d;\">getId</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setId</span><span class=\"hljs-params\">(Long id)</span></span>;\n}\n</pre>\n<p>model/Person.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.Objects;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">implements</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Entity</span> </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> ZonedDateTime dob;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary = BigDecimal.ZERO;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(String firstName, String lastName, ZonedDateTime odb)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.firstName = firstName;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.lastName = lastName;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.dob = odb;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(Long id, String firstName, String lastName, ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>(firstName, lastName, dob);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.id = id;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id, String firstName, String lastName, ZonedDateTime dob, BigDecimal salary)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>(id, firstName, lastName, dob);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.salary = salary;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Long <span class=\"hljs-title\" style=\"color: #ffc66d;\">getId</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> id;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setId</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.id = id;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFirstName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> firstName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setFirstName</span><span class=\"hljs-params\">(String firstName)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.firstName = firstName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getLastName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> lastName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setLastName</span><span class=\"hljs-params\">(String lastName)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.lastName = lastName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> ZonedDateTime <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDob</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> dob;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setDob</span><span class=\"hljs-params\">(ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.dob = dob;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> BigDecimal <span class=\"hljs-title\" style=\"color: #ffc66d;\">getSalary</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> salary;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setSalary</span><span class=\"hljs-params\">(BigDecimal salary)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.salary = salary;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">toString</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Person{\"</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\"id=\"</span> + id +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", firstName='\"</span> + firstName + <span class=\"hljs-string\" style=\"color: #6a8759;\">'\\''</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", lastName='\"</span> + lastName + <span class=\"hljs-string\" style=\"color: #6a8759;\">'\\''</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", dob=\"</span> + dob +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">'}'</span>;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">boolean</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">equals</span><span class=\"hljs-params\">(Object o)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (<span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span> == o) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">true</span>;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (!(o <span class=\"hljs-keyword\" style=\"color: #cc7832;\">instanceof</span> Person)) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">false</span>;\n        Person person = (Person) o;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Objects.equals(id, person.id) &amp;&amp; firstName.equals(person.firstName) &amp;&amp; lastName.equals(person.lastName) &amp;&amp;\n                dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)).equals(person.dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)));\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">hashCode</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Objects.hash(id, firstName, lastName, dob);\n    }\n}\n</pre>\n<p>repository/CRUDRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Entity;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.*;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.ArrayList;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.List;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.Optional;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.stream.Collectors;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CRUDRepository</span>&lt;<span class=\"hljs-title\" style=\"color: #ffc66d;\">T</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">extends</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Entity</span>&gt; </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> Connection connection;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CRUDRepository</span><span class=\"hljs-params\">(Connection connection)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.connection = connection;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> T <span class=\"hljs-title\" style=\"color: #ffc66d;\">save</span><span class=\"hljs-params\">(T entity)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getSaveSql(), Statement.RETURN_GENERATED_KEYS);\n            mapForSave(entity, ps);\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> recordsAffected = ps.executeUpdate();\n            ResultSet rs = ps.getGeneratedKeys();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id = rs.getLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n                entity.setId(id);\n                System.out.println(entity);\n            }\n            System.out.printf(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Records affected: %d%n\"</span>, recordsAffected);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> entity;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Optional&lt;T&gt; <span class=\"hljs-title\" style=\"color: #ffc66d;\">findById</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        T entity = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>;\n\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getFindByIdSql());\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, id);\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                entity = extractEntityFromResultSet(rs);\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Optional.ofNullable(entity);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFindAllSql</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> List&lt;T&gt; <span class=\"hljs-title\" style=\"color: #ffc66d;\">findAll</span><span class=\"hljs-params\">()</span> </span>{\n        List&lt;T&gt; entities = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> ArrayList&lt;&gt;();\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getFindAllSql());\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                entities.add(extractEntityFromResultSet(rs));\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> entities;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">count</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> count = <span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getCountSql());\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (rs.next()) {\n                count = rs.getLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> count;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">delete</span><span class=\"hljs-params\">(T entity)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getDeleteSql());\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, entity.getId());\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> recordsAffected = ps.executeUpdate();\n            System.out.println(recordsAffected);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">delete</span><span class=\"hljs-params\">(T...entities)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            Statement stmt = connection.createStatement();\n            String ids = Arrays.stream(entities).map(T::getId).map(String::valueOf).collect(Collectors.joining(<span class=\"hljs-string\" style=\"color: #6a8759;\">\",\"</span>));\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> affectedRecordCount = stmt.executeUpdate(getDeleteInSql().replace(<span class=\"hljs-string\" style=\"color: #6a8759;\">\":ids\"</span>, ids));\n            System.out.println(affectedRecordCount);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">update</span><span class=\"hljs-params\">(T entity)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getUpdateSql());\n            mapForUpdate(entity, ps);\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>, entity.getId());\n            ps.executeUpdate();\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getUpdateSql</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-comment\" style=\"color: grey;\">/**\n     *\n     * <span class=\"hljs-doctag\">@return</span> should return a SQL string like:\n     * \"DELETE FROM PEOPLE WHERE ID IN (:ids)\"\n     * Be sure to include the '(:ids)' named parameter &amp; call it 'ids'\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDeleteInSql</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDeleteSql</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getCountSql</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> T <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException</span>;\n\n    <span class=\"hljs-comment\" style=\"color: grey;\">/**\n     *\n     * <span class=\"hljs-doctag\">@return</span> Returns a String that represents the SQL needed to retrive one entity.\n     * The SQL must contain one SQL parameter, i.e. \"?\", that will bind to the\n     * entity's ID.\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFindByIdSql</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForSave</span><span class=\"hljs-params\">(T entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException</span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForUpdate</span><span class=\"hljs-params\">(T entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException</span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getSaveSql</span><span class=\"hljs-params\">()</span></span>;\n\n}\n</pre>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.*;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepository</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">extends</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CRUDRepository</span>&lt;<span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span>&gt; </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String SAVE_PERSON_SQL = String.format(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB) VALUES(?,?,?)\"</span>);\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String FIND_BY_ID_SQL = String.format(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SELECT ID, FIRST_NAME, LAST_NAME, DOB, SALARY FROM PEOPLE WHERE ID=?\"</span>);\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String FIND_ALL_SQL = String.format(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SELECT ID, FIRST_NAME, LAST_NAME, DOB, SALARY FROM PEOPLE\"</span>);\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String SELECT_COUNT_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"SELECT COUNT(*) FROM PEOPLE\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String DELETE_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"DELETE FROM PEOPLE WHERE ID=?\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String DELETE_IN_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"DELETE FROM PEOPLE WHERE ID IN (:ids)\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String UPDATE_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"UPDATE PEOPLE SET FIRST_NAME=?, LAST_NAME=?, DOB=?, SALARY=? WHERE ID=?\"</span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepository</span><span class=\"hljs-params\">(Connection connection)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">super</span>(connection);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\">String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getSaveSql</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> SAVE_PERSON_SQL;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForSave</span><span class=\"hljs-params\">(Person entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, entity.getFirstName());\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, entity.getLastName());\n        ps.setTimestamp(<span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, convertODBtoTimeStamp(entity.getDob()));\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\">Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n        String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n        ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n        BigDecimal salary = rs.getBigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SALARY\"</span>);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(personID, firstName, lastName, dob, salary);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForUpdate</span><span class=\"hljs-params\">(Person entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, entity.getFirstName());\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, entity.getLastName());\n        ps.setTimestamp(<span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, convertODBtoTimeStamp(entity.getDob()));\n        ps.setBigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>, entity.getSalary());\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFindByIdSql</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> FIND_BY_ID_SQL;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFindAllSql</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> FIND_ALL_SQL;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getCountSql</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> SELECT_COUNT_SQL;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDeleteSql</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> DELETE_SQL;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDeleteInSql</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> DELETE_IN_SQL;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getUpdateSql</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> UPDATE_SQL;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Timestamp <span class=\"hljs-title\" style=\"color: #ffc66d;\">convertODBtoTimeStamp</span><span class=\"hljs-params\">(ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Timestamp.valueOf(dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)).toLocalDateTime());\n    }\n}\n</pre>\n<h2 id=\"mcetoc_1gc9c3hup1b5\">Improve the SQL statement calls</h2>\n<p>We had to pepper this class with these extra getter and setter methods to provider the SQL statements. But there are frameworks that enable us to do this kind of thing in a better way. We're going to give our <em>CRUDRepository</em> the ability to get the SQL queries without having to implement these abstract methods.<br><br>We can do this by using the Reflection API of Java. The Reflection API is pretty much only used by frameworks, but it just so happens that as we are creating this <em>CRUDRepository</em> functionality, we are basically creating a poor man's framework. So let's go a bit further down this rabbit hole and dig into the Reflection API a little bit.<br><br>This is the big picture: Instead of having to override and implement these various scatter methods to return the SQL, a more modern way of doing the equivalent to this with a lot of modern frameworks would be to actually make use of an annotation so we could have an annotation so we could introduce and create our own annotation. In that annotation, we could specify the SQL that we want, and then our <em>CRUDRepository</em> could dynamically, at runtime, learn the SQL that it needs from the annotation and thereby we would no longer need these methods.</p>\n<p>The Reflection API allows us to write Java code to that allows us to analyze our Java code. This allows us to analyse our code in runtime and to things with it.</p>\n<p>annotation/Id.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.annotation;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.lang.annotation.Retention;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.lang.annotation.RetentionPolicy;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Retention</span>(RetentionPolicy.RUNTIME)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-meta\" style=\"color: #bbb529;\">@interface</span> Id {\n}\n</pre>\n<p>annotation/MultiSQL.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.annotation;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.lang.annotation.Retention;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.lang.annotation.RetentionPolicy;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Retention</span>(RetentionPolicy.RUNTIME)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-meta\" style=\"color: #bbb529;\">@interface</span> MultiSQL{\n    SQL[] value();\n}\n</pre>\n<p>annotation/SQL.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.annotation;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.CrudOperation;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.lang.annotation.Repeatable;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.lang.annotation.Retention;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.lang.annotation.RetentionPolicy;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Retention</span>(RetentionPolicy.RUNTIME)\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Repeatable</span>(MultiSQL.class)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-meta\" style=\"color: #bbb529;\">@interface</span> SQL {\n    <span class=\"hljs-function\">String <span class=\"hljs-title\" style=\"color: #ffc66d;\">value</span><span class=\"hljs-params\">()</span></span>;\n    <span class=\"hljs-function\">CrudOperation <span class=\"hljs-title\" style=\"color: #ffc66d;\">operationType</span><span class=\"hljs-params\">()</span></span>;\n\n}\n</pre>\n<p>model/CrudOperation.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">enum</span> CrudOperation {\n    SAVE,\n    UPDATE,\n    FIND_BY_ID,\n    FIND_ALL,\n    DELETE_ONE,\n    DELETE_MANY,\n    COUNT\n}\n</pre>\n<p>model/Person.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.annotation.Id;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.Objects;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Id</span>\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> ZonedDateTime dob;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary = BigDecimal.ZERO;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(String firstName, String lastName, ZonedDateTime odb)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.firstName = firstName;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.lastName = lastName;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.dob = odb;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(Long id, String firstName, String lastName, ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>(firstName, lastName, dob);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.id = id;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id, String firstName, String lastName, ZonedDateTime dob, BigDecimal salary)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>(id, firstName, lastName, dob);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.salary = salary;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Long <span class=\"hljs-title\" style=\"color: #ffc66d;\">getId</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> id;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setId</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.id = id;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFirstName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> firstName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setFirstName</span><span class=\"hljs-params\">(String firstName)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.firstName = firstName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getLastName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> lastName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setLastName</span><span class=\"hljs-params\">(String lastName)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.lastName = lastName;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> ZonedDateTime <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDob</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> dob;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setDob</span><span class=\"hljs-params\">(ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.dob = dob;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> BigDecimal <span class=\"hljs-title\" style=\"color: #ffc66d;\">getSalary</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> salary;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setSalary</span><span class=\"hljs-params\">(BigDecimal salary)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.salary = salary;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">toString</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Person{\"</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\"id=\"</span> + id +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", firstName='\"</span> + firstName + <span class=\"hljs-string\" style=\"color: #6a8759;\">'\\''</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", lastName='\"</span> + lastName + <span class=\"hljs-string\" style=\"color: #6a8759;\">'\\''</span> +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">\", dob=\"</span> + dob +\n                <span class=\"hljs-string\" style=\"color: #6a8759;\">'}'</span>;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">boolean</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">equals</span><span class=\"hljs-params\">(Object o)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (<span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span> == o) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">true</span>;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (!(o <span class=\"hljs-keyword\" style=\"color: #cc7832;\">instanceof</span> Person)) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">false</span>;\n        Person person = (Person) o;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Objects.equals(id, person.id) &amp;&amp; firstName.equals(person.firstName) &amp;&amp; lastName.equals(person.lastName) &amp;&amp;\n                dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)).equals(person.dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)));\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">hashCode</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Objects.hash(id, firstName, lastName, dob);\n    }\n}\n</pre>\n<p>repository/CRUDRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.annotation.Id;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.annotation.MultiSQL;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.annotation.SQL;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.CrudOperation;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.*;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.ArrayList;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.List;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.Optional;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.function.Supplier;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.stream.Collectors;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.stream.Stream;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CRUDRepository</span>&lt;<span class=\"hljs-title\" style=\"color: #ffc66d;\">T</span>&gt; </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> Connection connection;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CRUDRepository</span><span class=\"hljs-params\">(Connection connection)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.connection = connection;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> T <span class=\"hljs-title\" style=\"color: #ffc66d;\">save</span><span class=\"hljs-params\">(T entity)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getSqlByAnnotation(CrudOperation.SAVE, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>::getSaveSql), Statement.RETURN_GENERATED_KEYS);\n            mapForSave(entity, ps);\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> recordsAffected = ps.executeUpdate();\n            ResultSet rs = ps.getGeneratedKeys();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id = rs.getLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n                setIdByAnnotation(id, entity);\n                System.out.println(entity);\n            }\n            System.out.printf(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Records affected: %d%n\"</span>, recordsAffected);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> entity;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Optional&lt;T&gt; <span class=\"hljs-title\" style=\"color: #ffc66d;\">findById</span><span class=\"hljs-params\">(Long id)</span> </span>{\n        T entity = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>;\n\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getSqlByAnnotation(CrudOperation.FIND_BY_ID, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>::getFindByIdSql));\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, id);\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                entity = extractEntityFromResultSet(rs);\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Optional.ofNullable(entity);\n    }\n\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> List&lt;T&gt; <span class=\"hljs-title\" style=\"color: #ffc66d;\">findAll</span><span class=\"hljs-params\">()</span> </span>{\n        List&lt;T&gt; entities = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> ArrayList&lt;&gt;();\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getSqlByAnnotation(CrudOperation.FIND_ALL, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>::getFindAllSql));\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (rs.next()) {\n                entities.add(extractEntityFromResultSet(rs));\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> entities;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">count</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> count = <span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>;\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getSqlByAnnotation(CrudOperation.COUNT, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>::getCountSql));\n            ResultSet rs = ps.executeQuery();\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (rs.next()) {\n                count = rs.getLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n            }\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            e.printStackTrace();\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> count;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">delete</span><span class=\"hljs-params\">(T entity)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getSqlByAnnotation(CrudOperation.DELETE_ONE, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>::getDeleteSql));\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, getIdByAnnotation(entity));\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> recordsAffected = ps.executeUpdate();\n            System.out.println(recordsAffected);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long <span class=\"hljs-title\" style=\"color: #ffc66d;\">getIdByAnnotation</span><span class=\"hljs-params\">(T entity)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Arrays.stream(entity.getClass().getDeclaredFields())\n                .filter(f -&gt; f.isAnnotationPresent(Id.class))\n                .map(f -&gt; {\n                    f.setAccessible(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">true</span>);\n                    Long id = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>;\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n                        id = (<span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span>)f.get(entity);\n                    } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (IllegalAccessException e) {\n                        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n                    }\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> id;\n                })\n                .findFirst().orElseThrow(() -&gt; <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"No ID annotated field found\"</span>));\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setIdByAnnotation</span><span class=\"hljs-params\">(Long id, T entity)</span> </span>{\n        Arrays.stream(entity.getClass().getDeclaredFields())\n                .filter(f -&gt; f.isAnnotationPresent(Id.class))\n                .forEach(f -&gt; {\n                    f.setAccessible(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">true</span>);\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n                        f.set(entity, id);\n                    } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (IllegalAccessException e) {\n                        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Unable to set ID field value.\"</span>);\n                    }\n                });\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">delete</span><span class=\"hljs-params\">(T...entities)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            Statement stmt = connection.createStatement();\n            String ids = Arrays.stream(entities).map(e -&gt; getIdByAnnotation(e)).map(String::valueOf).collect(Collectors.joining(<span class=\"hljs-string\" style=\"color: #6a8759;\">\",\"</span>));\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> affectedRecordCount = stmt.executeUpdate(getSqlByAnnotation(CrudOperation.DELETE_MANY, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>::getDeleteInSql).replace(<span class=\"hljs-string\" style=\"color: #6a8759;\">\":ids\"</span>, ids));\n            System.out.println(affectedRecordCount);\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">update</span><span class=\"hljs-params\">(T entity)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n            PreparedStatement ps = connection.prepareStatement(getSqlByAnnotation(CrudOperation.UPDATE, <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>::getUpdateSql));\n            mapForUpdate(entity, ps);\n            ps.setLong(<span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>, getIdByAnnotation(entity));\n            ps.executeUpdate();\n        } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (SQLException e) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(e);\n        }\n    }\n\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getSqlByAnnotation</span><span class=\"hljs-params\">(CrudOperation operationType, Supplier&lt;String&gt; sqlGetter)</span> </span>{\n        Stream&lt;SQL&gt; multiSqlStream = Arrays.stream(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.getClass().getDeclaredMethods())\n                .filter(m -&gt; m.isAnnotationPresent(MultiSQL.class))\n                .map(m -&gt; m.getAnnotation(MultiSQL.class))\n                .flatMap(mSQL -&gt; Arrays.stream(mSQL.value()));\n\n        Stream&lt;SQL&gt; sqlStream = Arrays.stream(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.getClass().getDeclaredMethods())\n                .filter(m -&gt; m.isAnnotationPresent(SQL.class))\n                .map(m -&gt; m.getAnnotation(SQL.class));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Stream.concat(multiSqlStream,sqlStream)\n                .filter(a -&gt; a.operationType().equals(operationType))\n                .map(SQL::value)\n                .findFirst().orElseGet(sqlGetter);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getUpdateSql</span><span class=\"hljs-params\">()</span> </span>{<span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SQL not defined.\"</span>);}\n\n    <span class=\"hljs-comment\" style=\"color: grey;\">/**\n     *\n     * <span class=\"hljs-doctag\">@return</span> should return a SQL string like:\n     * \"DELETE FROM PEOPLE WHERE ID IN (:ids)\"\n     * Be sure to include the '(:ids)' named parameter &amp; call it 'ids'\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDeleteInSql</span><span class=\"hljs-params\">()</span> </span>{<span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SQL not defined.\"</span>);}\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getDeleteSql</span><span class=\"hljs-params\">()</span> </span>{<span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SQL not defined.\"</span>);}\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getCountSql</span><span class=\"hljs-params\">()</span> </span>{<span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SQL not defined.\"</span>);}\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFindAllSql</span><span class=\"hljs-params\">()</span> </span>{<span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SQL not defined.\"</span>);}\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> T <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException</span>;\n\n    <span class=\"hljs-comment\" style=\"color: grey;\">/**\n     *\n     * <span class=\"hljs-doctag\">@return</span> Returns a String that represents the SQL needed to retrive one entity.\n     * The SQL must contain one SQL parameter, i.e. \"?\", that will bind to the\n     * entity's ID.\n     */</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">protected</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getFindByIdSql</span><span class=\"hljs-params\">()</span> </span>{<span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SQL not defined.\"</span>);}\n    <span class=\"hljs-function\">String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getSaveSql</span><span class=\"hljs-params\">()</span> </span>{<span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> RuntimeException(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SQL not defined.\"</span>);}\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForSave</span><span class=\"hljs-params\">(T entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException</span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">abstract</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForUpdate</span><span class=\"hljs-params\">(T entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException</span>;\n\n\n}\n</pre>\n<p>repository/PeopleRepositoryV3.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.annotation.SQL;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.CrudOperation;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.*;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepositoryV3</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">extends</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CRUDRepository</span>&lt;<span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span>&gt; </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String SAVE_PERSON_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"INSERT INTO PEOPLE (FIRST_NAME, LAST_NAME, DOB) VALUES(?,?,?)\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String FIND_BY_ID_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"SELECT ID, FIRST_NAME, LAST_NAME, DOB, SALARY FROM PEOPLE WHERE ID=?\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String FIND_ALL_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"SELECT ID, FIRST_NAME, LAST_NAME, DOB, SALARY FROM PEOPLE\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String SELECT_COUNT_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"SELECT COUNT(*) FROM PEOPLE\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String DELETE_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"DELETE FROM PEOPLE WHERE ID=?\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String DELETE_IN_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"DELETE FROM PEOPLE WHERE ID IN (:ids)\"</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String UPDATE_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"UPDATE PEOPLE SET FIRST_NAME=?, LAST_NAME=?, DOB=?, SALARY=? WHERE ID=?\"</span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepositoryV3</span><span class=\"hljs-params\">(Connection connection)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">super</span>(connection);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = SAVE_PERSON_SQL, operationType = CrudOperation.SAVE)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForSave</span><span class=\"hljs-params\">(Person entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, entity.getFirstName());\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, entity.getLastName());\n        ps.setTimestamp(<span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, convertODBtoTimeStamp(entity.getDob()));\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = UPDATE_SQL, operationType = CrudOperation.UPDATE)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">mapForUpdate</span><span class=\"hljs-params\">(Person entity, PreparedStatement ps)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, entity.getFirstName());\n        ps.setString(<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, entity.getLastName());\n        ps.setTimestamp(<span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, convertODBtoTimeStamp(entity.getDob()));\n        ps.setBigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>, entity.getSalary());\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_BY_ID_SQL, operationType = CrudOperation.FIND_BY_ID)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_ALL_SQL, operationType = CrudOperation.FIND_ALL)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = SELECT_COUNT_SQL, operationType =  CrudOperation.COUNT)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_IN_SQL, operationType = CrudOperation.DELETE_MANY)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_SQL, operationType = CrudOperation.DELETE_ONE)\n    <span class=\"hljs-function\">Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n        String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n        ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n        BigDecimal salary = rs.getBigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SALARY\"</span>);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(personID, firstName, lastName, dob, salary);\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Timestamp <span class=\"hljs-title\" style=\"color: #ffc66d;\">convertODBtoTimeStamp</span><span class=\"hljs-params\">(ZonedDateTime dob)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> Timestamp.valueOf(dob.withZoneSameInstant(ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>)).toLocalDateTime());\n    }\n}\n</pre>\n<p>repository/PeopleRepositoryV3Tests.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledb.repository;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledb.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.junit.jupiter.api.AfterEach;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.junit.jupiter.api.BeforeEach;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.junit.jupiter.api.Test;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.Connection;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.DriverManager;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.sql.SQLException;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZoneId;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.ZonedDateTime;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.List;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.Optional;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> org.assertj.core.api.Assertions.assertThat;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleRepositoryV3Tests</span> </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Connection connection;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> PeopleRepositoryV3 repo;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@BeforeEach</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">setUp</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        connection = DriverManager.getConnection(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"jdbc:h2:~/peopletest\"</span>.replace(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"~\"</span>, System.getProperty(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"user.home\"</span>)));\n        connection.setAutoCommit(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">false</span>);\n        repo = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> PeopleRepositoryV3(connection);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@AfterEach</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">tearDown</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (connection != <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>) {\n            connection.close();\n        }\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canSaveOnePerson</span><span class=\"hljs-params\">()</span> </span>{\n        Person john = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-6\"</span>)));\n        Person savedPerson = repo.save(john);\n        assertThat(savedPerson.getId()).isGreaterThan(<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canSaveTwoPeople</span><span class=\"hljs-params\">()</span> </span>{\n        Person john = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"-6\"</span>)));\n        Person bobby = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Bobby\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1982</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">9</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">51</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">54</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>, ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>)));\n        Person savedPerson1 = repo.save(john);\n        Person savedPerson2 = repo.save(bobby);\n        assertThat(savedPerson1.getId()).isNotEqualTo(savedPerson2.getId());\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canFindPersonById</span><span class=\"hljs-params\">()</span> </span>{\n        Person savedPerson = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        Person foundPerson = repo.findById(savedPerson.getId()).get();\n        assertThat(foundPerson).isEqualTo(savedPerson);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">testPersonIdNotFound</span><span class=\"hljs-params\">()</span> </span>{\n        Optional&lt;Person&gt; foundPerson = repo.findById(-<span class=\"hljs-number\" style=\"color: #6897bb;\">1L</span>);\n        assertThat(foundPerson).isEmpty();\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canDeleteOnePerson</span><span class=\"hljs-params\">()</span> </span>{\n        Person savedPerson = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> startCount = repo.count();\n        repo.delete(savedPerson);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> endCount = repo.count();\n        assertThat(endCount).isEqualTo(startCount-<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canDeleteMultiplePerson</span><span class=\"hljs-params\">()</span> </span>{\n        Person p1 = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test1\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        Person p2 = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test2\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> startCount = repo.count();\n        repo.delete(p1, p2);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> endCount = repo.count();\n        assertThat(endCount).isEqualTo(startCount -<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canGetCount</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> startCount = repo.count();\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John1\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smoth\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1880</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">44</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+6\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John2\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smoth\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1880</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">44</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+6\"</span>))));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> endCount = repo.count();\n        assertThat(endCount).isEqualTo(startCount +<span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>);\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canUpdate</span><span class=\"hljs-params\">()</span> </span>{\n        Person savedPerson = repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Test2\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, ZonedDateTime.now()));\n        Person p1 = repo.findById(savedPerson.getId()).get();\n\n        savedPerson.setSalary(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"7300.28\"</span>));\n        repo.update(savedPerson);\n\n        Person P2 = repo.findById(savedPerson.getId()).get();\n        assertThat(P2.getSalary()).isNotEqualTo(p1.getSalary());\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Test</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">canFindAll</span><span class=\"hljs-params\">()</span> </span>{\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John1\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John2\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John3\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John4\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John5\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John6\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John7\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John8\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n        repo.save(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"John9\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, ZonedDateTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">11</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>,ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+1\"</span>))));\n\n        List&lt;Person&gt; people = repo.findAll();\n        assertThat(people.size()).isGreaterThanOrEqualTo(<span class=\"hljs-number\" style=\"color: #6897bb;\">10</span>);\n    }\n}\n</pre>\n<h2 id=\"mcetoc_1gcir9j7k2d\">Speeding up SQL queries</h2>\n<p>They're one or two really basic things that we can do when working with a database to vastly improve the performance of that database. Let's say we have an example SQL query which takes about 2s to complete. So here's the problem. Two seconds might seem like it's pretty fast considering that we're iterating over a big number of rows. But in actuality, that is really quite slow for a database. If this database with all records were being used in an application or on the web or something like that, and we had lots of users who were all trying to do the equivalent of this more or less simultaneously, those two seconds start to add up pretty quickly. And keep in mind every time the computer has to take two and a half seconds to go find one record, that's time that the processor in that computer isn't available to do other things right. So this is actually pretty bad.<br><br>If re needed record is towards the end of the database, the database essentially had to perform what's called a full table scan, meaning just that it had to scan through every single record in the table in order to find that record.<br><br>What could we improve? Java allows us to work with sets and hash maps. And one of the nice things about the hash map or even just maps in general, is the fact that when we store a key and a value pair in a map, the hash map implementation of the map interface has the ability to analyze the key that we're inserting into that key value pair entry and generate a hash code for that key. The hash map will then use that hash code to determine where in a table that entry should go. So the next time you try to retrieve a value out of the hash map using that key, the hash map doesn't have to iterate over every single entry in that map. Instead, it takes your key that you provided. It regenerates a hash code for it, and then it uses that hash code to determine an index into a table where your record exists or where your entry exists. And then it can much more efficiently go straight to that entry. Or at least it can get super super close if there happened to be collisions where other entries yield the same index. But it can cut down a lot on the amount of scanning that has to be done to find your entry.</p>\n<p>With SQL databases you can actually to the same thing, you can create indexes. Lets add an index for a row called \"ID\" and \"EMAIL\":</p>\n<p><code>CREATE INDEX ID_IDX ON PEOPLE(ID);</code></p>\n<p><code>CREATE INDEX EMAIL_IDX ON PEOPLE(EMAIL);</code></p>\n<p>This allows us to speed up a single SQL query from 4-5s down to a millisecond. So it's a huge speed boost.</p>\n<p>Now you may be thinking, well then we should probably just generate indexes on every single column, in every database table every time. No better not. Why? These indexes come at a cost. So we don't necessarily just want to automatically generate indexes on every single column in every single table. The key to figuring this out is to understand how our database applications will be utilized. So we have to ask ourselves questions like in what ways are our users most likely to search for and query data? For example, if we have an application that allows people to enter an ID to look up some kind of data or record, well, then you know, you're certainly going to have to be querying the database by ID for those particular records. And since you know that for certain, you'll definitely want to have an index generated on that particular column and any other columns that users are likely to specifically search by or grouping by.<br><br>So any of these key types of columns where you're going to search by or group by or sorting on any of those types of columns, you will likely want to have an index generated on them.<br><br><strong>But here's the cost: When you have indexes generated on columns in a table and then you insert records into the table, inserts and updates can take longer now because now every time you do an insert or potentially even an update, the database will certainly have to do its analysis and re indexing, potentially on inserts. And it may have to do it on updates, particularly if you modified a column that has an index on it.</strong></p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "try catch",
                   "stream-api",
                   "sql",
                   "software development",
                   "lambda",
                   "java",
                   "generics",
                   "exception",
                   "dev",
                   "database"
            ],
            "date_published": "2022-09-06T14:20:53+02:00",
            "date_modified": "2022-09-10T06:42:36+02:00"
        },
        {
            "id": "https://www.finecloud.ch/infrastructure-as-software.html",
            "url": "https://www.finecloud.ch/infrastructure-as-software.html",
            "title": "Infrastructure as Software",
            "summary": "Summary This post is my summary (for my own sake) of the original full length post: https://www.justingarrison.com/blog/2022-06-01-infrastructure-as-software/ Writing your infrastructure in a DSL or any other general purpose coding language like Ansible, Pulumi, Terraform is not Infrastructure as Software. Any managed service to deploy infrastructure&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gc2cjg0h1a1\">Summary</a></li>\n<li><a href=\"#mcetoc_1gc2ckge01a3\">What is not IaS</a></li>\n<li><a href=\"#mcetoc_1gc2cl9vm1a5\">Downsides of IaC</a></li>\n<li><a href=\"#mcetoc_1gc0s4fdi128\">Downsides of IaD</a></li>\n<li><a href=\"#mcetoc_1gc0s4fdi129\">Downsides of managed services</a></li>\n<li><a href=\"#mcetoc_1gc0s4fdi12a\">So why IaS?</a></li>\n<li><a href=\"#mcetoc_1gc2ci10e19t\">Examples of IaS</a>\n<ul>\n<li><a href=\"#mcetoc_1gc2ci10e19u\">Kubernetes controllers</a></li>\n<li><a href=\"#mcetoc_1gc2ci10e19v\">GitOps</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gc2cjg0h1a1\">Summary</h2>\n<p>This post is my summary (for my own sake) of the original full length post:<a href=\"https://www.justingarrison.com/blog/2022-06-01-infrastructure-as-software/\"> https://www.justingarrison.com/blog/2022-06-01-infrastructure-as-software/</a></p>\n<h2 id=\"mcetoc_1gc2ckge01a3\">What is not IaS</h2>\n<p>Writing your infrastructure in a DSL or any other general purpose coding language like Ansible, Pulumi, Terraform is not Infrastructure as Software. Any managed service to deploy infrastructure without acting like a one-time shoot action (AWS CloudFormation) is also not IaS. Also not ment is Infrastructure as Data (IaD).</p>\n<h2 id=\"mcetoc_1gc2cl9vm1a5\">Downsides of IaC</h2>\n<h2 id=\"mcetoc_1gc0s4fdi125\"></h2>\n<p>The big benefit of IaC is that your developers can write code that creates infrastructure and you can use coding practices to create libraries other people can share. But lets look the downsides of Infrastructure as code:</p>\n<ul>\n<li>Writing an application with (for example) Java and also IaC in (for example) Java: if you want to upgrade your Java version, you need to upgrade both! Another maintenance tasks which can cause conflicts.</li>\n<li>What if you need to transition the IaC and the hole infrastructure to a new team or person which doesn't know anything like (for example) Java? They will for sure rewrite the hole IaC stuff in a language they know or even worse they will do everything manually by hand.</li>\n<li>Writing IaC in different languages means you can't reuse or integrate modules together. One is in Java, one in Ansible, one in Terraform's HCL.</li>\n</ul>\n<h2 id=\"mcetoc_1gc0s4fdi128\">Downsides of IaD</h2>\n<p>The goal if IaD is separating your declarative requirements from the implementation code. With Terrafrom I can roll out IaC like this:</p>\n<p><code>terraform apply</code></p>\n<p>or I can separate the requirements in variables (which represents the unique data) apart from the generic IaC-code:</p>\n<p><code>terraform apply -vars-file data.tfvars</code></p>\n<p>The challenge with IaD is, what it relies on general purpose infrastructure reconcilers. In other words you fall back to combining your data with some form of automation or templating your data into something that can be compiled. Examples for k8s are helm charts and kustomize.</p>\n<h2 id=\"mcetoc_1gc0s4fdi129\">Downsides of managed services</h2>\n<p>The problem with managed services is, that its only a one-way sync automation. It requires you to send data it can deploy, but when things change those services are ignorant and do not correct the differences between your desired state and the actual state in your production. Well there are a few mechanisms to detect drifts, but they always require manual interaction.</p>\n<h2 id=\"mcetoc_1gc0s4fdi12a\">So why IaS?</h2>\n<p>The big deal of IaS is that it allows you to continually reconcile state and sync state into the stack. It manages your infrastructure continuously. <strong>The main difference between IaC or IaD to IaS is that IaS is a continually running process, your code is always in action. IaS reads your data, stores it, reads the infrastructure state, stores it, and then checks if the two matches. It's a two-way sync automation that knows how to imperatively get from one state to another.</strong></p>\n<h2 id=\"mcetoc_1gc2ci10e19t\">Examples of IaS</h2>\n<p>Two famous examples of IaS are:</p>\n<ul>\n<li>Kubernetes controllers</li>\n<li>GitOps</li>\n</ul>\n<h3 id=\"mcetoc_1gc2ci10e19u\">Kubernetes controllers</h3>\n<p>Kubernetes controllers ares used as example in Cloud Native Infrastructure. The idea of this is to use K8s CRDs + a controller to manage infrastructure. Examples are<a href=\"https://crossplane.io/\"> crossplane</a>, <a href=\"https://github.com/aws-controllers-k8s/community\">AWS Controllers for Kubernetes (ACK)</a>, and GitOps. It’s also been used for managing state of applications in Kubernetes with <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\">operators</a>.</p>\n<h3 id=\"mcetoc_1gc2ci10e19v\">GitOps</h3>\n<p>GitOps is a idea for using a general purpose reconciler to manage more resources. Let's have a look a the GitOps principles:</p>\n<ol>\n<li><strong>Declarative</strong>: A system managed by GitOps must have its desired state expressed declaratively</li>\n<li><strong>Versioned and Immutable</strong>: Desired state is store in a way that enforces immutability, versioning and retains a complete version history</li>\n<li><strong>Pulled Automatically</strong>: Software agents automatically pull the desired state declarations from the source</li>\n<li><strong>Continuously Reconciled</strong>: Software agents continuously observe actual system state and attempt to apply the desired state</li>\n</ol>\n<p>There are multiple options for controllers that implement GitOps. <a href=\"https://fluxcd.io/\" rel=\"nofollow\">Flux</a> and <a href=\"https://argoproj.github.io/\" rel=\"nofollow\">Argo</a> are the two most popular GitOps controllers known so far.</p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "terraform",
                   "kubernetes",
                   "k8s",
                   "infrastructure as software",
                   "infrastructure as data",
                   "infrastructure as code",
                   "ias",
                   "gitops",
                   "git",
                   "flux",
                   "docker",
                   "argo"
            ],
            "date_published": "2022-09-03T21:19:40+02:00",
            "date_modified": "2022-09-03T21:19:40+02:00"
        },
        {
            "id": "https://www.finecloud.ch/java-basics-dates-and-time.html",
            "url": "https://www.finecloud.ch/java-basics-dates-and-time.html",
            "title": "Java basics: Dates and Time",
            "summary": "Local date Now Let's start with the basics, we just want to represent the date today and print that local date now: public class TimeTest { public static void main(String[] args) { LocalDate now = LocalDate.now(); System.out.println(now); } } output: 2022-08-29 Process finished with exit&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gbmeuk7f4r\">Local date</a>\n<ul>\n<li><a href=\"#mcetoc_1gbmfa47955\">Now</a></li>\n<li><a href=\"#mcetoc_1gbmeuk7f4s\">Set a Date</a></li>\n<li><a href=\"#mcetoc_1gbmeuk7f4u\">Dates until</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1gbmfa47956\">Local Time</a>\n<ul>\n<li><a href=\"#mcetoc_1gbmgm59995\">Now</a></li>\n<li><a href=\"#mcetoc_1gbmgm59996\">Set a time</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1gbmgm59997\">Local date time</a></li>\n<li><a href=\"#mcetoc_1gbmuqcgbb6\">Measuring how much time elapsed</a></li>\n<li><a href=\"#mcetoc_1gbmuqcgbb7\">Instant</a></li>\n<li><a href=\"#mcetoc_1gbmvuoobba\">Time Zones</a></li>\n<li><a href=\"#mcetoc_1gbnqrvhujl\">Temporal Adjuster</a></li>\n<li><a href=\"#mcetoc_1gbnqrvhujm\">Immutability</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gbmeuk7f4r\">Local date</h2>\n<h3 id=\"mcetoc_1gbmfa47955\">Now</h3>\n<p>Let's start with the basics, we just want to represent the date today and print that local date now:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">TimeTest</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        LocalDate now = LocalDate.now();\n        System.out.println(now);\n    }\n}</pre>\n<p>output: <br><code>2022-08-29</code><br><br><code>Process finished with exit code 0</code><br><br>What if we want to pick a specific date in the future of today? We can use the plusDays, plusWeeks, plusMonths or plusYears for this:<br><br><code>        System.out.println(now.plusYears(5));</code><br><br>output: <br><code>2027-08-29</code><br><br><code>Process finished with exit code 0</code><br><br>If you want a more generic way you can also use this:<br><br><code>        System.out.println(now.plus(3, ChronoUnit.YEARS));</code><br><br>output:<br><code>2025-08-29</code><br><br><code>Process finished with exit code 0</code><br><br>There is also a minus Method, which does exactly the opposite of the plus method.</p>\n<h3 id=\"mcetoc_1gbmeuk7f4s\">Set a Date</h3>\n<p>There is a method, which allows you to specify a year, month and a day of month:<br><br><code>        LocalDate newYears = LocalDate.of(2020,1,1);</code><br><code>        System.out.println(newYears);</code><br><br>output:<br><code>2020-01-01</code><br><br><code>Process finished with exit code 0</code><br><br>Let's say that we wanted to know what day of the week was New Year's Day in 2020. That's really easy to do because there are some really convenient methods on our local date classes to give us that kind of information so we can do a get.<br><br><code>        System.out.println(newYears.getDayOfWeek());</code><br><br>output:</p>\n<p><code>WEDNESDAY</code><br><br><code>Process finished with exit code 0</code><br><br><br>Same exists for:</p>\n<ul>\n<li>getDayOfMonth</li>\n<li>getDayOfYear</li>\n<li>getMonth</li>\n</ul>\n<h3 id=\"mcetoc_1gbmeuk7f4u\">Dates until</h3>\n<p>This returns a stream of local dates between the New Years date and now, for example. We can use the streams API and lambdas on Date: if we do something like a for each, we can print out each of these dates:<br><br><code>        System.out.println(newYears.getDayOfWeek());</code><br><code>        newYears.datesUntil(LocalDate.now())</code><br><code>                .forEach(System.out::println);</code><br><br><br>output: <br><br><code>2020-01-01</code><br><code>2020-01-02</code><br><code>..</code><br><code>2022-08-26</code><br><code>2022-08-27</code><br><code>2022-08-28</code><br><br><code>Process finished with exit code 0</code><br><br>If you didn't want that to generate each and every single day, you can actually specify with an overloaded version of the *datesUntil* method a period, like so:<br><br><code>        newYears.datesUntil(LocalDate.now(), Period.ofMonths(1))</code><br><code>                .forEach(System.out::println);</code><br><br>output:<br><br><code>2020-01-01</code><br><code>2020-02-01</code><br><code>...</code><br><code>2022-06-01</code><br><code>2022-07-01</code><br><code>2022-08-01</code><br><br><code>Process finished with exit code 0</code><br><br></p>\n<h2 id=\"mcetoc_1gbmfa47956\">Local Time</h2>\n<p>The class local dates is quite similar to the local dates class and very helpful. Basically, all the things that we can do that make sense with local date, we can also do with local time.</p>\n<h3 id=\"mcetoc_1gbmgm59995\">Now</h3>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">TimeTestTime</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        LocalTime now = LocalTime.now();\n        System.out.println(now);\n    }\n}</pre>\n<p>output:</p>\n<p><code>06:17:48.708787</code><br><br><code>Process finished with exit code 0</code><br><br>Please note: <strong>Local date represents literally a date with no time component associated with it. Local time represents a time with no date associated with it.</strong></p>\n<h3 id=\"mcetoc_1gbmgm59996\">Set a time</h3>\n<p>Of course you can also create a custom time and compere one time object with another:</p>\n<p><code>        LocalTime lt1 = LocalTime.of(10,30);</code><br><code>        LocalTime lt2 = LocalTime.of(10,31);</code><br><code>        System.out.println(lt1.equals(lt2));</code></p>\n<p>output:</p>\n<p><code>false</code><br><br><code>Process finished with exit code 0</code></p>\n<h2 id=\"mcetoc_1gbmgm59997\">Local date time</h2>\n<p>This class allows us the full culmination of having both the date and the time together. Here we can specify a year, month, day, minute, year, month, day of month, hour, minute, second, nanoseconds. We can even build a local date time out of a local date and a local time, which makes sense, right?</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">TimeTestDateTime</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        LocalDate ld1 = LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n        LocalTime lt1 = LocalTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">10</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">30</span>);\n        LocalDate ld2 = LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>);\n        LocalTime lt2 = LocalTime.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">10</span>,<span class=\"hljs-number\" style=\"color: #6897bb;\">30</span>);\n\n        LocalDateTime ltd1 = LocalDateTime.of(ld1,lt1);\n        LocalDateTime ltd2 = LocalDateTime.of(ld2,lt2);\n        System.out.println(ltd1.equals(ltd2));\n    }\n}</pre>\n<p>output:</p>\n<p><code>true</code><br><br><code>Process finished with exit code 0</code><br><br></p>\n<h2 id=\"mcetoc_1gbmuqcgbb6\">Measuring how much time elapsed</h2>\n<p>You can easily just extract the local date from a local date time or the local time from a local date time. Or we can calculate the difference between two dates:</p>\n<p><code>        Period diff = Period.between(ld1, ld2);</code><br><code>        System.out.printf(\"%d years, %d months, %d days%n\", diff.getYears(), diff.getMonths(), diff.getDays());</code></p>\n<p>output:</p>\n<p><code>2 years, 5 months, 9 days</code><br><br><code>Process finished with exit code 0</code></p>\n<p>The<em> period </em>method allows us measuring differences in terms of days, weeks, months and years. The first argument is meant to be the starting point or the earlier date, and then the second argument is meant to be the later date.</p>\n<p>If we want to measure in smaller terms of just days, lets say we want to know the elapsed hours, minutes, seconds or milliseconds between two times, then we need to use the <em>duration</em> method, just like we used the <em>period</em> method before. For each duration method there is a <em>toX</em> method as well as a <em>toXPart</em> method. The <em>toHoursPart</em> method simply gives us back the actual number for the hours that we were receiving in the original duration object itself when we just called to string on the duration itself. This is just returning back the hours portion of that, whereas the <em>toHours</em> method, actually just takes the total number of seconds for the entire duration and divides it by 3600 being the number of seconds in an hour.</p>\n<h2 id=\"mcetoc_1gbmuqcgbb7\">Instant</h2>\n<p>Instant is actually quite similar, to local date time, except that local date, local time and local date time are really all meant for human consumption. So if you're writing programs that are going to be dealing with dates and times that are meant for humans to enter or to read, you'd want to be using these classes generally speaking.</p>\n<p>On the other hand, though functionally somewhat similar to the local date, time has a different purpose, and that is for machines to share timing with each other.</p>\n<p><code>        System.out.println(Instant.now());</code></p>\n<p>output:</p>\n<p><code>2022-08-30T08:37:45.926007Z</code><br><br><code>Process finished with exit code 0</code></p>\n<p>But the instant actually tracks time in terms of seconds. And this is actually part of a legacy in computing that dates back to a specific date in time 1970 January 1st, which is known as epoch time. The creators of the very popular operating system Unix chose to track time in their operating system from that date. And that's around the period of time when Unix was released. So that's kind of the birth time of Unix. And so they just chose 1970 January 1st, and presumably because so many programs written from that period of time forward used this notion of time tracking called the epoch time. It has persisted to this day, which is kind of weird when you really think about it. There may be times as a developer when you need to specify dates and times to other systems. Some of these other systems may require that you pass them date time information using epoch time. And if you need to do that, you can use the instant class to do so.</p>\n<h2 id=\"mcetoc_1gbmvuoobba\">Time Zones</h2>\n<p>What if you have a WebApp which is used worldwide over different timezones? Which time should you use to save the data? How can you guarantee that the timestamps over different timezones are correctly displayed for each user?</p>\n<p>Luckily there is a class to help us: <em>ZonedDateTime</em>. You need to provide a <em>LocalDate</em> or <em>LocalDateTime</em> as well as a <em>ZoneId</em>. If you use <em>ZoneId.systemDefault()</em> then Java uses the Timezone of your local Computer. Keep in mind that most often your software will run on a server and you don't want to use the timezone of your server, because most often your server does not run in the same TimeZone as you are:</p>\n<p><code>System.out.println(ZonedDateTime.of(ltd1, ZoneId.systemDefault()));</code></p>\n<p>example output:</p>\n<p><code>2000-01-01T10:30+01:00[Europe/Zurich]</code><br><br><code>Process finished with exit code 0</code></p>\n<p>but we can set the Timezone to anything we want, like so:</p>\n<p><code>System.out.println(ZonedDateTime.of(ltd1, ZoneId.of(\"-5\")));</code></p>\n<p>output:</p>\n<p><code>2000-01-01T10:30-05:00</code></p>\n<p>One possible thing which we could do to solve the time difference between users, is that we could normalize the time in one standard time zone, which will typically be UTC. We need to store everything in UTC on the Server.</p>\n<p>Let's say that our users want their message to be sent at moon on Christmas. And let's also say that our user lives in Switzerland, this is the information that get's transmitted from their Web browser to our servers. So far we have the information about the xmas date and time, as well as the users TimeZone:</p>\n<p><code>        LocalDateTime xmas = LocalDateTime.of(2022,12,25,12,00);</code><br><code>        // Switzerland - GMT+01</code><br><code>        ZonedDateTime zxmas = ZonedDateTime.of(xmas, ZoneId.of(\"+1\"));</code></p>\n<p>to normalize this, we can now use this:</p>\n<p><code>        System.out.println(zxmas.withZoneSameInstant(ZoneId.of(\"+0\")));</code></p>\n<p>output:</p>\n<p><code>2022-12-25T11:00Z</code><br><br><code>Process finished with exit code 0</code></p>\n<p>And this is finally the information we want to store in the database, if the database does not support TimeZones.</p>\n<p><strong>If you have a greenfield approach, or if you can control the database as much as your want, you should go ahead and store the Date, Time and TimeZone information all together in the database.</strong></p>\n<h2 id=\"mcetoc_1gbnqrvhujl\">Temporal Adjuster</h2>\n<p>This is a weird name as long as you don't know what it is for. This class allows us to make adjustments to time. What does that mean? It means warping time in ways that humans might say in English, like for example, the Friday after next, or the next Thursday and things like that. So let's say you wanted to figure out the next Tuesday from that date on <em>d1:</em></p>\n<p><code>System.out.println(ld1.with(TemporalAdjusters.next(DayOfWeek.TUESDAY)));</code></p>\n<p>output:</p>\n<p><code>2000-01-04</code><br><br><code>Process finished with exit code 0</code></p>\n<p>So basically, what this means is from the date that we're specifying here the <em>d1</em>, whatever that date is, create another date that starts at that same point in time <em>d1</em> and then generate a new date, which would represent the next and then whatever day of the week in this particular case. There are a lot more methods on the TermporalAdjusters like <em>lastDayOfYear, lastDayOfMonth, firstInMonth</em> only to name a few.</p>\n<h2 id=\"mcetoc_1gbnqrvhujm\">Immutability</h2>\n<p>All of these new daytime classes <em>LocalDate, LocalTime, LocalDate, TimeZone, DateTime,</em> et cetera are all designed to be immutable. Immutable is a term that you'll hear from time to time in software development, and it just means that you can't change the properties of that object after it has been created. This is considered to be a very desirable trait of objects frequently in programming, especially when you deal with functional programming styles.</p>\n<p>So the <em>DateTime</em> API just embraces the immutable pattern throughout, but that comes with some consequences. That means that when we create an instance of a local data or time or any of these other classes, and we want to change some property of one of those objects, we can't just make a change. Instead, what we can do is we can basically clone an object and change things in the clone as it's being cloned.</p>\n<p><code>System.out.println(ld1.withMonth(3).withDayOfMonth(15));</code></p>\n<p>output:</p>\n<p><code>2000-03-15</code><br><br><code>Process finished with exit code 0</code></p>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "unix",
                   "stream-api",
                   "software development",
                   "linux",
                   "lambda",
                   "java basics",
                   "java",
                   "dev"
            ],
            "date_published": "2022-08-30T16:28:31+02:00",
            "date_modified": "2022-08-30T18:55:35+02:00"
        }
    ]
}
