{
    "version": "https://jsonfeed.org/version/1",
    "title": "Finecloud",
    "description": "",
    "home_page_url": "https://www.finecloud.ch",
    "feed_url": "https://www.finecloud.ch/feed.json",
    "user_comment": "",
    "author": {
        "name": "Finecloud"
    },
    "items": [
        {
            "id": "https://www.finecloud.ch/javascript-functions.html",
            "url": "https://www.finecloud.ch/javascript-functions.html",
            "title": "JavaScript functions",
            "summary": "Function Expression A function expression starts with the keyword function followed by the function arguments in parentheses and the function body in curly braces: const square = function(x) { return x * x; }; console.log(square(4)); // &gt;&gt; 16 Function Scope Each function deﬁnes a scope&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gn00tl6e8l\">Function Expression</a></li>\n<li><a href=\"#mcetoc_1gn018lrv9b\">Function Scope</a></li>\n<li><a href=\"#mcetoc_1gn018lrv9c\">Lexical Scope</a></li>\n<li><a href=\"#mcetoc_1gn02tcrha3\">Nested Scope</a></li>\n<li><a href=\"#mcetoc_1gn02tcrha4\">Functions are Objects</a></li>\n<li><a href=\"#mcetoc_1gn036mefbt\">Closure</a></li>\n<li><a href=\"#mcetoc_1gn036mefbu\">Function Declaration</a></li>\n<li><a href=\"#mcetoc_1gn0ggrqvcq\">Function Declarations are Hoisted</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gn00tl6e8l\">Function Expression</h2>\n<p>A function expression starts with the keyword function followed by the function arguments in parentheses and the function body in curly braces:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> square = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">x</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> x * x;\n};\n\n<span class=\"hljs-built_in\">console</span>.log(square(<span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>));  <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 16</span>\n</pre>\n<h2 id=\"mcetoc_1gn018lrv9b\">Function Scope</h2>\n<ul>\n<li>Each function deﬁnes a scope</li>\n<li>Local variables of a function are not visible outside of the function</li>\n</ul>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> a = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Hello \"</span>;          <span class=\"hljs-comment\" style=\"color: grey;\">// a has global scope</span>\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> f = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">b</span>) </span>{      <span class=\"hljs-comment\" style=\"color: grey;\">// b is local to f</span>\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> c = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"!\"</span>;             <span class=\"hljs-comment\" style=\"color: grey;\">// c is local to f</span>\n  <span class=\"hljs-built_in\">console</span>.log(a+b+c);\n};\n\nf(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"World\"</span>);                 <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; Hello World!</span>\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">typeof</span> b);      <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; undefined</span>\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">typeof</span> c);      <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; undefined</span></pre>\n<h2 id=\"mcetoc_1gn018lrv9c\">Lexical Scope</h2>\n<p>Variables have lexical (static) scope, i.e., the scope of a variable is determined by the code context of the variable:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> a = <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> f = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">b</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> a+b;\n};\n\n<span class=\"hljs-built_in\">console</span>.log(f(<span class=\"hljs-number\" style=\"color: #6897bb;\">7</span>));      <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 9</span>\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> g = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>() </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> a = <span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>;          <span class=\"hljs-comment\" style=\"color: grey;\">// a is hiding the global variable inside g</span>\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> f(<span class=\"hljs-number\" style=\"color: #6897bb;\">7</span>);          <span class=\"hljs-comment\" style=\"color: grey;\">// but the global variable is used inside f</span>\n};\n<span class=\"hljs-built_in\">console</span>.log(g());       <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 9</span>\n</pre>\n<h2 id=\"mcetoc_1gn02tcrha3\">Nested Scope</h2>\n<ul>\n<li>Blocks and functions can be created inside other blocks and functions</li>\n<li>Each local scope can access the variables from the surrounding scopes</li>\n</ul>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> a = <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> f = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">b</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> x = <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>;\n\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> g = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>() </span>{    <span class=\"hljs-comment\" style=\"color: grey;\">// g has access to the local variables of f and to</span>\n    x *= a;                 <span class=\"hljs-comment\" style=\"color: grey;\">// the variables of the global scope</span>\n  };\n\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">while</span> (x &lt; b) g();\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> x;\n};\n<span class=\"hljs-built_in\">console</span>.log(f(<span class=\"hljs-number\" style=\"color: #6897bb;\">100</span>))        <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 128</span>\n</pre>\n<h2 id=\"mcetoc_1gn02tcrha4\">Functions are Objects</h2>\n<p>Functions are objects, hence they can be used as arguments and return values of other functions (higher-order functions)</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">// Function as argument</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> repeat = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">action, n</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">for</span> (<span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> i = <span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>; i &lt; n; i++) action();\n};\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> sayHello = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>() </span>{\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Hello\"</span>);\n}\nrepeat(sayHello, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>);                   <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; Hello Hello Hello</span>\n\n<span class=\"hljs-comment\" style=\"color: grey;\">// Function as return value</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> formatter = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">prefix, suffix</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> prefix+s+suffix;\n  }\n};\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> format = formatter(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"'\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"!'\"</span>);\n<span class=\"hljs-built_in\">console</span>.log(format(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Hello World\"</span>));    <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 'Hello World!'</span>\n</pre>\n<h2 id=\"mcetoc_1gn036mefbt\">Closure</h2>\n<p>A function that references a speciﬁc instance of a local variable in an enclosing function is called a closure:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> counter = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>(<span class=\"hljs-params\">init</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> val = <span class=\"hljs-built_in\">Number</span>(init);\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>() </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> ++val;\n  };\n};\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> countA = counter(<span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>);    <span class=\"hljs-comment\" style=\"color: grey;\">// countA references a specific instance of val</span>\n<span class=\"hljs-built_in\">console</span>.log(countA());         <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 13</span>\n<span class=\"hljs-built_in\">console</span>.log(countA());         <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 14</span>\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> countB = counter(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"6\"</span>);   <span class=\"hljs-comment\" style=\"color: grey;\">// countB references another instance of val</span>\n<span class=\"hljs-built_in\">console</span>.log(countB());         <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 7</span>\n<span class=\"hljs-built_in\">console</span>.log(countA());         <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 15</span>\n</pre>\n<h2 id=\"mcetoc_1gn036mefbu\">Function Declaration</h2>\n<p>A function declaration deﬁnes a variable which points to the given function:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">// Declare f to be a function</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">f</span>() </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"I'm a chicken\"</span>;\n}\n\n<span class=\"hljs-built_in\">console</span>.log(f());      <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; I'm a chicken</span>\n\n<span class=\"hljs-comment\" style=\"color: grey;\">// The variable f can be reassigned</span>\nf = <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span>() </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"I'm a fox\"</span>;\n}\n\n<span class=\"hljs-built_in\">console</span>.log(f());      <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; I'm a fox</span>\n</pre>\n<h2 id=\"mcetoc_1gn0ggrqvcq\">Function Declarations are Hoisted</h2>\n<p>Function declarations are not part of the regular top-to-bottom ﬂow of control:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">// The function f can be used before it is declared</span>\n<span class=\"hljs-built_in\">console</span>.log(f(<span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>));     <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 48</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">f</span>(<span class=\"hljs-params\">a</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> g() * a;\n};\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">function</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">g</span>() </span>{\n  <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>;\n}\n</pre>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "software development",
                   "javascript",
                   "dev"
            ],
            "date_published": "2023-01-17T15:46:55+01:00",
            "date_modified": "2023-01-17T19:41:43+01:00"
        },
        {
            "id": "https://www.finecloud.ch/javascript-basics.html",
            "url": "https://www.finecloud.ch/javascript-basics.html",
            "title": "JavaScript basics",
            "summary": "What JavaScript is A scripting language originally designed for web browsers Object-oriented, however prototype-based and not class-based Supporting ﬁrst-class functions A multi-paradigm language, supports imperative, object-oriented and functional programming style Untyped Moving from an interpreted language to just-in-time compilation Nowadays used for server-side programming too&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gmvv0co91\">What JavaScript is</a></li>\n<li><a href=\"#mcetoc_1gmvve8qg1r\">JavaScript and the Browser</a></li>\n<li><a href=\"#mcetoc_1gmvve8qg1s\">Node.js</a></li>\n<li><a href=\"#mcetoc_1gn00enet3r\">Variable Declaration and Value Assignment</a></li>\n<li><a href=\"#mcetoc_1gn00enet3s\">JavaScript is untyped</a></li>\n<li><a href=\"#mcetoc_1gn00tl6e8i\">Block Scope</a></li>\n<li><a href=\"#mcetoc_1gn00tl6e8j\">Equality and Identicalness</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gmvv0co91\">What JavaScript is</h2>\n<ul>\n<li>A scripting language originally designed for web browsers</li>\n<li>Object-oriented, however prototype-based and not class-based</li>\n<li>Supporting ﬁrst-class functions</li>\n<li>A multi-paradigm language, supports imperative, object-oriented and functional programming style</li>\n<li>Untyped</li>\n<li>Moving from an interpreted language to just-in-time compilation</li>\n<li>Nowadays used for server-side programming too</li>\n<li>Relying on a host/run-time environment (web browser, Node.js)</li>\n</ul>\n<h2 id=\"mcetoc_1gmvve8qg1r\">JavaScript and the Browser</h2>\n<ul>\n<li>The browser is the most common host environment</li>\n<li>It provides a graphical user interface (via DOM)</li>\n</ul>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!doctype html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>JavaScript<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-comment\" style=\"color: grey;\">// Output to the console</span>\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Hello world\"</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;<br></span></span></pre>\n<h2 id=\"mcetoc_1gmvve8qg1s\">Node.js</h2>\n<ul>\n<li>Node.js is a server-side host environment</li>\n<li>Initially conceived to facilitate asynchronous I/O</li>\n</ul>\n<pre class=\"hljs\"><span class=\"hljs-built_in\">let</span> x = Math.<span class=\"hljs-built_in\">floor</span>((Math.<span class=\"hljs-built_in\">random</span>() * <span class=\"hljs-number\">10</span>) + <span class=\"hljs-number\">1</span>);\nconsole.<span class=\"hljs-built_in\">log</span>(<span class=\"hljs-string\">\"Your random number is: \"</span> + x);</pre>\n<p>this can be executed with:</p>\n<pre>$ node example.js<br>Your random number is: 42</pre>\n<h2 id=\"mcetoc_1gn00enet3r\">Variable Declaration and Value Assignment</h2>\n<ul>\n<li>Variables are declared using the let keyword or const if no reassignment is needed</li>\n<li>The old var keyword shouldn’t be used anymore</li>\n</ul>\n<blockquote>\n<p>Tip: always use const. Only need let if you really need to change the variable later on</p>\n</blockquote>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">// Declare a variable</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> x;\n<span class=\"hljs-built_in\">console</span>.log(x); <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; undefined</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">// Assign a value to a variable</span>\nx = <span class=\"hljs-number\" style=\"color: #6897bb;\">42</span>;\n<span class=\"hljs-built_in\">console</span>.log(x); <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 42</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">// Declare and assign in one stroke</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> y = 2;\n<span class=\"hljs-comment\" style=\"color: grey;\">// Variables declared using ’let’ can be reassigned</span>\ny = 1;\n<span class=\"hljs-comment\" style=\"color: grey;\">// Variables declared using ’const’ cannot be reassigned</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> z = 99;\nz = <span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>; <span class=\"hljs-comment\" style=\"color: grey;\">// ERROR</span></pre>\n<h2 id=\"mcetoc_1gn00enet3s\">JavaScript is untyped</h2>\n<p>So JavaScript has no Types? Well it has, but not before runtime. JavaScript is dynamically typed, i.e., the type of a variable is determined at runtime and may change during program execution.</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> x = <span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>;\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">typeof</span> x);  <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; number</span>\n\n<span class=\"hljs-comment\" style=\"color: grey;\">// Values of different types can be assigned to a variable</span>\nx = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Hello World\"</span>;\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">typeof</span> x);  <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; string</span>\n\n<span class=\"hljs-comment\" style=\"color: grey;\">// Automatic type conversion</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> y = <span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>+<span class=\"hljs-string\" style=\"color: #6a8759;\">\"10\"</span>;\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">typeof</span> y);  <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; string ('1210')</span>\ny = <span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>-<span class=\"hljs-string\" style=\"color: #6a8759;\">\"10\"</span>;\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">typeof</span> y);  <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; number (2)</span>\n\n<span class=\"hljs-comment\" style=\"color: grey;\">// Explicit type conversion with Number(), String() and Boolean()</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> z = <span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>+<span class=\"hljs-built_in\">Number</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"10\"</span>);\n<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">typeof</span> z);  <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; number</span>\n<span class=\"hljs-built_in\">console</span>.log(z);         <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 22</span></pre>\n<h2 id=\"mcetoc_1gn00tl6e8i\">Block Scope</h2>\n<ul>\n<li>Variables declared with let and const are block-scoped</li>\n<li>Before ES6, JavaScript had no block scope and hence variables declared with var are not block-scoped</li>\n</ul>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\">{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">let</span> x = <span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> y = <span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>;\n}\n<span class=\"hljs-comment\" style=\"color: grey;\">// x and y cannot be used here</span>\n\n{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">var</span> z = <span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>;\n}\n<span class=\"hljs-built_in\">console</span>.log(z);  <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; 14</span>\n</pre>\n<h2 id=\"mcetoc_1gn00tl6e8j\">Equality and Identicalness</h2>\n<ul>\n<li>== and != compare only values (equality)</li>\n<li>=== and !== compare values and types (identicalness)</li>\n</ul>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> a = <span class=\"hljs-number\" style=\"color: #6897bb;\">7</span>;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> b = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"7\"</span>;\n<span class=\"hljs-comment\" style=\"color: grey;\">// a and b are equivalent...</span>\n<span class=\"hljs-built_in\">console</span>.log(a == b);                          <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; true</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">// ... but not identical (number vs. string)</span>\n<span class=\"hljs-built_in\">console</span>.log(a === b);                         <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; false</span>\n<span class=\"hljs-built_in\">console</span>.log(a === <span class=\"hljs-built_in\">parseInt</span>(b));               <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; true</span>\n\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> x = <span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">const</span> y = <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>;\n<span class=\"hljs-comment\" style=\"color: grey;\">// x and y are equivalent...</span>\n<span class=\"hljs-built_in\">console</span>.log(x == y);                          <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; true</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">// ...but not identical (number vs. boolean)</span>\n<span class=\"hljs-built_in\">console</span>.log(x === y);                         <span class=\"hljs-comment\" style=\"color: grey;\">// &gt;&gt; false</span>\n</pre>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "software development",
                   "javascript",
                   "dev"
            ],
            "date_published": "2023-01-17T14:53:42+01:00",
            "date_modified": "2023-01-17T19:41:50+01:00"
        },
        {
            "id": "https://www.finecloud.ch/deploy-your-java-web-app-to-heroku.html",
            "url": "https://www.finecloud.ch/deploy-your-java-web-app-to-heroku.html",
            "title": "Deploy your Java Web App to Heroku",
            "summary": "Requirements and Preparation Unfortunately Heroku currently only Supports Tomcat version 9.x. As a consequence you're not able to use the Java Jakarta Servlets, since they are only supported with Tomcat version 10.x. As a consequence you need to replace all your Jakarta Servlet imports with&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gkum5rlmdf\">Requirements and Preparation</a>\n<ul>\n<li><a href=\"#mcetoc_1gkum5rlmdg\">Build the App</a></li>\n<li><a href=\"#mcetoc_1gkum5rlmdh\">Deploy to Heroku</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gkum5rlmdf\">Requirements and Preparation</h2>\n<p>Unfortunately Heroku currently only Supports Tomcat version 9.x. As a consequence you're not able to use the Java Jakarta Servlets, since they are only supported with Tomcat version 10.x.<br><br>As a consequence you need to replace all your Jakarta Servlet imports with the \"old-school\" Javax Serverlets:</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\">find . -type f -name <span class=\"hljs-string\" style=\"color: #880000;\">\"*.java\"</span> -print0 | xargs -0 sed -i <span class=\"hljs-string\" style=\"color: #880000;\">''</span> <span class=\"hljs-_\">-e</span> <span class=\"hljs-string\" style=\"color: #880000;\">'s/import jakarta/import javax/g'</span></pre>\n<p><br>Delete those dependencies from your pom.xml:</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>jakarta.servlet<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>jakarta.servlet-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>${servlet.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">scope</span>&gt;</span>provided<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">scope</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>org.glassfish.web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>jakarta.servlet.jsp.jstl<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>${jstl.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span></pre>\n<p><br>Add those dependencies to your pom.xml:</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>javax.servlet<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>4.0.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>jstl<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>jstl<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>1.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">dependency</span>&gt;</span></pre>\n<p><br>we also need the Heroku web-runner packet in the pom.xml:</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">plugin</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>maven-dependency-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>3.3.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">executions</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">execution</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">phase</span>&gt;</span>package<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">phase</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">goals</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">goal</span>&gt;</span>copy<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">goal</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">goals</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">configuration</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactItems</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactItem</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>com.heroku<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>webapp-runner<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>9.0.69.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">destFileName</span>&gt;</span>webapp-runner.jar<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">destFileName</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactItem</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">artifactItems</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">configuration</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">execution</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">executions</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"font-weight: bold;\">plugin</span>&gt;</span></pre>\n<p><br>let's also change the Jakarta xml header on the web.xml file from:</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">web-app</span> <span class=\"hljs-attr\">version</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"5.0\"</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"https://jakarta.ee/xml/ns/jakartaee\"</span>\n<span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n<span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd\"</span>&gt;</span>\n</pre>\n<p>to:</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"font-weight: bold;\">web-app</span> <span class=\"hljs-attr\">version</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"4.0\"</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"http://xmlns.jcp.org/xml/ns/javaee\"</span>\n<span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\" style=\"color: #880000;\">\"http://xmlns.jcp.org/xml/ns/javaee\nhttp://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"</span>&gt;</span></pre>\n<h3 id=\"mcetoc_1gkum5rlmdg\"><br>Build the App</h3>\n<p>Browse to the root folder of your Java Application:<br><code>mvn clean package</code><br><br>next run:<br><code>java -jar target/dependency/webapp-runner.jar target/*.war</code><br><br>That’s it. Your application should start up on port 8080. If this works as expected, your ready to deploy your App to Heroku.</p>\n<h3 id=\"mcetoc_1gkum5rlmdh\">Deploy to Heroku</h3>\n<p>Create a Procfile in the root folder of your Application:<br><code>echo 'web: java $JAVA_OPTS -jar target/dependency/webapp-runner.jar --port $PORT target/*.war' &gt; Procfile</code></p>\n<p>We also need to declare the Java version to Heroku:<br><code>echo 'java.runtime.version=17' &gt; system.properties</code><br><br></p>\n<p>Commit your changes to Git:<br><br><code>git init</code><br><code>git add .</code><br><code>git commit -m \"Ready to deploy\"</code><br><br><br>Create the app and deploy your code:<br><br><code>heroku create</code><code>--region eu</code><code></code><br><code>git push heroku main</code><br><br><br>Your web app should now be up and running on Heroku. Open it in your browser with:<br><br><code>heroku open</code><br><br></p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tools",
                   "tomcat",
                   "software development",
                   "shell",
                   "servlet",
                   "linux",
                   "java",
                   "heroku",
                   "git",
                   "dev"
            ],
            "date_published": "2022-12-23T05:40:48+01:00",
            "date_modified": "2022-12-23T06:30:35+01:00"
        },
        {
            "id": "https://www.finecloud.ch/take-care-of-your-ssh-keys.html",
            "url": "https://www.finecloud.ch/take-care-of-your-ssh-keys.html",
            "title": "Take care of your SSH identities",
            "summary": "Did you know that your ssh Client sends the server all your public keys, one by one, until the server accepts one, when you try to authenticate via public key? Don't believe me? Try it out yourself: ssh whoami.filippo.io Someone could use this to find&hellip;",
            "content_html": "<p>Did you know that your ssh Client sends the server all your public keys, one by one, until the server accepts one, when you try to authenticate via public key?</p>\n<p>Don't believe me? Try it out yourself: </p>\n<pre><code>ssh whoami.filippo.io</code></pre>\n<p>Someone could use this to find out which public keys you have installed on your Client. You don't what this, don't you? So how can we avoid the leak of our Clients Public Keys? There is an easy fix, just add this at the end of your <code>~/.ssh/config</code> file:</p>\n<pre><code>Host *</code><br><code>    PubkeyAuthentication no</code><br><code>    IdentitiesOnly yes</code></pre>\n<p>Also make sure you don't use just one key for all connections. I hope don't use one password for all your logins - so why should you use one key for all your logins?</p>\n<p>It is recommended to use one specific key for each host:</p>\n<pre><code>Host github.com</code><br><code>    PubkeyAuthentication yes</code><br><code>    IdentityFile ~/.ssh/github_id_ed25519</code></pre>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tools",
                   "ssh",
                   "shell",
                   "security",
                   "network",
                   "linux",
                   "bash"
            ],
            "date_published": "2022-11-22T13:59:20+01:00",
            "date_modified": "2022-11-22T15:37:51+01:00"
        },
        {
            "id": "https://www.finecloud.ch/opnsense-backup-to-nextcloud.html",
            "url": "https://www.finecloud.ch/opnsense-backup-to-nextcloud.html",
            "title": "Backup OPNsense to Nextcloud",
            "summary": "What is OPNsense? OPNsense® is an open source, easy-to-use and easy-to-build FreeBSD based firewall and routing platform. OPNsense includes most of the features available in expensive commercial firewalls, and more in many cases. It brings the rich feature set of commercial offerings with the benefits&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1ggu9idgo5i\">What is OPNsense?</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5j\">Why OPNsense?</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5k\">Backup your OPNsense configuration to your Nextcloud</a>\n<ul>\n<li><a href=\"#mcetoc_1ggu9idgo5l\">1. Create a new user</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5m\">2. Create an Access Token</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5n\">3. Install Nextcloud Backup Plugin</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5o\">4. Connect OPNsense with Nextcloud</a></li>\n<li><a href=\"#mcetoc_1ggu9idgo5p\">5. Verify the Configuration Upload</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1ggu9idgo5i\">What is OPNsense?</h2>\n<p><a class=\"reference external\" href=\"https://opnsense.org\">OPNsense®</a> is an open source, easy-to-use and easy-to-build FreeBSD based firewall and routing platform.</p>\n<p>OPNsense includes most of the features available in expensive commercial firewalls, and more in many cases. It brings the rich feature set of commercial offerings with the benefits of open and verifiable sources.</p>\n<h2 id=\"mcetoc_1ggu9idgo5j\">Why OPNsense?</h2>\n<p>The feature set of OPNsense includes high-end features such as forward caching proxy, traffic shaping, intrusion detection and easy OpenVPN client setup. The latest release is based on a recent FreeBSD for long-term support and uses a newly developed MVC-framework based on Phalcon. OPNsense’s focus on security brings unique features such as the option to use LibreSSL instead of OpenSSL (selectable in the GUI).<br><br>The robust and reliable update mechanism gives OPNsense the ability to provide important security updates in a timely fashion.</p>\n<h2 id=\"mcetoc_1ggu9idgo5k\">Backup your OPNsense configuration to your Nextcloud</h2>\n<p>In OPNsense you can backup your configuration directly and automatically to Nextcloud, using the backup feature. Every backup will be encrypted with the same algorithm used in the manual backup so it’s quite easy to restore to a new installed machine.</p>\n<p>After set-up, the backup feature will run a first backup of the OPNsense configuration file. Then, if the configuration is subsequently changed, a new backup will be run. Only one backup is run per day after configuration changes.</p>\n<div id=\"step-create-a-new-user\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5l\">1. Create a new user<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-create-a-new-user\" title=\"Permalink to this headline\"></a></h3>\n<p>Click on the user icon top right and click “Users”. In the new page, enter an username and a password into the boxes and click create to create a new user.</p>\n</div>\n<div id=\"step-create-an-access-token\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5m\">2. Create an Access Token<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-create-an-access-token\" title=\"Permalink to this headline\"></a></h3>\n<figure class=\"post__image\">Close the modal dialog and remove the default files. Then open the Settings menu (also in the menu top right). Switch to security and generate a App password.\n<img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.19.23.png\" alt=\"\" width=\"931\" height=\"933\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.19.23-2xl.png 1600w\"></figure><br>\n<p>Copy and store the generated password.</p>\n</div>\n<div id=\"step-connect-opnsense-with-nextcloud\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5n\">3. Install Nextcloud Backup Plugin</h3>\n<p>Go to <em><span class=\"menuselection\">System ‣ Firmware ‣ Plugins</span></em> and install the <em>os-nextcloud-backup</em> plugin</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.24.39.png\" alt=\"\" width=\"1915\" height=\"537\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.24.39-2xl.png 1600w\"></figure>\n<h3 id=\"mcetoc_1ggu9idgo5o\">4. Connect OPNsense with Nextcloud<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-connect-opnsense-with-nextcloud\" title=\"Permalink to this headline\"></a></h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.32.01.png\" alt=\"\" width=\"727\" height=\"432\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.32.01-2xl.png 1600w\"></figure><br>\n<p>Scroll to the Nextcloud Section in <em><span class=\"menuselection\">System ‣ Configuration ‣ Backups</span></em> and enter the following values:</p>\n<div class=\"wy-table-responsive\">\n<table class=\"docutils align-default\"><colgroup><col><col></colgroup>\n<tbody>\n<tr class=\"row-odd\">\n<td>\n<p>Enable</p>\n</td>\n<td>\n<p>checked</p>\n</td>\n</tr>\n<tr class=\"row-even\">\n<td>\n<p>URL</p>\n</td>\n<td>\n<p>Base URL of your Nextcloud installation like <a class=\"reference external\" href=\"https://cloud.example.com\">https://cloud.example.com</a></p>\n</td>\n</tr>\n<tr class=\"row-odd\">\n<td>\n<p>User</p>\n</td>\n<td>\n<p>your choosen username</p>\n</td>\n</tr>\n<tr class=\"row-even\">\n<td>\n<p>Password</p>\n</td>\n<td>\n<p>paste your app password from step 2</p>\n</td>\n</tr>\n<tr>\n<td>\n<p>Encryption Passowrd</p>\n</td>\n<td>\n<p>define a Password to encrypt the config file</p>\n</td>\n</tr>\n<tr class=\"row-odd\">\n<td>\n<p>Backup Directory</p>\n</td>\n<td>\n<p>a name consisting of alphanumeric characters (keep default)</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"step-verify-the-configuration-upload\" class=\"section\">\n<h3 id=\"mcetoc_1ggu9idgo5p\">5. Verify the Configuration Upload<a class=\"headerlink\" href=\"https://docs.opnsense.org/manual/how-tos/cloud_backup.html#step-verify-the-configuration-upload\" title=\"Permalink to this headline\"></a></h3>\n<p>When everything worked, you will see the newly created directory after saving the settings:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.38.41.png\" alt=\"\" width=\"292\" height=\"114\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.38.41-2xl.png 1600w\"></figure>\n<figure class=\"post__image\">If you open it, you will see at lease a single backed up configuration file:\n<img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/69/Screenshot-2022-11-03-at-09.39.22.png\" alt=\"\" width=\"819\" height=\"351\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-xs.png 300w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-sm.png 480w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-md.png 768w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-lg.png 1024w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-xl.png 1360w ,https://www.finecloud.ch/media/posts/69/responsive/Screenshot-2022-11-03-at-09.39.22-2xl.png 1600w\"></figure><br>\n<p id=\"references\" class=\"rubric\"></p>\n</div>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tools",
                   "opnsense",
                   "nextcloud",
                   "network",
                   "linux",
                   "firewall",
                   "backup"
            ],
            "date_published": "2022-11-02T19:12:00+01:00",
            "date_modified": "2022-11-03T09:49:00+01:00"
        },
        {
            "id": "https://www.finecloud.ch/maven-getting-started.html",
            "url": "https://www.finecloud.ch/maven-getting-started.html",
            "title": "Maven getting started",
            "summary": "What is Maven? Declarative build management tool for automated builds Standardized directory structure Declarative dependency management Works with an XML control file (POM - Project Object Model) Open source, written in Java, for Java projects Pure command line tool IDEs offer integration Why Maven? Uniform&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1ggd2611qj0\">What is Maven?</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj1\">Why Maven?</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj2\">Components</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj3\">Build lifecycle</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj4\">POM (Project Object Model) file</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj5\">Project coordinates</a></li>\n<li><a href=\"#mcetoc_1ggd443kjlt\">Packaging</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj6\">Naming conventions</a>\n<ul>\n<li><a href=\"#mcetoc_1ggd2611qj7\">groupId</a></li>\n<li><a href=\"#mcetoc_1ggd2611qj8\">artifactId</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1ggd443kjlu\">Standard directory layout</a></li>\n<li><a href=\"#mcetoc_1ggd8kpb6ob\">Dependencies</a>\n<ul>\n<li><a href=\"#mcetoc_1ggd8kpb6oc\">Scope</a></li>\n<li><a href=\"#mcetoc_1ggd9jq2mqi\">Transitive dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1ggd9jq2mqj\">Project inheritance</a></li>\n<li><a href=\"#mcetoc_1ggd9jq2mqk\">Project aggregation (Multi Module)</a></li>\n<li><a href=\"#mcetoc_1ggd9tb9jr2\">Properties</a></li>\n<li><a href=\"#mcetoc_1ggv3g3smf5\">Version structure</a>\n<ul>\n<li><a href=\"#mcetoc_1ggv3g3smf6\">SNAPSHOT Version</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1ggv3g3smf7\">Version resolution transitive dependencies</a></li>\n<li><a href=\"#mcetoc_1ggv3g3smf8\">Keeping POM clean</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1ggd2611qj0\">What is Maven?</h2>\n<ul>\n<li>Declarative build management tool for automated builds</li>\n<li>Standardized directory structure</li>\n<li>Declarative dependency management</li>\n<li>Works with an XML control file (POM - Project Object Model)</li>\n<li>Open source, written in Java, for Java projects</li>\n<li>Pure command line tool</li>\n<li>IDEs offer integration</li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj1\">Why Maven?</h2>\n<ul>\n<li>Uniform build in the project, but also across multiple projects.</li>\n<li>Dependency management</li>\n<li>Independent of an IDE</li>\n<li>Basis for rapid familiarization of new developers</li>\n<li>Basis for Continuous Integration/Continuous Deployment (DevOps)</li>\n<li>Industry standard for Java applications</li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj2\">Components</h2>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/Screenshot-2022-10-27-at-17.17.05.png\" alt=\"\" width=\"851\" height=\"555\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-17.17.05-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1ggd2611qj3\">Build lifecycle</h2>\n<ul>\n<li>Each Build Phase has its own Plugin. M<span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">aven delegates the work of each build phase to plugins.</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Plugins provide Goals, which do the actual work</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Goals can be assigned to one or more build phases</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Certain plugins/goals are assigned by Maven by default</span></li>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">You can assign plugins/goals to specific build phases in the project object model itself</span></li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj4\">POM (Project Object Model) file</h2>\n<ul>\n<li>The POM declaratively describes the build including all dependencies.</li>\n<li>POM is an XML file that describes the Maven project.</li>\n<li>Maven project usually creates an artifact (jar, war, ear, ...)</li>\n</ul>\n<p>Minimal POM example file:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"php\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;?</span>xml version=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"1.0\"</span> encoding=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span><span class=\"hljs-meta\" style=\"color: #bbb529;\">?&gt;</span></span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">project</span> <span class=\"hljs-attr\">xmlns</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://maven.apache.org/POM/4.0.0\"</span>\n         <span class=\"hljs-attr\">xmlns:xsi</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>\n         <span class=\"hljs-attr\">xsi:schemaLocation</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modelVersion</span>&gt;</span>4.0.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modelVersion</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>com.test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">project</span>&gt;</span></pre>\n<h2 id=\"mcetoc_1ggd2611qj5\">Project coordinates</h2>\n<p>The project coordinates consists of groupId, artifactId and the version</p>\n<ul>\n<li>Maven project coordinates form a kind of address for a Maven artifact</li>\n<li>They consist of:<br><code>&lt;groupId&gt;com.test&lt;/groupId&gt;</code><br><code>&lt;artifactId&gt;my-app&lt;/artifactId&gt;</code><br><code>&lt;version&gt;1.0.0&lt;/version&gt;</code></li>\n<li>The combination of the three parts shall be globally unique!</li>\n<li>Using the project coordinates, the dependencies are fetched from the repository fetched</li>\n<li>All three parts are mandatory</li>\n</ul>\n<h2 id=\"mcetoc_1ggd443kjlt\">Packaging</h2>\n<ul>\n<li>Packaging defines the shape of the generated artifact</li>\n<li>Packaging:<br><code>&lt;packaging&gt;jar&lt;/packaging&gt;</code></li>\n<li>Not specified: default is jar.</li>\n<li>Other possible values: pom, maven-plugin, ejb, war, ear, rar</li>\n</ul>\n<h2 id=\"mcetoc_1ggd2611qj6\">Naming conventions</h2>\n<h3 id=\"mcetoc_1ggd2611qj7\">groupId</h3>\n<ul>\n<li>Identifies the project globally → unique namespace required.</li>\n<li>The Java package naming conventions are used.</li>\n<li>Reverse Internet domain name, which one has under one's own control<br>has, e.g. com.example</li>\n<li>After that, freely selectable, uniquely within domain, e.g. com.example.dev</li>\n</ul>\n<h3 id=\"mcetoc_1ggd2611qj8\">artifactId</h3>\n<ul>\n<li>Identifies the concrete build artifact (jar, war, ear, ...).</li>\n<li>E.g. todoapp</li>\n</ul>\n<h2 id=\"mcetoc_1ggd443kjlu\">Standard directory layout</h2>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/Screenshot-2022-10-27-at-18.09.08.png\" alt=\"\" width=\"283\" height=\"430\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-18.09.08-2xl.png 1600w\"></figure>\n<p>Legend to the layout:</p>\n<table class=\"table table-striped\" border=\"1\">\n<tbody>\n<tr class=\"a\">\n<td align=\"left\"><code>src/main/java</code></td>\n<td align=\"left\">Application/Library sources</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/main/resources</code></td>\n<td align=\"left\">Application/Library resources</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/main/filters</code></td>\n<td align=\"left\">Resource filter files</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/main/webapp</code></td>\n<td align=\"left\">Web application sources</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/test/java</code></td>\n<td align=\"left\">Test sources</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/test/resources</code></td>\n<td align=\"left\">Test resources</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/test/filters</code></td>\n<td align=\"left\">Test resource filter files</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/it</code></td>\n<td align=\"left\">Integration Tests (primarily for plugins)</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>src/assembly</code></td>\n<td align=\"left\">Assembly descriptors</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>src/site</code></td>\n<td align=\"left\">Site</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>LICENSE.txt</code></td>\n<td align=\"left\">Project's license</td>\n</tr>\n<tr class=\"b\">\n<td align=\"left\"><code>NOTICE.txt</code></td>\n<td align=\"left\">Notices and attributions required by libraries that the project depends on</td>\n</tr>\n<tr class=\"a\">\n<td align=\"left\"><code>README.txt</code></td>\n<td align=\"left\">Project's readme</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mcetoc_1ggd8kpb6ob\">Dependencies</h2>\n<ul>\n<li>Dependency management is the central function of Maven</li>\n<li>Management of the required libraries</li>\n<li>Dependencies required by libraries themselves are added automatically (without specifying them) → transitive dependencies.</li>\n<li>Maven automatically downloads dependencies and transitive dependencies.</li>\n<li>The downloaded dependencies are available for compilation.<br>available</li>\n<li>The downloaded dependencies are packed into the artifacts</li>\n</ul>\n<p>example of a dependency declaration in a POM file:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependencies</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">scope</span>&gt;</span>test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">scope</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependencies</span>&gt;</span></pre>\n<p>You can also list all dependencies with this command: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\"># mvn dependency:tree                                                                                                          </span>\n[INFO] Scanning <span class=\"hljs-keyword\" style=\"color: #cc7832;\">for</span> projects...\n[INFO] \n[INFO] --------------------------&lt; com.example:demo &gt;--------------------------\n[INFO] Building demo 0.0.1-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-dependency-plugin:3.3.0:tree (default-cli) @ demo ---\n[INFO] com.example:demo:jar:0.0.1-SNAPSHOT\n[INFO] +- org.springframework.boot:spring-boot-starter-web:jar:2.7.5:compile\n[INFO] |  +- org.springframework.boot:spring-boot-starter:jar:2.7.5:compile\n[INFO] |  |  +- org.springframework.boot:spring-boot-starter-logging:jar:2.7.5:compile\n[INFO] |  |  |  +- ch.qos.logback:logback-classic:jar:1.2.11:compile\n[INFO] |  |  |  |  \\- ch.qos.logback:logback-core:jar:1.2.11:compile\n[INFO] |  |  |  +- org.apache.logging.log4j:<span class=\"hljs-built_in\">log</span>4j-to-slf4j:jar:2.17.2:compile\n[INFO] |  |  |  |  \\- org.apache.logging.log4j:<span class=\"hljs-built_in\">log</span>4j-api:jar:2.17.2:compile\n[INFO] |  |  |  \\- org.slf4j:jul-to-slf4j:jar:1.7.36:compile\n[INFO] |  |  +- jakarta.annotation:jakarta.annotation-api:jar:1.3.5:compile\n[INFO] |  |  \\- org.yaml:snakeyaml:jar:1.30:compile\n[INFO] |  +- org.springframework.boot:spring-boot-starter-json:jar:2.7.5:compile\n[INFO] |  |  +- com.fasterxml.jackson.core:jackson-databind:jar:2.13.4.2:compile\n[INFO] |  |  |  +- com.fasterxml.jackson.core:jackson-annotations:jar:2.13.4:compile\n[INFO] |  |  |  \\- com.fasterxml.jackson.core:jackson-core:jar:2.13.4:compile\n[INFO] |  |  +- com.fasterxml.jackson.datatype:jackson-datatype-jdk8:jar:2.13.4:compile\n[INFO] |  |  +- com.fasterxml.jackson.datatype:jackson-datatype-jsr310:jar:2.13.4:compile\n[INFO] |  |  \\- com.fasterxml.jackson.module:jackson-module-parameter-names:jar:2.13.4:compile\n[INFO] |  +- org.springframework.boot:spring-boot-starter-tomcat:jar:2.7.5:compile\n[INFO] |  |  +- org.apache.tomcat.embed:tomcat-embed-core:jar:9.0.68:compile\n[INFO] |  |  +- org.apache.tomcat.embed:tomcat-embed-el:jar:9.0.68:compile\n[INFO] |  |  \\- org.apache.tomcat.embed:tomcat-embed-websocket:jar:9.0.68:compile\n[INFO] |  +- org.springframework:spring-web:jar:5.3.23:compile\n[INFO] |  |  \\- org.springframework:spring-beans:jar:5.3.23:compile\n[INFO] |  \\- org.springframework:spring-webmvc:jar:5.3.23:compile\n[INFO] |     +- org.springframework:spring-aop:jar:5.3.23:compile\n[INFO] |     +- org.springframework:spring-context:jar:5.3.23:compile\n[INFO] |     \\- org.springframework:spring-expression:jar:5.3.23:compile\n[INFO] +- org.springframework.boot:spring-boot-devtools:jar:2.7.5:runtime\n[INFO] |  +- org.springframework.boot:spring-boot:jar:2.7.5:compile\n[INFO] |  \\- org.springframework.boot:spring-boot-autoconfigure:jar:2.7.5:compile\n[INFO] \\- org.springframework.boot:spring-boot-starter-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.springframework.boot:spring-boot-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.springframework.boot:spring-boot-test-autoconfigure:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- com.jayway.jsonpath:json-path:jar:2.7.0:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- net.minidev:json-smart:jar:2.4.8:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  \\- net.minidev:accessors-smart:jar:2.4.8:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |     \\- org.ow2.asm:asm:jar:9.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- org.slf4j:slf4j-api:jar:1.7.36:compile\n[INFO]    +- jakarta.xml.bind:jakarta.xml.bind-api:jar:2.3.3:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- jakarta.activation:jakarta.activation-api:jar:1.2.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.assertj:assertj-core:jar:3.22.0:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.hamcrest:hamcrest:jar:2.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.junit.jupiter:junit-jupiter:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- org.junit.jupiter:junit-jupiter-api:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  +- org.opentest4j:opentest4j:jar:1.2.0:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  +- org.junit.platform:junit-platform-commons:jar:1.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  |  \\- org.apiguardian:apiguardian-api:jar:1.1.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- org.junit.jupiter:junit-jupiter-params:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- org.junit.jupiter:junit-jupiter-engine:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    |     \\- org.junit.platform:junit-platform-engine:jar:1.8.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.mockito:mockito-core:jar:4.5.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- net.bytebuddy:byte-buddy:jar:1.12.18:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  +- net.bytebuddy:byte-buddy-agent:jar:1.12.18:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- org.objenesis:objenesis:jar:3.2:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.mockito:mockito-junit-jupiter:jar:4.5.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.skyscreamer:jsonassert:jar:1.5.1:<span class=\"hljs-built_in\">test</span>\n[INFO]    |  \\- com.vaadin.external.google:android-json:jar:0.0.20131108.vaadin1:<span class=\"hljs-built_in\">test</span>\n[INFO]    +- org.springframework:spring-core:jar:5.3.23:compile\n[INFO]    |  \\- org.springframework:spring-jcl:jar:5.3.23:compile\n[INFO]    +- org.springframework:spring-test:jar:5.3.23:<span class=\"hljs-built_in\">test</span>\n[INFO]    \\- org.xmlunit:xmlunit-core:jar:2.9.0:<span class=\"hljs-built_in\">test</span>\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.256 s\n[INFO] Finished at: 2022-10-27T19:47:12+02:00\n[INFO] ------------------------------------------------------------------------\n</pre>\n<h3 id=\"mcetoc_1ggd8kpb6oc\">Scope</h3>\n<p>The scope of a dependency specifies in which classpaths it is provided by Maven.<br>(classpaths change depending on the build phase):</p>\n<ul>\n<li><strong>compile</strong>: Default Scope, Dependencies are available in all classpaths</li>\n<li><strong>test</strong>: Only during test</li>\n<li><strong>provided</strong>: Only available in compile and test classpaths, dependency must be provided at runtime (e.g., by the servlet container)</li>\n<li><strong>runtime</strong>: Only during runtime and test, but not for compile</li>\n<li><strong>other</strong> (not so important)</li>\n</ul>\n<h3 id=\"mcetoc_1ggd9jq2mqi\">Transitive dependencies</h3>\n<ul>\n<li>Dependencies required by the dependencies we declare.</li>\n<li>Are automatically downloaded by Maven and added to the classpath</li>\n<li>Attention: You can also use these transitive dependencies directly in the code.<br>→ please do not do this!</li>\n<li>Explicitly enter each dependency that you use yourself in the code as a dependency in the POM</li>\n</ul>\n<p>Finding out if you are using a transitive dependency in your code:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\"># mvn dependency:analyze                                                                                                             </span>\n[INFO] Scanning <span class=\"hljs-keyword\" style=\"color: #cc7832;\">for</span> projects...\n[INFO] \n[INFO] --------------------------&lt; com.example:demo &gt;--------------------------\n[INFO] Building demo 0.0.1-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] &gt;&gt;&gt; maven-dependency-plugin:3.3.0:analyze (default-cli) &gt; <span class=\"hljs-built_in\">test</span>-compile @ demo &gt;&gt;&gt;\n[INFO] \n[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ demo ---\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered resources.\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered properties files.\n[INFO] Copying 1 resource\n[INFO] Copying 0 resource\n[INFO] \n[INFO] --- maven-compiler-plugin:3.10.1:compile (default-compile) @ demo ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 1 <span class=\"hljs-built_in\">source</span> file to /Users/Dave/Downloads/demo/target/classes\n[INFO] \n[INFO] --- maven-resources-plugin:3.2.0:<span class=\"hljs-built_in\">test</span>Resources (default-testResources) @ demo ---\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered resources.\n[INFO] Using <span class=\"hljs-string\" style=\"color: #6a8759;\">'UTF-8'</span> encoding to copy filtered properties files.\n[INFO] skip non existing resourceDirectory /Users/Dave/Downloads/demo/src/<span class=\"hljs-built_in\">test</span>/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.10.1:<span class=\"hljs-built_in\">test</span>Compile (default-testCompile) @ demo ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 1 <span class=\"hljs-built_in\">source</span> file to /Users/Dave/Downloads/demo/target/<span class=\"hljs-built_in\">test</span>-classes\n[INFO] \n[INFO] &lt;&lt;&lt; maven-dependency-plugin:3.3.0:analyze (default-cli) &lt; <span class=\"hljs-built_in\">test</span>-compile @ demo &lt;&lt;&lt;\n[INFO] \n[INFO] \n[INFO] --- maven-dependency-plugin:3.3.0:analyze (default-cli) @ demo ---\n[WARNING] Used undeclared dependencies found:\n[WARNING]    org.springframework.boot:spring-boot:jar:2.7.5:compile\n[WARNING]    org.junit.jupiter:junit-jupiter-api:jar:5.8.2:<span class=\"hljs-built_in\">test</span>\n[WARNING]    org.springframework.boot:spring-boot-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[WARNING]    org.springframework.boot:spring-boot-autoconfigure:jar:2.7.5:compile\n[WARNING] Unused declared dependencies found:\n[WARNING]    org.springframework.boot:spring-boot-starter-web:jar:2.7.5:compile\n[WARNING]    org.springframework.boot:spring-boot-devtools:jar:2.7.5:runtime\n[WARNING]    org.springframework.boot:spring-boot-starter-test:jar:2.7.5:<span class=\"hljs-built_in\">test</span>\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.113 s\n[INFO] Finished at: 2022-10-27T19:50:29+02:00\n[INFO] ------------------------------------------------------------------------\n</pre>\n<h2 id=\"mcetoc_1ggd9jq2mqj\">Project inheritance</h2>\n<p>POMs an also inherit, this is for example needed for a Spring Boot-Application. This allows you for example, to standardize the libraries used and their versions across multiple projects or Maven modules.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/inheritance.png\" alt=\"\" width=\"1024\" height=\"754\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/inheritance-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/inheritance-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1ggd9jq2mqk\">Project aggregation (Multi Module)</h2>\n<p>Also a POM can aggregate multiple POMs as Modules</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/68/Screenshot-2022-10-27-at-20.01.00.png\" alt=\"\" width=\"275\" height=\"400\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-xs.png 300w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-sm.png 480w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-md.png 768w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-lg.png 1024w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-xl.png 1360w ,https://www.finecloud.ch/media/posts/68/responsive/Screenshot-2022-10-27-at-20.01.00-2xl.png 1600w\"></figure>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>com.test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>example-maven-multimodule<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">packaging</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">packaging</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modules</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>module1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>module2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>module3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">module</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">modules</span>&gt;</span></pre>\n<h2 id=\"mcetoc_1ggd9tb9jr2\">Properties</h2>\n<p>Properties are placeholders and can be addressed via ${&lt;propertyname&gt;}.</p>\n<p>Example:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">properties</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">java.version</span>&gt;</span>1.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">java.version</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">commons-pool2.version</span>&gt;</span>2.6.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">commons-pool2.version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">properties</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>org.apache.commons<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">groupId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>commons-pool2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">artifactId</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>${commons-pool2.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">dependency</span>&gt;</span></pre>\n<h2 id=\"mcetoc_1ggv3g3smf5\">Version structure</h2>\n<ul>\n<li>A version must always be specified</li>\n<li>Maven basically leaves the structure of a version free</li>\n<li>Recommended approach: semantic versioning (<a href=\"https://semver.org/\">https://semver.org/</a>)\n<ul>\n<li><code>&lt;Major&gt;.&lt;Minor&gt;.&lt;Bugfix&gt;-&lt;Qualifier&gt;-&lt;Buildnumber&gt;</code></li>\n<li>Major: increment when API changes.</li>\n<li>Minor: increment if new features are included, but same API.</li>\n<li>Bugfix: increment, if only something was fixed</li>\n<li>Qualifier: Optional.</li>\n<li>Build number: Optional.</li>\n<li>Example: &lt;version&gt;2.4.18&lt;/version&gt;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mcetoc_1ggv3g3smf6\">SNAPSHOT Version</h3>\n<ul>\n<li>The qualifier SNAPSHOT is used during the development of a version<br>is used</li>\n<li>Example: 1.0-SNAPSHOT → means that the 1.0 version of the software is being<br>is being developed</li>\n<li>A version with SNAPSHOT qualifier is always considered to be older than<br>the same one without the qualifier</li>\n<li>Special rules apply for version resolution, Maven usually fetches a snapshot version once per day from the repository, unless you specify \"-U\".</li>\n<li>Example: <code>mvn -U clean install</code> also fetches the most recent snapshot<br>versions from the repository</li>\n</ul>\n<h2 id=\"mcetoc_1ggv3g3smf7\">Version resolution transitive dependencies</h2>\n<ul>\n<li>Multiple transitive dependencies can contain the same artifact in different<br>different versions, but can only have exactly one version of a transitive dependency in the classpath.</li>\n<li>Resolution is performed according to the \"nearest definition\" principle:\n<ul>\n<li>The version in the dependency tree that is closest to one's own project<br>Tree is taken</li>\n<li>If two versions are equally close, the one found first is taken</li>\n<li>Example: Dependency D appears twice in the dependency tree:\n<ul>\n<li>A → B → C → D (version 2.0)</li>\n<li>A → E → D (version 1.0)</li>\n<li>Version 1.0 of D is taken, since closer to own project (A).</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>One can explicitly specify a particular version of a transitive dependency<br>specify:\n<ul>\n<li>Include it explicitly as a dependency in your own POM.</li>\n<li>Via Dependency Management</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"mcetoc_1ggv3g3smf8\">Keeping POM clean</h2>\n<ul>\n<li>Find out unclean dependencies:\n<ul>\n<li><code>mvn dependency:analyze</code></li>\n<li>check out <a href=\"https://maven.apache.org/plugins/maven-dependency-plugin/analyze-mojo.html\">https://maven.apache.org/plugins/maven-dependency-plugin/analyze-mojo.html</a></li>\n</ul>\n</li>\n<li>Lists dependencies that:\n<ul>\n<li>Used and declared (--&gt; ok)</li>\n<li>Used but are not declared in their own pom (--&gt; nok)</li>\n<li>Are not used but are declared (--&gt; potentially remnant, clean up)</li>\n</ul>\n</li>\n</ul>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "software development",
                   "maven",
                   "java",
                   "dev"
            ],
            "date_published": "2022-10-27T17:01:47+02:00",
            "date_modified": "2022-11-03T16:59:36+01:00"
        },
        {
            "id": "https://www.finecloud.ch/threema-backup-to-nextcloud.html",
            "url": "https://www.finecloud.ch/threema-backup-to-nextcloud.html",
            "title": "Threema Safe backup to Nextcloud",
            "summary": "Did you know that Threema allows you, to backup your Threema app to a custom Threema Safe server? You can for example use your Nextcloud to keep your Threema backups safe. I recommend to create a new Nextcloud user account only for the purpose of&hellip;",
            "content_html": "<p>Did you know that Threema allows you, to backup your Threema app to a custom Threema Safe server? You can for example use your Nextcloud to keep your Threema backups safe.</p>\n<h2>Configure Nextcloud</h2>\n<p>I recommend to create a new Nextcloud user account only for the purpose of the Threema backup. If this account gets in wrong hands, all other Nextcloud files are still save. You can share your Threema backup folder with your regular Nextcloud user account if you want to have direct access to your Threema backups.</p>\n<ol>\n<li>Create a new Nextcloud user, e.g. threma-safe and generate a complex password with your favorite password tool.</li>\n<li>Sign in with the newly created Nextcloud user and delete the example files. Create a new folder \"threma-safe\" with a subfolder \"backups\".</li>\n<li>In the \"threma-safe\" folder create a config file (yes, no file-ending!) with the following content:\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e; display: block; overflow-x: auto; padding: 0.5em;\">   {\n   <span class=\"hljs-attr\">\"maxBackupBytes\"</span>: <span class=\"hljs-number\" style=\"color: #6897bb;\">52428800</span>,\n   <span class=\"hljs-attr\">\"retentionDays\"</span>: <span class=\"hljs-number\" style=\"color: #6897bb;\">180</span>\n    }</pre>\n</li>\n<li>If you have 2FA active (I hope you do so) you need to generate a new app password. Go to <em>Settings -&gt; Security -&gt; Devices &amp; sessions</em> and enter a app name like \"threema-safe\" and click \"Create new app password\", save the generated password in your password tool.</li>\n</ol>\n<h2>Configure Threema app</h2>\n<ol>\n<li>Open your app, on the menu select \"Backups\"</li>\n<li>Enable Threema Safe</li>\n<li>Choose expert settings, uncheck \"use default server\"</li>\n<li>provide your Nextcloud WebDAV URL: <a href=\"https://yourserver.domain.com/remote.php/dav/files/threema-safe/threema-safe/\">https://yourserver.domain.com/remote.php/dav/files/threema-safe/threema-safe/</a></li>\n<li>Press \"ok\"</li>\n<li>Generate and enter a strong password to protect your Threema Safe backup and click \"Next\". Your first backup should now be generated.</li>\n</ol>\n<h2>Verify</h2>\n<p>You show now see a newly generated backup in your threema-safe folder. To share your backups with your personal Nextcloud user, you can now select the threema-safe folder in Nextcloud and press the \"share\" icon, add your username and you're done. Happy backing!<br><br></p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tools",
                   "threema-safe",
                   "threema",
                   "nextcloud",
                   "backup",
                   "android"
            ],
            "date_published": "2022-10-13T07:42:30+02:00",
            "date_modified": "2022-10-13T07:53:01+02:00"
        },
        {
            "id": "https://www.finecloud.ch/handling-exceptions-in-webui.html",
            "url": "https://www.finecloud.ch/handling-exceptions-in-webui.html",
            "title": "Handling Exceptions in Web UI",
            "summary": "The Issue There is nothing worse than presenting a Java Stacktrace in a WebUI, full of technical Details about your Server environment of the Web App itself: So how can we avoid this? You don't want to share this informations with the users, it would&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gdv9jdoksv\">The Issue</a></li>\n<li><a href=\"#mcetoc_1gdv9jdokt0\">Custom Error Page</a></li>\n<li><a href=\"#mcetoc_1gdv9jdokt1\">Error Controller</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gdv9jdoksv\">The Issue</h2>\n<p>There is nothing worse than presenting a Java Stacktrace in a WebUI, full of technical Details about your Server environment of the Web App itself:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/66//Screenshot-2022-09-27-at-10.37.26.png\" alt=\"\" width=\"1077\" height=\"1032\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-xs.png 300w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-sm.png 480w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-md.png 768w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-lg.png 1024w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-xl.png 1360w ,https://www.finecloud.ch/media/posts/66//responsive/Screenshot-2022-09-27-at-10.37.26-2xl.png 1600w\"></figure>\n<p>So how can we avoid this? You don't want to share this informations with the users, it would scare them and they wouldn't understand it.</p>\n<p>What is happing here, is that the Page will try to redirect to the /error Page. This Page does not exist as real HTML Page. This is just a generated default page out of the box. This is generated in code. But we can create our own error page to avoid this.</p>\n<h2 id=\"mcetoc_1gdv9jdokt0\">Custom Error Page</h2>\n<p>Let's create a new HTML Page under <em>resources/templates/error.html</em>:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>Error Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nSomething went horribly, terribly wrong. Please try again.\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></pre>\n<p>To use this Page, because it's under the templates folder it needs a controller in order to work.</p>\n<h2 id=\"mcetoc_1gdv9jdokt1\">Error Controller</h2>\n<p>So we need to create an error Controller for this. Let's create a new Java Class called ErrorController.java with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.web.controller;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Controller;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.GetMapping;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.RequestMapping;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Controller</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@RequestMapping</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"error\"</span>)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">ErrorController</span> </span>{\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GetMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getErrorPage</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"error\"</span>;\n    }\n}\n</pre>\n<p>If a User now again hits an error, this will be shown:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/66/Screenshot-2022-09-27-at-13.08.06-2.png\" alt=\"\" width=\"413\" height=\"131\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-xs.png 300w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-sm.png 480w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-md.png 768w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-lg.png 1024w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-xl.png 1360w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.08.06-2-2xl.png 1600w\"></figure>\n<p>Much better, isn't it? But we can do even better. If we know what kind of error could be thrown, we can provide a more accurate error page. In our current case we need to add a specific try catch block in the save method, which can catch StorageExceptions:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@PostMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">savePerson</span><span class=\"hljs-params\">(Model model, @Valid Person person, Errors errors, @RequestParam(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"photoFilename\"</span>)</span> MultipartFile photoFile) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> IOException </span>{\n        log.info(person);\n        log.info(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Filename: \"</span> + photoFile.getOriginalFilename());\n        log.info(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"File size: \"</span> + photoFile.getSize());\n        log.info(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Errors: \"</span> + errors);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (!errors.hasErrors()) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">try</span> {\n                fileStorageRepository.save(photoFile.getOriginalFilename(), photoFile.getInputStream());\n                personRepository.save(person);\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"redirect:people\"</span>;\n            } <span class=\"hljs-keyword\" style=\"color: #cc7832;\">catch</span> (StorageException e) {\n                model.addAttribute(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"errorMsg\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"System is currently unable to accept photo files at this time.\"</span>);\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n            }\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n    }</pre>\n<p>Now let's add this custom error Message to the people.html page like so:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"alert alert-danger\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"alert\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${errorMsg}\"</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${errorMsg}\"</span>&gt;</span>\n    A simple danger alert-check it out!\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span></pre>\n<p>The final result looks like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/66/Screenshot-2022-09-27-at-13.35.45.png\" alt=\"\" width=\"2312\" height=\"1560\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-xs.png 300w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-sm.png 480w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-md.png 768w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-lg.png 1024w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-xl.png 1360w ,https://www.finecloud.ch/media/posts/66/responsive/Screenshot-2022-09-27-at-13.35.45-2xl.png 1600w\"></figure>\n<p>The User will be redirected back to the people page with the provided values. The Error Message will be displayed in the middle of the page.</p>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "whitelabel error page",
                   "try catch",
                   "tomcat",
                   "thymeleaf",
                   "spring-framework",
                   "spring",
                   "software development",
                   "java basics",
                   "java",
                   "http",
                   "gui",
                   "exceptions",
                   "exception",
                   "dev",
                   "database",
                   "api"
            ],
            "date_published": "2022-09-27T17:47:40+02:00",
            "date_modified": "2022-09-27T17:49:41+02:00"
        },
        {
            "id": "https://www.finecloud.ch/getting-stared-with-spring-framework.html",
            "url": "https://www.finecloud.ch/getting-stared-with-spring-framework.html",
            "title": "Getting stared with the Spring Framework",
            "summary": "What is the Spring Framework Spring is the world's most popular Java framework and makes programming Java quicker, easier, and safer for everybody. Spring’s focus on speed, simplicity, and productivity. You can select and generate your Spring Package online: https://start.spring.io/ Lets make a Gradle Project,&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gd9vb6re8m\">What is the Spring Framework</a></li>\n<li><a href=\"#mcetoc_1gd9vb6re8n\">What can Spring do</a></li>\n<li><a href=\"#mcetoc_1gd9vb6re8o\">Getting started</a></li>\n<li><a href=\"#mcetoc_1gd9vsqc28s\">Display dynamic content</a></li>\n<li><a href=\"#mcetoc_1gdfedk589b\">Add some Bootstrap</a></li>\n<li><a href=\"#mcetoc_1gdk6qb94kk\">Formatting Dates and Numbers</a></li>\n<li><a href=\"#mcetoc_1gdk6qb94kl\">Introducing Spring Data</a></li>\n<li><a href=\"#mcetoc_1gdkdrmqkla\">Saving a Person</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gd9vb6re8m\">What is the Spring Framework</h2>\n<p>Spring is the world's most popular Java framework and makes programming Java quicker, easier, and safer for everybody. Spring’s focus on speed, simplicity, and productivity.</p>\n<h2 id=\"mcetoc_1gd9vb6re8n\">What can Spring do</h2>\n<ul>\n<li><strong>Microservices</strong>: Quickly deliver production‑grade features with independently evolvable microservices.</li>\n<li><strong>Reactive</strong>: Spring's asynchronous, nonblocking architecture means you can get more from your computing resources.</li>\n<li><strong>Cloud</strong>: Your code, any cloud—we’ve got you covered. Connect and scale your services, whatever your platform.</li>\n<li><strong>Web apps</strong>: Frameworks for fast, secure, and responsive web applications connected to any data store.</li>\n<li><strong>Serverless</strong>: The ultimate flexibility. Scale up on demand and scale to zero when there’s no demand.</li>\n<li><strong>Event Driven</strong>: Integrate with your enterprise. React to business events. Act on your streaming data in realtime.</li>\n<li><strong>Batch</strong>: Automated tasks. Offline processing of data at a time to suit you.</li>\n</ul>\n<h2 id=\"mcetoc_1gd9vb6re8o\">Getting started</h2>\n<p>You can select and generate your Spring Package online: <a href=\"https://start.spring.io/\">https://start.spring.io/</a></p>\n<p>Lets make a Gradle Project, use Java v17 and add those dependencies:</p>\n<ul>\n<li>Spring Boot DevTools Developer Tools</li>\n<li>Lombok Developer Tools</li>\n<li>Spring Web Web</li>\n<li>Thymeleaf Template Engines</li>\n<li>Spring Data JPA SQL</li>\n<li>H2 Database SQL</li>\n<li>Validation I/O</li>\n</ul>\n<p>Click \"Generate\" and unzip the file to your IDE Projects and open it with your preferred IDE.</p>\n<p>In the IDE run the <code>PeopledbWebApplication.java</code> Class and open your browser, go to <a href=\"http://localhost:8080/\">http://localhost:8080/</a> you should get a page like this:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-19-at-06.18.30.png\" alt=\"\" width=\"1140\" height=\"354\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.18.30-2xl.png 1600w\"></figure>\n<p>Go back to your IDE and create a new index.html File in the Folder <em>/src/main/resources/static/index.html</em> with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>Hello<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nHello World\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>Rebuild your Project in the IDE and reopen your page on <a href=\"http://localhost:8080/\">http://localhost:8080/</a> and you should see this now:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-19-at-06.22.16.png\" alt=\"\" width=\"1140\" height=\"354\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-19-at-06.22.16-2xl.png 1600w\"></figure>\n<p>Congratulations you just generated your first Spring Web App.</p>\n<h2 id=\"mcetoc_1gd9vsqc28s\">Display dynamic content</h2>\n<p>Let's create a new package called web.controller and lets create a Java class called PeopleController with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.web.controller;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Controller;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.ui.Model;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.GetMapping;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.RequestMapping;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.List;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Controller</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@RequestMapping</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"/people\"</span>)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleController</span> </span>{\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GetMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">getPeople</span><span class=\"hljs-params\">(Model model)</span> </span>{\n        List&lt;Person&gt; people = List.of(\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">10l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jake\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Snake\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1950</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">8</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">50000</span>)),\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">20l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Sara\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1960</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">7</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">60000</span>)),\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">30l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Johnny\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1970</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-number\" style=\"color: #6897bb;\">40l</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Bonny\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Norris\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">80000</span>))\n        );\n        model.addAttribute(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>, people);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n    }\n}\n</pre>\n<p>We're going to create a new HTML file under the resources/templates folder. We call it people.html:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nhere are some people\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>If we not open our browser to <a href=\"http://localhost:8080/people\">http://localhost:8080/people</a> we will see that html file loaded. What is the difference between putting an HTML file under static versus under templates? The basic idea is: if you have HTML content that is dynamic and controlled from our Java code, then you need to put that HTML under templates. This will allow us to feed some dynamically generated content into this page and make a more interesting web page. Essentially, whereas static web pages we put under the static folder here are not capable of being fed data from our Java code directly.<br><br>Let's actually put sort of put a little bit of something dynamic in here. Let's make another package under the main  package, and call this one biz.model with a Java Class Person with the following content: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.biz.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.AllArgsConstructor;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.Data;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Data</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@AllArgsConstructor</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> LocalDate dob;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary;\n\n}\n</pre>\n<p>Normally we would create or generate getters and setters and all that good stuff in that Java Class. However, now that we're using the spring framework with spring boot and we got all this cool added functionality here, we can do something a little more interesting. We're going to use a special annotation from a library called Lombok, and the annotation we will use is called @Data. This annotation will will allow the Lombok Library to scan this class, find these fields and generate getters and setters and a constructor and an equals and a hash code and a two string method, all for us whenever we need it.</p>\n<p>Next we also need to change our people.html file like so:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\nhere are some people:\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ol</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"person: $</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{people}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>My Junk Person<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ol</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>If we now rebuild our Project and refresh our people page we receive this dynamic content:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-20-at-08.58.49.png\" alt=\"\" width=\"1304\" height=\"480\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-20-at-08.58.49-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1gdfedk589b\">Add some Bootstrap</h2>\n<p>Let's make the Table more beautiful by using the bootstrap css framework:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"width=device-width, initial-scale=1\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"stylesheet\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col-8 mx-auto\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"table\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>ID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>DOB<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Salary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"person : $</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{people}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"row\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.id}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.lastName}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>Mark<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.firstName}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>Otto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.dob}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"$</span></span></span><span class=\"hljs-template-variable\" style=\"color: #629755;\">{person.salary}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\" style=\"color: #6a8759;\">\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></span></pre>\n<p>If we now rebuild our Project and refresh our people page we receive this dynamic content:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-21-at-09.14.36.png\" alt=\"\" width=\"1406\" height=\"373\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-09.14.36-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1gdk6qb94kk\">Formatting Dates and Numbers</h2>\n<p>To format the Dates and Currency (Salary) we should not modify our Person.java Class, since this Class is part of the Service Layer, not the Presentation Layer. What we should do instead is create new Formatter Classes which make use of the Spring Formatter and can act directory on. the Presentation Layer:</p>\n<p>peopledbweb/web/formatter/BigDecimalFormatter.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">package</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">ch</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.finecloud</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.peopledbweb</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.web</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.formatter</span>;\n\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">org</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Formatter</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">org</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.stereotype</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Component</span>;\n\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.math</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.BigDecimal</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.text</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.NumberFormat</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.text</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.ParseException</span>;\n<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">import</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">java</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.util</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Locale</span>;\n\n@<span class=\"hljs-keyword\" style=\"color: #cc7832;\">Component</span>\npublic class BigDecimalFormatter implements Formatter&lt;BigDecimal&gt; {\n\n    @<span class=\"hljs-keyword\" style=\"color: #cc7832;\">Override</span>\n    public BigDecimal parse(String text, Locale locale) throws ParseException {\n        <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">null</span>;\n    }\n\n    @<span class=\"hljs-keyword\" style=\"color: #cc7832;\">Override</span>\n    public String print(BigDecimal object, Locale locale) {\n        <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">NumberFormat</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.getCurrencyInstance</span>(<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">locale</span>)<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span>(<span class=\"hljs-selector-tag\" style=\"color: #cc7832;\">object</span>);\n    }\n}\n</pre>\n<p>peopledbweb/web/formatter/LocalDateFormatter.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">package ch<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.finecloud</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.peopledbweb</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.web</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.formatter</span>;\n\nimport org<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Formatter</span>;\nimport org<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.springframework</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.stereotype</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Component</span>;\n\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.text</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.ParseException</span>;\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.time</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.LocalDate</span>;\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.time</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.DateTimeFormatter</span>;\nimport java<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.util</span><span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.Locale</span>;\n\n<span class=\"hljs-variable\" style=\"color: #629755;\">@Component</span>\npublic class LocalDateFormatter implements Formatter&lt;LocalDate&gt; {\n\n    private final DateTimeFormatter dateTimeFormatter = DateTimeFormatter<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.ofPattern</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dd. MMMM, yyyy\"</span>);\n\n    <span class=\"hljs-variable\" style=\"color: #629755;\">@Override</span>\n    public LocalDate parse(String text, Locale locale) throws ParseException {\n        return LocalDate<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.parse</span>(text, dateTimeFormatter);\n    }\n\n    <span class=\"hljs-variable\" style=\"color: #629755;\">@Override</span>\n    public String print(LocalDate object, Locale locale) {\n        return dateTimeFormatter<span class=\"hljs-selector-class\" style=\"color: #e8bf6a;\">.format</span>(object);\n    }\n}\n</pre>\n<p>we also need to put the dob and salary table declaration into one more pair of curly braces:</p>\n<p><code>            &lt;td th:text=\"${{person.dob}}\"&gt;@mdo&lt;/td&gt;</code><br><code>            &lt;td th:text=\"${{person.salary}}\"&gt;@mdo&lt;/td&gt;</code></p>\n<p>If we not rebuild our Project we get beck those values nicely formatted:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.finecloud.ch/media/posts/65/Screenshot-2022-09-21-at-11.10.16-2.png\" alt=\"\" width=\"1442\" height=\"374\" sizes=\"100vw\" srcset=\"https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-xs.png 300w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-sm.png 480w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-md.png 768w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-lg.png 1024w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-xl.png 1360w ,https://www.finecloud.ch/media/posts/65/responsive/Screenshot-2022-09-21-at-11.10.16-2-2xl.png 1600w\"></figure>\n<h2 id=\"mcetoc_1gdk6qb94kl\">Introducing Spring Data</h2>\n<p>Until now we have worked with very static data. Lets change this by adding real <a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" rel=\"nofollow\">CRUD</a> functionality.</p>\n<p>Now we're going to introduce the third part of our three tier architecture. And that is the data. Lets create a new package called <em>data</em>. Under the data package, we create a new Java Interfacee called <em>PersonRepository</em> with this content:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.data;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.data.repository.CrudRepository;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Repository;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Repository</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">interface</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PersonRepository</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">extends</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">CrudRepository</span>&lt;<span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span>, <span class=\"hljs-title\" style=\"color: #ffc66d;\">Long</span>&gt; </span>{\n}\n</pre>\n<p>The first will be the type of the domain model class that I want this repository to be responsible for or work with, and that would be our person class. The other type, though, which I will separate with a comma. The second type will be the data type of the ID property of the person class, that would be, in our case, long. And then I need to annotate this interface so that when spring is starting up or in this case, spring<br>data is starting up. It can scan through all of the classes that I have here, and it will find this interface and know that it should treat this interface as an actual data repository.<br>To do that, we will use another annotation of the spring framework, which is <em>@Repository. </em>That's all I have to do to make a repository with full crud capabilities.<br><br>We need to go into the person class now and make a few little alterations here:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.biz.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.AllArgsConstructor;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.Data;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.NoArgsConstructor;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Entity;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.GeneratedValue;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Id;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Data</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@AllArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@NoArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Entity</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Id</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GeneratedValue</span>\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> LocalDate dob;\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary;\n}\n</pre>\n<p>Lets create a Class to load the Persons:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.data;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.boot.ApplicationArguments;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.boot.ApplicationRunner;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Component;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.util.List;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Component</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PersonDataLoader</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">implements</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">ApplicationRunner</span> </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> PersonRepository personRepository;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PersonDataLoader</span><span class=\"hljs-params\">(PersonRepository personRepository)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.personRepository = personRepository;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">void</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">run</span><span class=\"hljs-params\">(ApplicationArguments args)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> Exception </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (personRepository.count() == <span class=\"hljs-number\" style=\"color: #6897bb;\">0</span>) {\n            List&lt;Person&gt; people = List.of(\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Pete\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Snake\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1950</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">8</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">50000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jennifer\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Smith\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1960</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">7</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">60000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Mark\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jackson\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1970</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Vishnu\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Norris\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1971</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Alice\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Jane\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1972</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">3</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">6</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">70000</span>)),\n                    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Daniel\"</span>, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Norris\"</span>, LocalDate.of(<span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">4</span>, <span class=\"hljs-number\" style=\"color: #6897bb;\">5</span>), <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> BigDecimal(<span class=\"hljs-number\" style=\"color: #6897bb;\">80000</span>))\n            );\n            personRepository.saveAll(people);\n        }\n    }\n}\n</pre>\n<p>we also need to modify our <em>PeopleController</em>:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.web.controller;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.biz.model.Person;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> ch.finecloud.peopledbweb.data.PersonRepository;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.stereotype.Controller;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.GetMapping;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.ModelAttribute;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> org.springframework.web.bind.annotation.RequestMapping;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Controller</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@RequestMapping</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"/people\"</span>)\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleController</span> </span>{\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> PersonRepository personRepository;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">PeopleController</span><span class=\"hljs-params\">(PersonRepository personRepository)</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">this</span>.personRepository = personRepository;\n    }\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@ModelAttribute</span>(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> Iterable&lt;Person&gt; <span class=\"hljs-title\" style=\"color: #ffc66d;\">getPeople</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> personRepository.findAll();\n    }\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GetMapping</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> String <span class=\"hljs-title\" style=\"color: #ffc66d;\">showPeoplePage</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-string\" style=\"color: #6a8759;\">\"people\"</span>;\n    }\n}\n</pre>\n<h2 id=\"mcetoc_1gdkdrmqkla\">Saving a Person</h2>\n<p>To provide the function to also add new Persons, we first need to create a form in the WebUI to create new People Records:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-meta\" style=\"color: #bbb529;\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"width=device-width, initial-scale=1\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>People<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"stylesheet\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js\"</span> <span class=\"hljs-attr\">integrity</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8\"</span> <span class=\"hljs-attr\">crossorigin</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"anonymous\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col-md-8 col-sm-10 mx-auto mt-5 my-5\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>People List<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"table table-bordered table-sm\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>ID<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>DOB<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>EMail<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"col\"</span>&gt;</span>Salary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">thead</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${#lists.isEmpty(people)}\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">colspan</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"6\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"text-center\"</span>&gt;</span>No Data<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"person : ${people}\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"row\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.id}\"</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">th</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.lastName}\"</span>&gt;</span>Mark<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.firstName}\"</span>&gt;</span>Otto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${{person.dob}}\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person.email}\"</span>&gt;</span>Otto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${{person.salary}}\"</span>&gt;</span>@mdo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">td</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tr</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">tbody</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">table</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>Person Form<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">form</span> <span class=\"hljs-attr\">th:object</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"${person}\"</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"post\"</span> <span class=\"hljs-attr\">novalidate</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"firstName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>First Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"text\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"firstName\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{firstName}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"firstNameHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationFirstName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{firstName}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"lastName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Last Name<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"text\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"lastName\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{lastName}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"lastNameHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationLastName\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{lastName}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dob\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Date of Birth<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"date\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dob\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{dob}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"dobHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationDOB\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{dob}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"email\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Email address<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"email\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"email\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{email}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"emailHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationEmail\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{email}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"mb-3\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"salary\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-label\"</span>&gt;</span>Salary<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"number\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"form-control\"</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"salary\"</span> <span class=\"hljs-attr\">th:field</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{salary}\"</span> <span class=\"hljs-attr\">th:errorclass</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"is-invalid\"</span> <span class=\"hljs-attr\">aria-describedby</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"salaryHelp\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"validationSalary\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"invalid-feedback\"</span> <span class=\"hljs-attr\">th:errors</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"*{salary}\"</span>&gt;</span>\n            Please choose a username.\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"submit\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\" style=\"color: #6a8759;\">\"btn btn-primary\"</span>&gt;</span>Save Person<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html</span>&gt;</span></pre>\n<p>lets also perform some validation of the entered data:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">package</span> ch.finecloud.peopledbweb.biz.model;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.AllArgsConstructor;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.Data;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> lombok.NoArgsConstructor;\n\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Entity;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.GeneratedValue;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.persistence.Id;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> javax.validation.constraints.*;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.math.BigDecimal;\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">import</span> java.time.LocalDate;\n\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Data</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@AllArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@NoArgsConstructor</span>\n<span class=\"hljs-meta\" style=\"color: #bbb529;\">@Entity</span>\n<span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">class</span> <span class=\"hljs-title\" style=\"color: #ffc66d;\">Person</span> </span>{\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Id</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@GeneratedValue</span>\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Long id;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotEmpty</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"First name can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String firstName;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotEmpty</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Last name can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String lastName;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Past</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Date of Birth must be in the Past\"</span>)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotNull</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Date of Birth can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> LocalDate dob;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Email</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Email must be valid\"</span>)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotEmpty</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Email can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> String email;\n\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@DecimalMin</span>(value = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"1000.00\"</span>, message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"Salary must be at least 1000.00\"</span>)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@NotNull</span>(message = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"salary can not be empty\"</span>)\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> BigDecimal salary;\n}\n\n</pre>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "tomcat",
                   "thymeleaf",
                   "sql",
                   "spring-framework",
                   "spring",
                   "software development",
                   "java",
                   "http",
                   "gui",
                   "dev",
                   "database"
            ],
            "date_published": "2022-09-23T07:41:59+02:00",
            "date_modified": "2022-09-23T07:41:59+02:00"
        },
        {
            "id": "https://www.finecloud.ch/java-and-databases-use-sql-joins.html",
            "url": "https://www.finecloud.ch/java-and-databases-use-sql-joins.html",
            "title": "Java and databases use SQL joins",
            "summary": "Introduction Let's imagine we have two Tables now, people and addresses. We want to find out how many people live at the same address. This is our current Java and SQL approach: repository/PeopleRepository.java @Override @SQL(value = FIND_BY_ID_SQL, operationType = CrudOperation.FIND_BY_ID) @SQL(value = FIND_ALL_SQL, operationType =&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1gcir99tn29\">Introduction</a></li>\n<li><a href=\"#mcetoc_1gcir99tn2a\">What is a SQL JOIN</a></li>\n<li><a href=\"#mcetoc_1gcitc0o233\">How does it work</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1gcir99tn29\">Introduction</h2>\n<p>Let's imagine we have two Tables now, people and addresses. We want to find out how many people live at the same address. This is our current Java and SQL approach:</p>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_BY_ID_SQL, operationType = CrudOperation.FIND_BY_ID)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_ALL_SQL, operationType = CrudOperation.FIND_ALL)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = SELECT_COUNT_SQL, operationType =  CrudOperation.COUNT)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_IN_SQL, operationType = CrudOperation.DELETE_MANY)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_SQL, operationType = CrudOperation.DELETE_ONE)\n    <span class=\"hljs-function\">Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n        String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n        ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n        BigDecimal salary = rs.getBigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SALARY\"</span>);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> homeAddressId = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"HOME_ADDRESS\"</span>);\n        Optional&lt;Address&gt; homeAddress = addressRepository.findById(homeAddressId);\n        Person person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(personID, firstName, lastName, dob, salary);\n        person.setHomeAddress(homeAddress.orElse(<span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>));\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> person;\n    }</pre>\n<p>repository/AddressRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(operationType = CrudOperation.FIND_BY_ID, value= <span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\n            SELECT ID, STREET_ADDRESS, ADDRESS2, CITY, STATE, POSTCODE, COUNTY, REGION, COUNTRY\n            FROM ADDRESSES\n            WHERE ID = ?\n            \"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span>)\n    <span class=\"hljs-function\">Address <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> id = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String streetAddress = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"STREET_ADDRESS\"</span>);\n        String address2 = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ADDRESS2\"</span>);\n        String city = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"CITY\"</span>);\n        String state = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"STATE\"</span>);\n        String postcode = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"POSTCODE\"</span>);\n        String county = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTY\"</span>);\n        Region region = Region.valueOf(rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"REGION\"</span>).toUpperCase());\n        String country = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTRY\"</span>);\n        Address address = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Address(id, streetAddress, address2, city, state, postcode, county, country, region);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> address;\n    }</pre>\n<p>The problem with this current approve, is that we would need two SQL queries for each person record, one to get the Person and one to get the address. Since Java methods to retrieve data from an SQL DB are declared as expensive operation in terms of time and performance efficiency this is not a good approach. So how could we optimize this?</p>\n<p>One possible answer to this problem are making use of SQL JOIN.</p>\n<h2 id=\"mcetoc_1gcir99tn2a\">What is a SQL JOIN</h2>\n<p>A JOIN combines records from two tables. JOIN matches related column values in two tables. A query can contain zero, one, or multiple JOIN operations. You can already imagine that this allows us to retrieve all our wanted data by just one SQL JOIN query.</p>\n<h2 id=\"mcetoc_1gcitc0o233\">How does it work</h2>\n<p>Let's look at some sample data:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> HOME_ADDRESS = <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>;</pre>\n<p>output: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">     <span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">FIRST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">LAST_NAME</span>           <span class=\"hljs-comment\" style=\"color: grey;\">DOB</span>           <span class=\"hljs-comment\" style=\"color: grey;\">SALARY</span>  <span class=\"hljs-comment\" style=\"color: grey;\">DELETE_FLAG</span>  <span class=\"hljs-comment\" style=\"color: grey;\">EMAIL</span>   <span class=\"hljs-comment\" style=\"color: grey;\">HOME_ADDRESS</span>\n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">5001254</span>  <span class=\"hljs-comment\" style=\"color: grey;\">jooonyy</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Smith</span>      <span class=\"hljs-comment\" style=\"color: grey;\">1982</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">09</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">13</span> <span class=\"hljs-comment\" style=\"color: grey;\">00:51:54</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span><span class=\"hljs-comment\" style=\"color: grey;\">0</span>       <span class=\"hljs-comment\" style=\"color: grey;\">0</span>  &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;       &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;             <span class=\"hljs-comment\" style=\"color: grey;\">2</span></pre>\n<p>as we can see this record has the address foreign key  2 and if we query for this record, we get this output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ID</span> = <span class=\"hljs-number\" style=\"color: #6897bb;\">2</span>;</pre>\n<p>output: </p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">STREET_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">ADDRESS2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">CITY</span>       <span class=\"hljs-comment\" style=\"color: grey;\">STATE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">POSTCODE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTY</span>         <span class=\"hljs-comment\" style=\"color: grey;\">REGION</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTRY</span>      \n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n <span class=\"hljs-comment\" style=\"color: grey;\">2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">123</span> <span class=\"hljs-comment\" style=\"color: grey;\">Bale</span> <span class=\"hljs-comment\" style=\"color: grey;\">St</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span>    <span class=\"hljs-comment\" style=\"color: grey;\">Apt</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span> <span class=\"hljs-comment\" style=\"color: grey;\">1A</span>   <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span> <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WA</span>     <span class=\"hljs-comment\" style=\"color: grey;\">90210</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Fulton</span> <span class=\"hljs-comment\" style=\"color: grey;\">County</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WEST</span>    <span class=\"hljs-comment\" style=\"color: grey;\">United</span> <span class=\"hljs-comment\" style=\"color: grey;\">States</span></pre>\n<p>Now, when we are joining multiple tables together, it is very common to make use of something called table aliases. And that's where we can simply give our tables and additional name or alias that we can use to refer to those individual tables columns.<br><br>The reason for this is because when you're joining two or more tables together, some of the columns of those tables may have the same names. So, for example, our people table has an ID column, so does our addresses table. So if you wanted to be able to retrieve various information from either of those particular columns, how could you specify which ID column you're talking about? The people one or the addresses one?Well, you can prefix the ID column of either of these tables with an alias.<br><br>So let's see how that would look like:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">JOIN</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> ADDRESS <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ON</span> PEOPLE.HOME_ADDRESS = ADDRESS.ID;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">     <span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">FIRST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">LAST_NAME</span>           <span class=\"hljs-comment\" style=\"color: grey;\">DOB</span>           <span class=\"hljs-comment\" style=\"color: grey;\">SALARY</span>  <span class=\"hljs-comment\" style=\"color: grey;\">DELETE_FLAG</span>  <span class=\"hljs-comment\" style=\"color: grey;\">EMAIL</span>   <span class=\"hljs-comment\" style=\"color: grey;\">HOME_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">ID</span>  <span class=\"hljs-comment\" style=\"color: grey;\">STREET_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">ADDRESS2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">CITY</span>       <span class=\"hljs-comment\" style=\"color: grey;\">STATE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">POSTCODE</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTY</span>         <span class=\"hljs-comment\" style=\"color: grey;\">REGION</span>  <span class=\"hljs-comment\" style=\"color: grey;\">COUNTRY</span>      \n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">5001254</span>  <span class=\"hljs-comment\" style=\"color: grey;\">jooonyy</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Smith</span>      <span class=\"hljs-comment\" style=\"color: grey;\">1982</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">09</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-comment\" style=\"color: grey;\">13</span> <span class=\"hljs-comment\" style=\"color: grey;\">00:51:54</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span><span class=\"hljs-comment\" style=\"color: grey;\">0</span>       <span class=\"hljs-comment\" style=\"color: grey;\">0</span>  &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;       &lt;<span class=\"hljs-comment\" style=\"color: grey;\">null</span>&gt;             <span class=\"hljs-comment\" style=\"color: grey;\">2</span>   <span class=\"hljs-comment\" style=\"color: grey;\">2</span>  <span class=\"hljs-comment\" style=\"color: grey;\">123</span> <span class=\"hljs-comment\" style=\"color: grey;\">Bale</span> <span class=\"hljs-comment\" style=\"color: grey;\">St</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span>    <span class=\"hljs-comment\" style=\"color: grey;\">Apt</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span> <span class=\"hljs-comment\" style=\"color: grey;\">1A</span>   <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span> <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WA</span>     <span class=\"hljs-comment\" style=\"color: grey;\">90210</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Fulton</span> <span class=\"hljs-comment\" style=\"color: grey;\">County</span>  <span class=\"hljs-comment\" style=\"color: grey;\">WEST</span>    <span class=\"hljs-comment\" style=\"color: grey;\">United</span> <span class=\"hljs-comment\" style=\"color: grey;\">States</span></pre>\n<p>It's one result set row that's combining all of the columns of the people table with all the columns of the address table for this one person. You may be wondering why did we only get one row because we didn't say anything like where home address equals four or something like that. So why did we only get one row? Well, the reason we only got one row in this particular case is because of the type of joint that is executing here. And this particular, joined by default, is what's known as an inner join. All an inner join is is that there has to be a match that satisfies this expression here on both tables, in order for a result set to be returned. Since there's only one record in the people table that has a foreign key that points to an address, and there's only one address that is being used by the people table, we only got back one result set in this particular case.<br><br>However, what if we wanted to be able to retrieve any or all people, whether or not they have a home address specified? And in fact, for our purposes in our code, that's exactly what we're going to need because when we find a person by ID, they might have an address and they might not. We don't want them to not show up just because they did not have an address. So to make that work, that's where we have to perform the left outer join, so that we can make sure that regardless of whether or not there's an address being pointed to, we always get back all of the people that we're looking for. So to do that, all we have to do is specify that we want a left outer join.</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> * <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">LEFT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">OUTER</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">JOIN</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> ADDRESS <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ON</span> PEOPLE.HOME_ADDRESS = ADDRESS.ID <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FETCH</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FIRST</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">10</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ROWS</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ONLY</span>;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">ID  FIRST_NAME  LAST_NAME           DOB           SALARY  DELETE_FLAG  EMAIL   HOME_ADDRESS      ID  STREET_ADDRESS  ADDRESS2  CITY    STATE   POSTCODE  COUNTY  REGION  COUNTRY\n<span class=\"hljs-comment\" style=\"color: grey;\">--  ----------  ---------  ---------------------  ------  -----------  ------  ------------  ------  --------------  --------  ------  ------  --------  ------  ------  -------</span>\n<span class=\"hljs-number\" style=\"color: #6897bb;\">12</span>  Harry       Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">1950</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-03</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">10</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">45</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">10.0</span>  <span class=\"hljs-number\" style=\"color: #6897bb;\">100000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">14</span>  Jack        Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">2000</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-01</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-10</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">08</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">45</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">10.0</span>   <span class=\"hljs-number\" style=\"color: #6897bb;\">50000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>  Mary        Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">2005</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-05</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-13</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">17</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">30</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">10.0</span>   <span class=\"hljs-number\" style=\"color: #6897bb;\">20000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">16</span>  Sabrina     Jonson     <span class=\"hljs-number\" style=\"color: #6897bb;\">1951</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-10</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-31</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">19</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">43.0</span>  <span class=\"hljs-number\" style=\"color: #6897bb;\">200000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">false</span>        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">18</span>  Jake        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1970</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-10</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-31</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">19</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">13</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">43.0</span>   <span class=\"hljs-number\" style=\"color: #6897bb;\">75000</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">true</span>         &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">19</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">20</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>  Bobby       Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1982</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-09</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-13</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">00</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">51</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">54.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">22</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; \n<span class=\"hljs-number\" style=\"color: #6897bb;\">23</span>  John        Smith      <span class=\"hljs-number\" style=\"color: #6897bb;\">1980</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-11</span><span class=\"hljs-number\" style=\"color: #6897bb;\">-15</span> <span class=\"hljs-number\" style=\"color: #6897bb;\">21</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">15</span>:<span class=\"hljs-number\" style=\"color: #6897bb;\">00.0</span>  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;       &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;        &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;          &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;    &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt;  &lt;<span class=\"hljs-literal\" style=\"color: #6897bb;\">null</span>&gt; </pre>\n<p>But for our situation we need something like this:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">SELECT</span> P.FIRST_NAME,P.LAST_NAME,A.STREET_ADDRESS,A.CITY <span class=\"hljs-keyword\" style=\"color: #cc7832;\">FROM</span> PEOPLE <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> P <span class=\"hljs-keyword\" style=\"color: #cc7832;\">LEFT</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">OUTER</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">JOIN</span> ADDRESSES <span class=\"hljs-keyword\" style=\"color: #cc7832;\">AS</span> A <span class=\"hljs-keyword\" style=\"color: #cc7832;\">ON</span> P.HOME_ADDRESS = A.ID <span class=\"hljs-keyword\" style=\"color: #cc7832;\">WHERE</span> P.ID = <span class=\"hljs-number\" style=\"color: #6897bb;\">5001254</span>;</pre>\n<p>output:</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\"><span class=\"hljs-comment\" style=\"color: grey;\">FIRST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">LAST_NAME</span>  <span class=\"hljs-comment\" style=\"color: grey;\">STREET_ADDRESS</span>  <span class=\"hljs-comment\" style=\"color: grey;\">CITY</span>     \n<span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>  <span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span><span class=\"hljs-literal\" style=\"color: #6897bb;\">-</span>\n<span class=\"hljs-comment\" style=\"color: grey;\">jooonyy</span>     <span class=\"hljs-comment\" style=\"color: grey;\">Smith</span>      <span class=\"hljs-comment\" style=\"color: grey;\">123</span> <span class=\"hljs-comment\" style=\"color: grey;\">Bale</span> <span class=\"hljs-comment\" style=\"color: grey;\">St</span><span class=\"hljs-string\" style=\"color: #6a8759;\">.</span>    <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span> <span class=\"hljs-comment\" style=\"color: grey;\">Wala</span></pre>\n<p>Lets have a look how this will finally look like in our Java code:</p>\n<p>repository/PeopleRepository.java</p>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">public</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">static</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">final</span> String FIND_BY_ID_SQL = <span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\n        SELECT \n        P.ID, P.FIRST_NAME, P.LAST_NAME, P.DOB, P.SALARY, P.HOME_ADDRESS,\n        HOME.ID as HOME_ID, HOME.STREET_ADDRESS as HOME_STREET_ADDRESS, HOME.ADDRESS2 as HOME_ADDRESS2, HOME.CITY as HOME_CITY, HOME.STATE as HOME_STATE, HOME.POSTCODE as HOME_POSTCODE, HOME.COUNTY as HOME_COUNTY, HOME.REGION as HOME_REGION, HOME.COUNTRY as HOME_COUNTRY,\n        BIZ.ID as BIZ_ID, BIZ.STREET_ADDRESS as BIZ_STREET_ADDRESS, BIZ.ADDRESS2 as BIZ_ADDRESS2, BIZ.CITY as BIZ_CITY, BIZ.STATE as BIZ_STATE, BIZ.POSTCODE as BIZ_POSTCODE, BIZ.COUNTY as BIZ_COUNTY, BIZ.REGION as BIZ_REGION, BIZ.COUNTRY as BIZ_COUNTRY,\n        FROM PEOPLE AS P\n        LEFT OUTER JOIN ADDRESSES AS HOME ON P.HOME_ADDRESS = HOME.ID\n        LEFT OUTER JOIN ADDRESSES AS BIZ ON P.BIZ_ADDRESS = BIZ.ID\n        WHERE P.ID=?\"</span><span class=\"hljs-string\" style=\"color: #6a8759;\">\"\"</span>;</pre>\n<pre class=\"hljs\" style=\"color: #a9b7c6; background: #282b2e none repeat scroll 0% 0%; display: block; overflow-x: auto; padding: 0.5em;\">    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@Override</span>\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_BY_ID_SQL, operationType = CrudOperation.FIND_BY_ID)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = FIND_ALL_SQL, operationType = CrudOperation.FIND_ALL)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = SELECT_COUNT_SQL, operationType =  CrudOperation.COUNT)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_IN_SQL, operationType = CrudOperation.DELETE_MANY)\n    <span class=\"hljs-meta\" style=\"color: #bbb529;\">@SQL</span>(value = DELETE_SQL, operationType = CrudOperation.DELETE_ONE)\n    <span class=\"hljs-function\">Person <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractEntityFromResultSet</span><span class=\"hljs-params\">(ResultSet rs)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">long</span> personID = rs.getLong(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>);\n        String firstName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"FIRST_NAME\"</span>);\n        String lastName = rs.getString(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"LAST_NAME\"</span>);\n        ZonedDateTime dob = ZonedDateTime.of(rs.getTimestamp(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"DOB\"</span>).toLocalDateTime(), ZoneId.of(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"+0\"</span>));\n        BigDecimal salary = rs.getBigDecimal(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"SALARY\"</span>);\n<span class=\"hljs-comment\" style=\"color: grey;\">//        long homeAddressId = rs.getLong(\"HOME_ADDRESS\");</span>\n\n        Address homeAddress = extractAddress(rs, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"HOME_\"</span>);\n        Address bizAddress = extractAddress(rs, <span class=\"hljs-string\" style=\"color: #6a8759;\">\"BIZ_\"</span>);\n\n        Person person = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Person(personID, firstName, lastName, dob, salary);\n        person.setHomeAddress(homeAddress);\n        person.setBusinessAddress(bizAddress);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> person;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> Address <span class=\"hljs-title\" style=\"color: #ffc66d;\">extractAddress</span><span class=\"hljs-params\">(ResultSet rs, String aliasPrefix)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        Long addrId = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"ID\"</span>, rs, Long.class);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (addrId == <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>) <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">null</span>;\n        String streetAddress = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"STREET_ADDRESS\"</span>, rs, String.class);\n        String address2 = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"ADDRESS2\"</span>, rs, String.class);\n        String city = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"CITY\"</span>, rs, String.class);\n        String state = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"STATE\"</span>, rs, String.class);\n        String postcode = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"POSTCODE\"</span>, rs, String.class);\n        String county = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTY\"</span>, rs, String.class);\n        Region region = Region.valueOf(getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"REGION\"</span>, rs, String.class).toUpperCase());\n        String country = getValueByAlias(aliasPrefix + <span class=\"hljs-string\" style=\"color: #6a8759;\">\"COUNTRY\"</span>, rs, String.class);\n        Address address = <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> Address(addrId, streetAddress, address2, city, state, postcode, country, county, region);\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> address;\n    }\n\n    <span class=\"hljs-keyword\" style=\"color: #cc7832;\">private</span> &lt;T&gt; <span class=\"hljs-function\">T <span class=\"hljs-title\" style=\"color: #ffc66d;\">getValueByAlias</span><span class=\"hljs-params\">(String alias, ResultSet rs, Class&lt;T&gt; clazz)</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throws</span> SQLException </span>{\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> columnCount = rs.getMetaData().getColumnCount();\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">for</span> (<span class=\"hljs-keyword\" style=\"color: #cc7832;\">int</span> colIdX = <span class=\"hljs-number\" style=\"color: #6897bb;\">1</span>; colIdX &lt; columnCount; colIdX++) {\n            <span class=\"hljs-keyword\" style=\"color: #cc7832;\">if</span> (alias.equals(rs.getMetaData().getColumnLabel(colIdX))) {\n                <span class=\"hljs-keyword\" style=\"color: #cc7832;\">return</span> (T) rs.getObject(colIdX);\n            }\n        }\n        <span class=\"hljs-keyword\" style=\"color: #cc7832;\">throw</span> <span class=\"hljs-keyword\" style=\"color: #cc7832;\">new</span> SQLException(String.format(<span class=\"hljs-string\" style=\"color: #6a8759;\">\"Column not found for alias: '%s'\"</span>, alias));\n    }</pre>\n<p> </p>",
            "author": {
                "name": "Finecloud"
            },
            "tags": [
                   "sql",
                   "software development",
                   "java basics",
                   "java",
                   "dev",
                   "database"
            ],
            "date_published": "2022-09-13T11:41:52+02:00",
            "date_modified": "2022-09-13T11:41:52+02:00"
        }
    ]
}
